# Generated file. To retain edits, remove this comment.

from itkwasm.pyodide import JsPackageConfig, JsPackage

from ._version import __version__
default_js_module = """data:text/javascript;base64,dmFyIGR0PU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgcHQ9KEEsdCk9Pntmb3IodmFyIGUgaW4gdClkdChBLGUse2dldDp0W2VdLGVudW1lcmFibGU6ITB9KX07dmFyIG10PXtJbnQ4OiJpbnQ4IixVSW50ODoidWludDgiLEludDE2OiJpbnQxNiIsVUludDE2OiJ1aW50MTYiLEludDMyOiJpbnQzMiIsVUludDMyOiJ1aW50MzIiLEludDY0OiJpbnQ2NCIsVUludDY0OiJ1aW50NjQiLFNpemVWYWx1ZVR5cGU6InVpbnQ2NCIsSWRlbnRpZmllclR5cGU6InVpbnQ2NCIsSW5kZXhWYWx1ZVR5cGU6ImludDY0IixPZmZzZXRWYWx1ZVR5cGU6ImludDY0In0saD1tdDt2YXIgaHQ9e0Zsb2F0MzI6ImZsb2F0MzIiLEZsb2F0NjQ6ImZsb2F0NjQiLFNwYWNlUHJlY2lzaW9uVHlwZToiZmxvYXQ2NCJ9LEg9aHQ7ZnVuY3Rpb24geXQoQSx0KXtsZXQgZT1udWxsO3N3aXRjaChBKXtjYXNlIGguVUludDg6e2U9bmV3IFVpbnQ4QXJyYXkodCk7YnJlYWt9Y2FzZSBoLkludDg6e2U9bmV3IEludDhBcnJheSh0KTticmVha31jYXNlIGguVUludDE2OntlPW5ldyBVaW50MTZBcnJheSh0KTticmVha31jYXNlIGguSW50MTY6e2U9bmV3IEludDE2QXJyYXkodCk7YnJlYWt9Y2FzZSBoLlVJbnQzMjp7ZT1uZXcgVWludDMyQXJyYXkodCk7YnJlYWt9Y2FzZSBoLkludDMyOntlPW5ldyBJbnQzMkFycmF5KHQpO2JyZWFrfWNhc2UgaC5VSW50NjQ6e3R5cGVvZiBnbG9iYWxUaGlzLkJpZ1VpbnQ2NEFycmF5PT0iZnVuY3Rpb24iP2U9bmV3IEJpZ1VpbnQ2NEFycmF5KHQpOmU9bmV3IFVpbnQ4QXJyYXkodCk7YnJlYWt9Y2FzZSBoLkludDY0Ont0eXBlb2YgZ2xvYmFsVGhpcy5CaWdJbnQ2NEFycmF5PT0iZnVuY3Rpb24iP2U9bmV3IEJpZ0ludDY0QXJyYXkodCk6ZT1uZXcgVWludDhBcnJheSh0KTticmVha31jYXNlIEguRmxvYXQzMjp7ZT1uZXcgRmxvYXQzMkFycmF5KHQpO2JyZWFrfWNhc2UgSC5GbG9hdDY0OntlPW5ldyBGbG9hdDY0QXJyYXkodCk7YnJlYWt9Y2FzZSJudWxsIjp7ZT1udWxsO2JyZWFrfWNhc2UgbnVsbDp7ZT1udWxsO2JyZWFrfWRlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJUeXBlIGlzIG5vdCBzdXBwb3J0ZWQgYXMgYSBUeXBlZEFycmF5Iil9cmV0dXJuIGV9dmFyIEw9eXQ7dmFyIHd0PXtVbmtub3duOiJVbmtub3duIixTY2FsYXI6IlNjYWxhciIsUkdCOiJSR0IiLFJHQkE6IlJHQkEiLE9mZnNldDoiT2Zmc2V0IixWZWN0b3I6IlZlY3RvciIsUG9pbnQ6IlBvaW50IixDb3ZhcmlhbnRWZWN0b3I6IkNvdmFyaWFudFZlY3RvciIsU3ltbWV0cmljU2Vjb25kUmFua1RlbnNvcjoiU3ltbWV0cmljU2Vjb25kUmFua1RlbnNvciIsRGlmZnVzaW9uVGVuc29yM0Q6IkRpZmZ1c2lvblRlbnNvcjNEIixDb21wbGV4OiJDb21wbGV4IixGaXhlZEFycmF5OiJGaXhlZEFycmF5IixBcnJheToiQXJyYXkiLE1hdHJpeDoiTWF0cml4IixWYXJpYWJsZUxlbmd0aFZlY3RvcjoiVmFyaWFibGVMZW5ndGhWZWN0b3IiLFZhcmlhYmxlU2l6ZU1hdHJpeDoiVmFyaWFibGVTaXplTWF0cml4In0sb2U9d3Q7dmFyIHdBPWNsYXNze2RpbWVuc2lvbjtjb21wb25lbnRUeXBlO3BpeGVsVHlwZTtjb21wb25lbnRzO2NvbnN0cnVjdG9yKHQ9MixlPWguVUludDgscj1vZS5TY2FsYXIsbj0xKXt0aGlzLmRpbWVuc2lvbj10LHRoaXMuY29tcG9uZW50VHlwZT1lLHRoaXMucGl4ZWxUeXBlPXIsdGhpcy5jb21wb25lbnRzPW59fSxhZT13QTtmdW5jdGlvbiBEdChBLHQsZSxyLG4pe0FbcitlKnRdPW59dmFyIHNlPUR0O3ZhciBEQT1jbGFzc3tpbWFnZVR5cGU7bmFtZT0iaW1hZ2UiO29yaWdpbjtzcGFjaW5nO2RpcmVjdGlvbjtzaXplO21ldGFkYXRhO2RhdGE7Y29uc3RydWN0b3IodD1uZXcgYWUpe3RoaXMuaW1hZ2VUeXBlPXQ7bGV0IGU9dC5kaW1lbnNpb247dGhpcy5vcmlnaW49bmV3IEFycmF5KGUpLHRoaXMub3JpZ2luLmZpbGwoMCksdGhpcy5zcGFjaW5nPW5ldyBBcnJheShlKSx0aGlzLnNwYWNpbmcuZmlsbCgxKSx0aGlzLmRpcmVjdGlvbj1uZXcgRmxvYXQ2NEFycmF5KGUqZSksdGhpcy5kaXJlY3Rpb24uZmlsbCgwKTtmb3IobGV0IHI9MDtyPGU7cisrKXNlKHRoaXMuZGlyZWN0aW9uLGUscixyLDEpO3RoaXMuc2l6ZT1uZXcgQXJyYXkoZSksdGhpcy5zaXplLmZpbGwoMCksdGhpcy5tZXRhZGF0YT1uZXcgTWFwLHRoaXMuZGF0YT1udWxsfX0sSWU9REE7ZnVuY3Rpb24gU3QoQSl7aWYoQS5sZW5ndGg8MSl0aHJvdyBFcnJvcigiQXQgbGVhc3Qgb25lIGltYWdlcyBpcyByZXF1aXJlZC4iKTtsZXQgdD1BWzBdO2lmKHQuZGF0YT09PW51bGwpdGhyb3cgRXJyb3IoIkltYWdlIGRhdGEgaXMgbnVsbC4iKTtsZXQgZT1uZXcgSWUodC5pbWFnZVR5cGUpO2Uub3JpZ2luPUFycmF5LmZyb20odC5vcmlnaW4pLGUuc3BhY2luZz1BcnJheS5mcm9tKHQuc3BhY2luZyk7bGV0IHI9ZS5pbWFnZVR5cGUuZGltZW5zaW9uO2UuZGlyZWN0aW9uPXQuZGlyZWN0aW9uLnNsaWNlKCk7bGV0IG49ci0xO2Uuc2l6ZT1BcnJheS5mcm9tKHQuc2l6ZSk7bGV0IG89QS5yZWR1Y2UoKHMsYSk9PnMrYS5zaXplW25dLDApO2Uuc2l6ZVtuXT1vO2xldCBpPWUuc2l6ZS5yZWR1Y2UoKHMsYSk9PnMqYSwxKSplLmltYWdlVHlwZS5jb21wb25lbnRzLGc9dC5kYXRhLmNvbnN0cnVjdG9yO2UuZGF0YT1uZXcgZyhpKTtsZXQgQz1lLmltYWdlVHlwZS5jb21wb25lbnRzO2ZvcihsZXQgcz0wO3M8ZS5zaXplLmxlbmd0aC0xO3MrKylDKj1lLnNpemVbc107bGV0IGw9MDtpZihlLmRhdGEhPW51bGwpZm9yKGxldCBzPTA7czxBLmxlbmd0aDtzKyspZS5kYXRhLnNldChBW3NdLmRhdGEsQypsKSxsKz1BW3NdLnNpemVbbl07ZWxzZSB0aHJvdyBFcnJvcigiQ291bGQgbm90IGNyZWF0ZSByZXN1bHQgaW1hZ2UgZGF0YS4iKTtyZXR1cm4gZX12YXIgU0E9U3Q7dmFyIEZBPWNsYXNze2Zjbjt3b3JrZXJRdWV1ZTtydW5JbmZvO2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5mY249ZSx0aGlzLndvcmtlclF1ZXVlPW5ldyBBcnJheSh0KSx0aGlzLndvcmtlclF1ZXVlLmZpbGwobnVsbCksdGhpcy5ydW5JbmZvPVtdfXJ1blRhc2tzKHQsZT1udWxsKXtsZXQgcj17dGFza1F1ZXVlOltdLHJlc3VsdHM6W10sYWRkaW5nVGFza3M6ITEscG9zdHBvbmVkOiExLHJ1bm5pbmdXb3JrZXJzOjAsaW5kZXg6MCxjb21wbGV0ZWRUYXNrczowLHByb2dyZXNzQ2FsbGJhY2s6ZSxjYW5jZWxlZDohMX07cmV0dXJuIHRoaXMucnVuSW5mby5wdXNoKHIpLHIuaW5kZXg9dGhpcy5ydW5JbmZvLmxlbmd0aC0xLHtwcm9taXNlOm5ldyBQcm9taXNlKChuLG8pPT57ci5yZXNvbHZlPW4sci5yZWplY3Q9byxyLnJlc3VsdHM9bmV3IEFycmF5KHQubGVuZ3RoKSxyLmNvbXBsZXRlZFRhc2tzPTAsci5hZGRpbmdUYXNrcz0hMCx0LmZvckVhY2goKGksZyk9Pnt0aGlzLmFkZFRhc2soci5pbmRleCxnLGkpfSksci5hZGRpbmdUYXNrcz0hMX0pLHJ1bklkOnIuaW5kZXh9fXRlcm1pbmF0ZVdvcmtlcnMoKXtmb3IobGV0IHQ9MDt0PHRoaXMud29ya2VyUXVldWUubGVuZ3RoO3QrKyl7bGV0IGU9dGhpcy53b3JrZXJRdWV1ZVt0XTtlPy50ZXJtaW5hdGUoKSx0aGlzLndvcmtlclF1ZXVlW3RdPW51bGx9fWNhbmNlbCh0KXtsZXQgZT10aGlzLnJ1bkluZm9bdF07ZSE9bnVsbCYmKGUuY2FuY2VsZWQ9ITApfWFkZFRhc2sodCxlLHIpe2xldCBuPXRoaXMucnVuSW5mb1t0XTtpZihuPy5jYW5jZWxlZD09PSEwKXtuLnJlamVjdCgiUmVtYWluaW5nIHRhc2tzIGNhbmNlbGVkIiksdGhpcy5jbGVhclRhc2sobi5pbmRleCk7cmV0dXJufWlmKHRoaXMud29ya2VyUXVldWUubGVuZ3RoPjApe2xldCBvPXRoaXMud29ya2VyUXVldWUucG9wKCk7bi5ydW5uaW5nV29ya2VycysrLHRoaXMuZmNuKG8sLi4ucikudGhlbigoe3dlYldvcmtlcjppLC4uLmd9KT0+e2lmKHRoaXMud29ya2VyUXVldWUucHVzaChpKSx0aGlzLnJ1bkluZm9bdF0hPT1udWxsKXtpZihuLnJ1bm5pbmdXb3JrZXJzLS0sbi5yZXN1bHRzW2VdPWcsbi5jb21wbGV0ZWRUYXNrcysrLG4ucHJvZ3Jlc3NDYWxsYmFjayE9bnVsbCYmbi5wcm9ncmVzc0NhbGxiYWNrKG4uY29tcGxldGVkVGFza3Msbi5yZXN1bHRzLmxlbmd0aCksbi50YXNrUXVldWUubGVuZ3RoPjApe2xldCBDPW4udGFza1F1ZXVlLnNoaWZ0KCk7dGhpcy5hZGRUYXNrKHQsQ1swXSxDWzFdKX1lbHNlIGlmKCFuLmFkZGluZ1Rhc2tzJiZuLnJ1bm5pbmdXb3JrZXJzPT09MCl7bGV0IEM9bi5yZXN1bHRzO24ucmVzb2x2ZShDKSx0aGlzLmNsZWFyVGFzayhuLmluZGV4KX19fSkuY2F0Y2goaT0+e24ucmVqZWN0KGkpLHRoaXMuY2xlYXJUYXNrKG4uaW5kZXgpfSl9ZWxzZSBuLnJ1bm5pbmdXb3JrZXJzIT09MHx8bi5wb3N0cG9uZWQ/bi50YXNrUXVldWUucHVzaChbZSxyXSk6KG4ucG9zdHBvbmVkPSEwLHNldFRpbWVvdXQoKCk9PntuLnBvc3Rwb25lZD0hMSx0aGlzLmFkZFRhc2sobi5pbmRleCxlLHIpfSw1MCkpfWNsZWFyVGFzayh0KXt0aGlzLnJ1bkluZm9bdF0ucmVzdWx0cz1bXSx0aGlzLnJ1bkluZm9bdF0udGFza1F1ZXVlPVtdLHRoaXMucnVuSW5mb1t0XS5wcm9ncmVzc0NhbGxiYWNrPW51bGwsdGhpcy5ydW5JbmZvW3RdLmNhbmNlbGVkPW51bGwsdGhpcy5ydW5JbmZvW3RdLnJlamVjdD0oKT0+e30sdGhpcy5ydW5JbmZvW3RdLnJlc29sdmU9KCk9Pnt9fX0sUkE9RkE7dmFyIEZ0PXtUZXh0RmlsZToiVGV4dEZpbGUiLEJpbmFyeUZpbGU6IkJpbmFyeUZpbGUiLFRleHRTdHJlYW06IlRleHRTdHJlYW0iLEJpbmFyeVN0cmVhbToiQmluYXJ5U3RyZWFtIixJbWFnZToiSW1hZ2UiLE1lc2g6Ik1lc2giLFBvbHlEYXRhOiJQb2x5RGF0YSIsSnNvbkNvbXBhdGlibGU6Ikpzb25Db21wYXRpYmxlIn0sRT1GdDt2YXIgbGU9U3ltYm9sKCJDb21saW5rLnByb3h5IiksUnQ9U3ltYm9sKCJDb21saW5rLmVuZHBvaW50IiksVUE9U3ltYm9sKCJDb21saW5rLnJlbGVhc2VQcm94eSIpLGtBPVN5bWJvbCgiQ29tbGluay5maW5hbGl6ZXIiKSxuQT1TeW1ib2woIkNvbWxpbmsudGhyb3duIiksQmU9QT0+dHlwZW9mIEE9PSJvYmplY3QiJiZBIT09bnVsbHx8dHlwZW9mIEE9PSJmdW5jdGlvbiIsa3Q9e2NhbkhhbmRsZTpBPT5CZShBKSYmQVtsZV0sc2VyaWFsaXplKEEpe2xldHtwb3J0MTp0LHBvcnQyOmV9PW5ldyBNZXNzYWdlQ2hhbm5lbDtyZXR1cm4gY2UoQSx0KSxbZSxbZV1dfSxkZXNlcmlhbGl6ZShBKXtyZXR1cm4gQS5zdGFydCgpLE5BKEEpfX0sYnQ9e2NhbkhhbmRsZTpBPT5CZShBKSYmbkEgaW4gQSxzZXJpYWxpemUoe3ZhbHVlOkF9KXtsZXQgdDtyZXR1cm4gQSBpbnN0YW5jZW9mIEVycm9yP3Q9e2lzRXJyb3I6ITAsdmFsdWU6e21lc3NhZ2U6QS5tZXNzYWdlLG5hbWU6QS5uYW1lLHN0YWNrOkEuc3RhY2t9fTp0PXtpc0Vycm9yOiExLHZhbHVlOkF9LFt0LFtdXX0sZGVzZXJpYWxpemUoQSl7dGhyb3cgQS5pc0Vycm9yP09iamVjdC5hc3NpZ24obmV3IEVycm9yKEEudmFsdWUubWVzc2FnZSksQS52YWx1ZSk6QS52YWx1ZX19LENlPW5ldyBNYXAoW1sicHJveHkiLGt0XSxbInRocm93IixidF1dKTtmdW5jdGlvbiBVdChBLHQpe2ZvcihsZXQgZSBvZiBBKWlmKHQ9PT1lfHxlPT09IioifHxlIGluc3RhbmNlb2YgUmVnRXhwJiZlLnRlc3QodCkpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gY2UoQSx0PWdsb2JhbFRoaXMsZT1bIioiXSl7dC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixmdW5jdGlvbiByKG4pe2lmKCFufHwhbi5kYXRhKXJldHVybjtpZighVXQoZSxuLm9yaWdpbikpe2NvbnNvbGUud2FybihgSW52YWxpZCBvcmlnaW4gJyR7bi5vcmlnaW59JyBmb3IgY29tbGluayBwcm94eWApO3JldHVybn1sZXR7aWQ6byx0eXBlOmkscGF0aDpnfT1PYmplY3QuYXNzaWduKHtwYXRoOltdfSxuLmRhdGEpLEM9KG4uZGF0YS5hcmd1bWVudExpc3R8fFtdKS5tYXAoSiksbDt0cnl7bGV0IHM9Zy5zbGljZSgwLC0xKS5yZWR1Y2UoKGYsQik9PmZbQl0sQSksYT1nLnJlZHVjZSgoZixCKT0+ZltCXSxBKTtzd2l0Y2goaSl7Y2FzZSJHRVQiOmw9YTticmVhaztjYXNlIlNFVCI6c1tnLnNsaWNlKC0xKVswXV09SihuLmRhdGEudmFsdWUpLGw9ITA7YnJlYWs7Y2FzZSJBUFBMWSI6bD1hLmFwcGx5KHMsQyk7YnJlYWs7Y2FzZSJDT05TVFJVQ1QiOntsZXQgZj1uZXcgYSguLi5DKTtsPXh0KGYpfWJyZWFrO2Nhc2UiRU5EUE9JTlQiOntsZXR7cG9ydDE6Zixwb3J0MjpCfT1uZXcgTWVzc2FnZUNoYW5uZWw7Y2UoQSxCKSxsPUdBKGYsW2ZdKX1icmVhaztjYXNlIlJFTEVBU0UiOmw9dm9pZCAwO2JyZWFrO2RlZmF1bHQ6cmV0dXJufX1jYXRjaChzKXtsPXt2YWx1ZTpzLFtuQV06MH19UHJvbWlzZS5yZXNvbHZlKGwpLmNhdGNoKHM9Pih7dmFsdWU6cyxbbkFdOjB9KSkudGhlbihzPT57bGV0W2EsZl09c0Eocyk7dC5wb3N0TWVzc2FnZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sYSkse2lkOm99KSxmKSxpPT09IlJFTEVBU0UiJiYodC5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixyKSx1ZSh0KSxrQSBpbiBBJiZ0eXBlb2YgQVtrQV09PSJmdW5jdGlvbiImJkFba0FdKCkpfSkuY2F0Y2gocz0+e2xldFthLGZdPXNBKHt2YWx1ZTpuZXcgVHlwZUVycm9yKCJVbnNlcmlhbGl6YWJsZSByZXR1cm4gdmFsdWUiKSxbbkFdOjB9KTt0LnBvc3RNZXNzYWdlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxhKSx7aWQ6b30pLGYpfSl9KSx0LnN0YXJ0JiZ0LnN0YXJ0KCl9ZnVuY3Rpb24gTnQoQSl7cmV0dXJuIEEuY29uc3RydWN0b3IubmFtZT09PSJNZXNzYWdlUG9ydCJ9ZnVuY3Rpb24gdWUoQSl7TnQoQSkmJkEuY2xvc2UoKX1mdW5jdGlvbiBOQShBLHQpe3JldHVybiBiQShBLFtdLHQpfWZ1bmN0aW9uIGlBKEEpe2lmKEEpdGhyb3cgbmV3IEVycm9yKCJQcm94eSBoYXMgYmVlbiByZWxlYXNlZCBhbmQgaXMgbm90IHVzZWFibGUiKX1mdW5jdGlvbiBmZShBKXtyZXR1cm4gTShBLHt0eXBlOiJSRUxFQVNFIn0pLnRoZW4oKCk9Pnt1ZShBKX0pfXZhciBvQT1uZXcgV2Vha01hcCxhQT0iRmluYWxpemF0aW9uUmVnaXN0cnkiaW4gZ2xvYmFsVGhpcyYmbmV3IEZpbmFsaXphdGlvblJlZ2lzdHJ5KEE9PntsZXQgdD0ob0EuZ2V0KEEpfHwwKS0xO29BLnNldChBLHQpLHQ9PT0wJiZmZShBKX0pO2Z1bmN0aW9uIEd0KEEsdCl7bGV0IGU9KG9BLmdldCh0KXx8MCkrMTtvQS5zZXQodCxlKSxhQSYmYUEucmVnaXN0ZXIoQSx0LEEpfWZ1bmN0aW9uIFR0KEEpe2FBJiZhQS51bnJlZ2lzdGVyKEEpfWZ1bmN0aW9uIGJBKEEsdD1bXSxlPWZ1bmN0aW9uKCl7fSl7bGV0IHI9ITEsbj1uZXcgUHJveHkoZSx7Z2V0KG8saSl7aWYoaUEociksaT09PVVBKXJldHVybigpPT57VHQobiksZmUoQSkscj0hMH07aWYoaT09PSJ0aGVuIil7aWYodC5sZW5ndGg9PT0wKXJldHVybnt0aGVuOigpPT5ufTtsZXQgZz1NKEEse3R5cGU6IkdFVCIscGF0aDp0Lm1hcChDPT5DLnRvU3RyaW5nKCkpfSkudGhlbihKKTtyZXR1cm4gZy50aGVuLmJpbmQoZyl9cmV0dXJuIGJBKEEsWy4uLnQsaV0pfSxzZXQobyxpLGcpe2lBKHIpO2xldFtDLGxdPXNBKGcpO3JldHVybiBNKEEse3R5cGU6IlNFVCIscGF0aDpbLi4udCxpXS5tYXAocz0+cy50b1N0cmluZygpKSx2YWx1ZTpDfSxsKS50aGVuKEopfSxhcHBseShvLGksZyl7aUEocik7bGV0IEM9dFt0Lmxlbmd0aC0xXTtpZihDPT09UnQpcmV0dXJuIE0oQSx7dHlwZToiRU5EUE9JTlQifSkudGhlbihKKTtpZihDPT09ImJpbmQiKXJldHVybiBiQShBLHQuc2xpY2UoMCwtMSkpO2xldFtsLHNdPWdlKGcpO3JldHVybiBNKEEse3R5cGU6IkFQUExZIixwYXRoOnQubWFwKGE9PmEudG9TdHJpbmcoKSksYXJndW1lbnRMaXN0Omx9LHMpLnRoZW4oSil9LGNvbnN0cnVjdChvLGkpe2lBKHIpO2xldFtnLENdPWdlKGkpO3JldHVybiBNKEEse3R5cGU6IkNPTlNUUlVDVCIscGF0aDp0Lm1hcChsPT5sLnRvU3RyaW5nKCkpLGFyZ3VtZW50TGlzdDpnfSxDKS50aGVuKEopfX0pO3JldHVybiBHdChuLEEpLG59ZnVuY3Rpb24gTHQoQSl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sQSl9ZnVuY3Rpb24gZ2UoQSl7bGV0IHQ9QS5tYXAoc0EpO3JldHVyblt0Lm1hcChlPT5lWzBdKSxMdCh0Lm1hcChlPT5lWzFdKSldfXZhciBFZT1uZXcgV2Vha01hcDtmdW5jdGlvbiBHQShBLHQpe3JldHVybiBFZS5zZXQoQSx0KSxBfWZ1bmN0aW9uIHh0KEEpe3JldHVybiBPYmplY3QuYXNzaWduKEEse1tsZV06ITB9KX1mdW5jdGlvbiBzQShBKXtmb3IobGV0W3QsZV1vZiBDZSlpZihlLmNhbkhhbmRsZShBKSl7bGV0W3Isbl09ZS5zZXJpYWxpemUoQSk7cmV0dXJuW3t0eXBlOiJIQU5ETEVSIixuYW1lOnQsdmFsdWU6cn0sbl19cmV0dXJuW3t0eXBlOiJSQVciLHZhbHVlOkF9LEVlLmdldChBKXx8W11dfWZ1bmN0aW9uIEooQSl7c3dpdGNoKEEudHlwZSl7Y2FzZSJIQU5ETEVSIjpyZXR1cm4gQ2UuZ2V0KEEubmFtZSkuZGVzZXJpYWxpemUoQS52YWx1ZSk7Y2FzZSJSQVciOnJldHVybiBBLnZhbHVlfX1mdW5jdGlvbiBNKEEsdCxlKXtyZXR1cm4gbmV3IFByb21pc2Uocj0+e2xldCBuPU90KCk7QS5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixmdW5jdGlvbiBvKGkpeyFpLmRhdGF8fCFpLmRhdGEuaWR8fGkuZGF0YS5pZCE9PW58fChBLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLG8pLHIoaS5kYXRhKSl9KSxBLnN0YXJ0JiZBLnN0YXJ0KCksQS5wb3N0TWVzc2FnZShPYmplY3QuYXNzaWduKHtpZDpufSx0KSxlKX0pfWZ1bmN0aW9uIE90KCl7cmV0dXJuIG5ldyBBcnJheSg0KS5maWxsKDApLm1hcCgoKT0+TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKk51bWJlci5NQVhfU0FGRV9JTlRFR0VSKS50b1N0cmluZygxNikpLmpvaW4oIi0iKX1mdW5jdGlvbiB6KEEsdCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIEEuYXBwbHkodCxhcmd1bWVudHMpfX12YXJ7dG9TdHJpbmc6UHR9PU9iamVjdC5wcm90b3R5cGUse2dldFByb3RvdHlwZU9mOnhBfT1PYmplY3QsZ0E9KEE9PnQ9PntsZXQgZT1QdC5jYWxsKHQpO3JldHVybiBBW2VdfHwoQVtlXT1lLnNsaWNlKDgsLTEpLnRvTG93ZXJDYXNlKCkpfSkoT2JqZWN0LmNyZWF0ZShudWxsKSksRz1BPT4oQT1BLnRvTG93ZXJDYXNlKCksdD0+Z0EodCk9PT1BKSxsQT1BPT50PT50eXBlb2YgdD09PUEse2lzQXJyYXk6WX09QXJyYXksVj1sQSgidW5kZWZpbmVkIik7ZnVuY3Rpb24gSnQoQSl7cmV0dXJuIEEhPT1udWxsJiYhVihBKSYmQS5jb25zdHJ1Y3RvciE9PW51bGwmJiFWKEEuY29uc3RydWN0b3IpJiZiKEEuY29uc3RydWN0b3IuaXNCdWZmZXIpJiZBLmNvbnN0cnVjdG9yLmlzQnVmZmVyKEEpfXZhciBtZT1HKCJBcnJheUJ1ZmZlciIpO2Z1bmN0aW9uIEh0KEEpe2xldCB0O3JldHVybiB0eXBlb2YgQXJyYXlCdWZmZXI8InUiJiZBcnJheUJ1ZmZlci5pc1ZpZXc/dD1BcnJheUJ1ZmZlci5pc1ZpZXcoQSk6dD1BJiZBLmJ1ZmZlciYmbWUoQS5idWZmZXIpLHR9dmFyIE10PWxBKCJzdHJpbmciKSxiPWxBKCJmdW5jdGlvbiIpLGhlPWxBKCJudW1iZXIiKSxCQT1BPT5BIT09bnVsbCYmdHlwZW9mIEE9PSJvYmplY3QiLFl0PUE9PkE9PT0hMHx8QT09PSExLElBPUE9PntpZihnQShBKSE9PSJvYmplY3QiKXJldHVybiExO2xldCB0PXhBKEEpO3JldHVybih0PT09bnVsbHx8dD09PU9iamVjdC5wcm90b3R5cGV8fE9iamVjdC5nZXRQcm90b3R5cGVPZih0KT09PW51bGwpJiYhKFN5bWJvbC50b1N0cmluZ1RhZyBpbiBBKSYmIShTeW1ib2wuaXRlcmF0b3IgaW4gQSl9LHF0PUcoIkRhdGUiKSxLdD1HKCJGaWxlIiksdnQ9RygiQmxvYiIpLFd0PUcoIkZpbGVMaXN0IiksanQ9QT0+QkEoQSkmJmIoQS5waXBlKSxfdD1BPT57bGV0IHQ7cmV0dXJuIEEmJih0eXBlb2YgRm9ybURhdGE9PSJmdW5jdGlvbiImJkEgaW5zdGFuY2VvZiBGb3JtRGF0YXx8YihBLmFwcGVuZCkmJigodD1nQShBKSk9PT0iZm9ybWRhdGEifHx0PT09Im9iamVjdCImJmIoQS50b1N0cmluZykmJkEudG9TdHJpbmcoKT09PSJbb2JqZWN0IEZvcm1EYXRhXSIpKX0senQ9RygiVVJMU2VhcmNoUGFyYW1zIiksVnQ9QT0+QS50cmltP0EudHJpbSgpOkEucmVwbGFjZSgvXltcc1x1RkVGRlx4QTBdK3xbXHNcdUZFRkZceEEwXSskL2csIiIpO2Z1bmN0aW9uIFooQSx0LHthbGxPd25LZXlzOmU9ITF9PXt9KXtpZihBPT09bnVsbHx8dHlwZW9mIEE+InUiKXJldHVybjtsZXQgcixuO2lmKHR5cGVvZiBBIT0ib2JqZWN0IiYmKEE9W0FdKSxZKEEpKWZvcihyPTAsbj1BLmxlbmd0aDtyPG47cisrKXQuY2FsbChudWxsLEFbcl0scixBKTtlbHNle2xldCBvPWU/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoQSk6T2JqZWN0LmtleXMoQSksaT1vLmxlbmd0aCxnO2ZvcihyPTA7cjxpO3IrKylnPW9bcl0sdC5jYWxsKG51bGwsQVtnXSxnLEEpfX1mdW5jdGlvbiB5ZShBLHQpe3Q9dC50b0xvd2VyQ2FzZSgpO2xldCBlPU9iamVjdC5rZXlzKEEpLHI9ZS5sZW5ndGgsbjtmb3IoO3ItLSA+MDspaWYobj1lW3JdLHQ9PT1uLnRvTG93ZXJDYXNlKCkpcmV0dXJuIG47cmV0dXJuIG51bGx9dmFyIHdlPXR5cGVvZiBnbG9iYWxUaGlzPCJ1Ij9nbG9iYWxUaGlzOnR5cGVvZiBzZWxmPCJ1Ij9zZWxmOnR5cGVvZiB3aW5kb3c8InUiP3dpbmRvdzpnbG9iYWwsRGU9QT0+IVYoQSkmJkEhPT13ZTtmdW5jdGlvbiBMQSgpe2xldHtjYXNlbGVzczpBfT1EZSh0aGlzKSYmdGhpc3x8e30sdD17fSxlPShyLG4pPT57bGV0IG89QSYmeWUodCxuKXx8bjtJQSh0W29dKSYmSUEocik/dFtvXT1MQSh0W29dLHIpOklBKHIpP3Rbb109TEEoe30scik6WShyKT90W29dPXIuc2xpY2UoKTp0W29dPXJ9O2ZvcihsZXQgcj0wLG49YXJndW1lbnRzLmxlbmd0aDtyPG47cisrKWFyZ3VtZW50c1tyXSYmWihhcmd1bWVudHNbcl0sZSk7cmV0dXJuIHR9dmFyIFp0PShBLHQsZSx7YWxsT3duS2V5czpyfT17fSk9PihaKHQsKG4sbyk9PntlJiZiKG4pP0Fbb109eihuLGUpOkFbb109bn0se2FsbE93bktleXM6cn0pLEEpLFh0PUE9PihBLmNoYXJDb2RlQXQoMCk9PT02NTI3OSYmKEE9QS5zbGljZSgxKSksQSksJHQ9KEEsdCxlLHIpPT57QS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSxyKSxBLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1BLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBLCJzdXBlciIse3ZhbHVlOnQucHJvdG90eXBlfSksZSYmT2JqZWN0LmFzc2lnbihBLnByb3RvdHlwZSxlKX0sQXI9KEEsdCxlLHIpPT57bGV0IG4sbyxpLGc9e307aWYodD10fHx7fSxBPT1udWxsKXJldHVybiB0O2Rve2ZvcihuPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKEEpLG89bi5sZW5ndGg7by0tID4wOylpPW5bb10sKCFyfHxyKGksQSx0KSkmJiFnW2ldJiYodFtpXT1BW2ldLGdbaV09ITApO0E9ZSE9PSExJiZ4QShBKX13aGlsZShBJiYoIWV8fGUoQSx0KSkmJkEhPT1PYmplY3QucHJvdG90eXBlKTtyZXR1cm4gdH0sZXI9KEEsdCxlKT0+e0E9U3RyaW5nKEEpLChlPT09dm9pZCAwfHxlPkEubGVuZ3RoKSYmKGU9QS5sZW5ndGgpLGUtPXQubGVuZ3RoO2xldCByPUEuaW5kZXhPZih0LGUpO3JldHVybiByIT09LTEmJnI9PT1lfSx0cj1BPT57aWYoIUEpcmV0dXJuIG51bGw7aWYoWShBKSlyZXR1cm4gQTtsZXQgdD1BLmxlbmd0aDtpZighaGUodCkpcmV0dXJuIG51bGw7bGV0IGU9bmV3IEFycmF5KHQpO2Zvcig7dC0tID4wOyllW3RdPUFbdF07cmV0dXJuIGV9LHJyPShBPT50PT5BJiZ0IGluc3RhbmNlb2YgQSkodHlwZW9mIFVpbnQ4QXJyYXk8InUiJiZ4QShVaW50OEFycmF5KSksaXI9KEEsdCk9PntsZXQgcj0oQSYmQVtTeW1ib2wuaXRlcmF0b3JdKS5jYWxsKEEpLG47Zm9yKDsobj1yLm5leHQoKSkmJiFuLmRvbmU7KXtsZXQgbz1uLnZhbHVlO3QuY2FsbChBLG9bMF0sb1sxXSl9fSxucj0oQSx0KT0+e2xldCBlLHI9W107Zm9yKDsoZT1BLmV4ZWModCkpIT09bnVsbDspci5wdXNoKGUpO3JldHVybiByfSxvcj1HKCJIVE1MRm9ybUVsZW1lbnQiKSxhcj1BPT5BLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvWy1fXHNdKFthLXpcZF0pKFx3KikvZyxmdW5jdGlvbihlLHIsbil7cmV0dXJuIHIudG9VcHBlckNhc2UoKStufSksZGU9KCh7aGFzT3duUHJvcGVydHk6QX0pPT4odCxlKT0+QS5jYWxsKHQsZSkpKE9iamVjdC5wcm90b3R5cGUpLHNyPUcoIlJlZ0V4cCIpLFNlPShBLHQpPT57bGV0IGU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoQSkscj17fTtaKGUsKG4sbyk9PntsZXQgaTsoaT10KG4sbyxBKSkhPT0hMSYmKHJbb109aXx8bil9KSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhBLHIpfSxJcj1BPT57U2UoQSwodCxlKT0+e2lmKGIoQSkmJlsiYXJndW1lbnRzIiwiY2FsbGVyIiwiY2FsbGVlIl0uaW5kZXhPZihlKSE9PS0xKXJldHVybiExO2xldCByPUFbZV07aWYoYihyKSl7aWYodC5lbnVtZXJhYmxlPSExLCJ3cml0YWJsZSJpbiB0KXt0LndyaXRhYmxlPSExO3JldHVybn10LnNldHx8KHQuc2V0PSgpPT57dGhyb3cgRXJyb3IoIkNhbiBub3QgcmV3cml0ZSByZWFkLW9ubHkgbWV0aG9kICciK2UrIiciKX0pfX0pfSxncj0oQSx0KT0+e2xldCBlPXt9LHI9bj0+e24uZm9yRWFjaChvPT57ZVtvXT0hMH0pfTtyZXR1cm4gWShBKT9yKEEpOnIoU3RyaW5nKEEpLnNwbGl0KHQpKSxlfSxscj0oKT0+e30sQnI9KEEsdCk9PihBPStBLE51bWJlci5pc0Zpbml0ZShBKT9BOnQpLFRBPSJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiIscGU9IjAxMjM0NTY3ODkiLEZlPXtESUdJVDpwZSxBTFBIQTpUQSxBTFBIQV9ESUdJVDpUQStUQS50b1VwcGVyQ2FzZSgpK3BlfSxDcj0oQT0xNix0PUZlLkFMUEhBX0RJR0lUKT0+e2xldCBlPSIiLHtsZW5ndGg6cn09dDtmb3IoO0EtLTspZSs9dFtNYXRoLnJhbmRvbSgpKnJ8MF07cmV0dXJuIGV9O2Z1bmN0aW9uIGNyKEEpe3JldHVybiEhKEEmJmIoQS5hcHBlbmQpJiZBW1N5bWJvbC50b1N0cmluZ1RhZ109PT0iRm9ybURhdGEiJiZBW1N5bWJvbC5pdGVyYXRvcl0pfXZhciB1cj1BPT57bGV0IHQ9bmV3IEFycmF5KDEwKSxlPShyLG4pPT57aWYoQkEocikpe2lmKHQuaW5kZXhPZihyKT49MClyZXR1cm47aWYoISgidG9KU09OImluIHIpKXt0W25dPXI7bGV0IG89WShyKT9bXTp7fTtyZXR1cm4gWihyLChpLGcpPT57bGV0IEM9ZShpLG4rMSk7IVYoQykmJihvW2ddPUMpfSksdFtuXT12b2lkIDAsb319cmV0dXJuIHJ9O3JldHVybiBlKEEsMCl9LGZyPUcoIkFzeW5jRnVuY3Rpb24iKSxFcj1BPT5BJiYoQkEoQSl8fGIoQSkpJiZiKEEudGhlbikmJmIoQS5jYXRjaCksST17aXNBcnJheTpZLGlzQXJyYXlCdWZmZXI6bWUsaXNCdWZmZXI6SnQsaXNGb3JtRGF0YTpfdCxpc0FycmF5QnVmZmVyVmlldzpIdCxpc1N0cmluZzpNdCxpc051bWJlcjpoZSxpc0Jvb2xlYW46WXQsaXNPYmplY3Q6QkEsaXNQbGFpbk9iamVjdDpJQSxpc1VuZGVmaW5lZDpWLGlzRGF0ZTpxdCxpc0ZpbGU6S3QsaXNCbG9iOnZ0LGlzUmVnRXhwOnNyLGlzRnVuY3Rpb246Yixpc1N0cmVhbTpqdCxpc1VSTFNlYXJjaFBhcmFtczp6dCxpc1R5cGVkQXJyYXk6cnIsaXNGaWxlTGlzdDpXdCxmb3JFYWNoOlosbWVyZ2U6TEEsZXh0ZW5kOlp0LHRyaW06VnQsc3RyaXBCT006WHQsaW5oZXJpdHM6JHQsdG9GbGF0T2JqZWN0OkFyLGtpbmRPZjpnQSxraW5kT2ZUZXN0OkcsZW5kc1dpdGg6ZXIsdG9BcnJheTp0cixmb3JFYWNoRW50cnk6aXIsbWF0Y2hBbGw6bnIsaXNIVE1MRm9ybTpvcixoYXNPd25Qcm9wZXJ0eTpkZSxoYXNPd25Qcm9wOmRlLHJlZHVjZURlc2NyaXB0b3JzOlNlLGZyZWV6ZU1ldGhvZHM6SXIsdG9PYmplY3RTZXQ6Z3IsdG9DYW1lbENhc2U6YXIsbm9vcDpscix0b0Zpbml0ZU51bWJlcjpCcixmaW5kS2V5OnllLGdsb2JhbDp3ZSxpc0NvbnRleHREZWZpbmVkOkRlLEFMUEhBQkVUOkZlLGdlbmVyYXRlU3RyaW5nOkNyLGlzU3BlY0NvbXBsaWFudEZvcm06Y3IsdG9KU09OT2JqZWN0OnVyLGlzQXN5bmNGbjpmcixpc1RoZW5hYmxlOkVyfTtmdW5jdGlvbiBxKEEsdCxlLHIsbil7RXJyb3IuY2FsbCh0aGlzKSxFcnJvci5jYXB0dXJlU3RhY2tUcmFjZT9FcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLHRoaXMuY29uc3RydWN0b3IpOnRoaXMuc3RhY2s9bmV3IEVycm9yKCkuc3RhY2ssdGhpcy5tZXNzYWdlPUEsdGhpcy5uYW1lPSJBeGlvc0Vycm9yIix0JiYodGhpcy5jb2RlPXQpLGUmJih0aGlzLmNvbmZpZz1lKSxyJiYodGhpcy5yZXF1ZXN0PXIpLG4mJih0aGlzLnJlc3BvbnNlPW4pfUkuaW5oZXJpdHMocSxFcnJvcix7dG9KU09OOmZ1bmN0aW9uKCl7cmV0dXJue21lc3NhZ2U6dGhpcy5tZXNzYWdlLG5hbWU6dGhpcy5uYW1lLGRlc2NyaXB0aW9uOnRoaXMuZGVzY3JpcHRpb24sbnVtYmVyOnRoaXMubnVtYmVyLGZpbGVOYW1lOnRoaXMuZmlsZU5hbWUsbGluZU51bWJlcjp0aGlzLmxpbmVOdW1iZXIsY29sdW1uTnVtYmVyOnRoaXMuY29sdW1uTnVtYmVyLHN0YWNrOnRoaXMuc3RhY2ssY29uZmlnOkkudG9KU09OT2JqZWN0KHRoaXMuY29uZmlnKSxjb2RlOnRoaXMuY29kZSxzdGF0dXM6dGhpcy5yZXNwb25zZSYmdGhpcy5yZXNwb25zZS5zdGF0dXM/dGhpcy5yZXNwb25zZS5zdGF0dXM6bnVsbH19fSk7dmFyIFJlPXEucHJvdG90eXBlLGtlPXt9O1siRVJSX0JBRF9PUFRJT05fVkFMVUUiLCJFUlJfQkFEX09QVElPTiIsIkVDT05OQUJPUlRFRCIsIkVUSU1FRE9VVCIsIkVSUl9ORVRXT1JLIiwiRVJSX0ZSX1RPT19NQU5ZX1JFRElSRUNUUyIsIkVSUl9ERVBSRUNBVEVEIiwiRVJSX0JBRF9SRVNQT05TRSIsIkVSUl9CQURfUkVRVUVTVCIsIkVSUl9DQU5DRUxFRCIsIkVSUl9OT1RfU1VQUE9SVCIsIkVSUl9JTlZBTElEX1VSTCJdLmZvckVhY2goQT0+e2tlW0FdPXt2YWx1ZTpBfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHEsa2UpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShSZSwiaXNBeGlvc0Vycm9yIix7dmFsdWU6ITB9KTtxLmZyb209KEEsdCxlLHIsbixvKT0+e2xldCBpPU9iamVjdC5jcmVhdGUoUmUpO3JldHVybiBJLnRvRmxhdE9iamVjdChBLGksZnVuY3Rpb24oQyl7cmV0dXJuIEMhPT1FcnJvci5wcm90b3R5cGV9LGc9PmchPT0iaXNBeGlvc0Vycm9yIikscS5jYWxsKGksQS5tZXNzYWdlLHQsZSxyLG4pLGkuY2F1c2U9QSxpLm5hbWU9QS5uYW1lLG8mJk9iamVjdC5hc3NpZ24oaSxvKSxpfTt2YXIgZD1xO3ZhciBDQT1udWxsO2Z1bmN0aW9uIE9BKEEpe3JldHVybiBJLmlzUGxhaW5PYmplY3QoQSl8fEkuaXNBcnJheShBKX1mdW5jdGlvbiBVZShBKXtyZXR1cm4gSS5lbmRzV2l0aChBLCJbXSIpP0Euc2xpY2UoMCwtMik6QX1mdW5jdGlvbiBiZShBLHQsZSl7cmV0dXJuIEE/QS5jb25jYXQodCkubWFwKGZ1bmN0aW9uKG4sbyl7cmV0dXJuIG49VWUobiksIWUmJm8/IlsiK24rIl0iOm59KS5qb2luKGU/Ii4iOiIiKTp0fWZ1bmN0aW9uIFFyKEEpe3JldHVybiBJLmlzQXJyYXkoQSkmJiFBLnNvbWUoT0EpfXZhciBkcj1JLnRvRmxhdE9iamVjdChJLHt9LG51bGwsZnVuY3Rpb24odCl7cmV0dXJuL15pc1tBLVpdLy50ZXN0KHQpfSk7ZnVuY3Rpb24gcHIoQSx0LGUpe2lmKCFJLmlzT2JqZWN0KEEpKXRocm93IG5ldyBUeXBlRXJyb3IoInRhcmdldCBtdXN0IGJlIGFuIG9iamVjdCIpO3Q9dHx8bmV3KENBfHxGb3JtRGF0YSksZT1JLnRvRmxhdE9iamVjdChlLHttZXRhVG9rZW5zOiEwLGRvdHM6ITEsaW5kZXhlczohMX0sITEsZnVuY3Rpb24oYyxRKXtyZXR1cm4hSS5pc1VuZGVmaW5lZChRW2NdKX0pO2xldCByPWUubWV0YVRva2VucyxuPWUudmlzaXRvcnx8cyxvPWUuZG90cyxpPWUuaW5kZXhlcyxDPShlLkJsb2J8fHR5cGVvZiBCbG9iPCJ1IiYmQmxvYikmJkkuaXNTcGVjQ29tcGxpYW50Rm9ybSh0KTtpZighSS5pc0Z1bmN0aW9uKG4pKXRocm93IG5ldyBUeXBlRXJyb3IoInZpc2l0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uIik7ZnVuY3Rpb24gbCh1KXtpZih1PT09bnVsbClyZXR1cm4iIjtpZihJLmlzRGF0ZSh1KSlyZXR1cm4gdS50b0lTT1N0cmluZygpO2lmKCFDJiZJLmlzQmxvYih1KSl0aHJvdyBuZXcgZCgiQmxvYiBpcyBub3Qgc3VwcG9ydGVkLiBVc2UgYSBCdWZmZXIgaW5zdGVhZC4iKTtyZXR1cm4gSS5pc0FycmF5QnVmZmVyKHUpfHxJLmlzVHlwZWRBcnJheSh1KT9DJiZ0eXBlb2YgQmxvYj09ImZ1bmN0aW9uIj9uZXcgQmxvYihbdV0pOkJ1ZmZlci5mcm9tKHUpOnV9ZnVuY3Rpb24gcyh1LGMsUSl7bGV0IHA9dTtpZih1JiYhUSYmdHlwZW9mIHU9PSJvYmplY3QiKXtpZihJLmVuZHNXaXRoKGMsInt9IikpYz1yP2M6Yy5zbGljZSgwLC0yKSx1PUpTT04uc3RyaW5naWZ5KHUpO2Vsc2UgaWYoSS5pc0FycmF5KHUpJiZRcih1KXx8KEkuaXNGaWxlTGlzdCh1KXx8SS5lbmRzV2l0aChjLCJbXSIpKSYmKHA9SS50b0FycmF5KHUpKSlyZXR1cm4gYz1VZShjKSxwLmZvckVhY2goZnVuY3Rpb24oUyxRdCl7IShJLmlzVW5kZWZpbmVkKFMpfHxTPT09bnVsbCkmJnQuYXBwZW5kKGk9PT0hMD9iZShbY10sUXQsbyk6aT09PW51bGw/YzpjKyJbXSIsbChTKSl9KSwhMX1yZXR1cm4gT0EodSk/ITA6KHQuYXBwZW5kKGJlKFEsYyxvKSxsKHUpKSwhMSl9bGV0IGE9W10sZj1PYmplY3QuYXNzaWduKGRyLHtkZWZhdWx0VmlzaXRvcjpzLGNvbnZlcnRWYWx1ZTpsLGlzVmlzaXRhYmxlOk9BfSk7ZnVuY3Rpb24gQih1LGMpe2lmKCFJLmlzVW5kZWZpbmVkKHUpKXtpZihhLmluZGV4T2YodSkhPT0tMSl0aHJvdyBFcnJvcigiQ2lyY3VsYXIgcmVmZXJlbmNlIGRldGVjdGVkIGluICIrYy5qb2luKCIuIikpO2EucHVzaCh1KSxJLmZvckVhY2godSxmdW5jdGlvbihwLEYpeyghKEkuaXNVbmRlZmluZWQocCl8fHA9PT1udWxsKSYmbi5jYWxsKHQscCxJLmlzU3RyaW5nKEYpP0YudHJpbSgpOkYsYyxmKSk9PT0hMCYmQihwLGM/Yy5jb25jYXQoRik6W0ZdKX0pLGEucG9wKCl9fWlmKCFJLmlzT2JqZWN0KEEpKXRocm93IG5ldyBUeXBlRXJyb3IoImRhdGEgbXVzdCBiZSBhbiBvYmplY3QiKTtyZXR1cm4gQihBKSx0fXZhciB4PXByO2Z1bmN0aW9uIE5lKEEpe2xldCB0PXsiISI6IiUyMSIsIiciOiIlMjciLCIoIjoiJTI4IiwiKSI6IiUyOSIsIn4iOiIlN0UiLCIlMjAiOiIrIiwiJTAwIjoiXDAifTtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KEEpLnJlcGxhY2UoL1shJygpfl18JTIwfCUwMC9nLGZ1bmN0aW9uKHIpe3JldHVybiB0W3JdfSl9ZnVuY3Rpb24gR2UoQSx0KXt0aGlzLl9wYWlycz1bXSxBJiZ4KEEsdGhpcyx0KX12YXIgVGU9R2UucHJvdG90eXBlO1RlLmFwcGVuZD1mdW5jdGlvbih0LGUpe3RoaXMuX3BhaXJzLnB1c2goW3QsZV0pfTtUZS50b1N0cmluZz1mdW5jdGlvbih0KXtsZXQgZT10P2Z1bmN0aW9uKHIpe3JldHVybiB0LmNhbGwodGhpcyxyLE5lKX06TmU7cmV0dXJuIHRoaXMuX3BhaXJzLm1hcChmdW5jdGlvbihuKXtyZXR1cm4gZShuWzBdKSsiPSIrZShuWzFdKX0sIiIpLmpvaW4oIiYiKX07dmFyIGNBPUdlO2Z1bmN0aW9uIG1yKEEpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQoQSkucmVwbGFjZSgvJTNBL2dpLCI6IikucmVwbGFjZSgvJTI0L2csIiQiKS5yZXBsYWNlKC8lMkMvZ2ksIiwiKS5yZXBsYWNlKC8lMjAvZywiKyIpLnJlcGxhY2UoLyU1Qi9naSwiWyIpLnJlcGxhY2UoLyU1RC9naSwiXSIpfWZ1bmN0aW9uIFgoQSx0LGUpe2lmKCF0KXJldHVybiBBO2xldCByPWUmJmUuZW5jb2RlfHxtcixuPWUmJmUuc2VyaWFsaXplLG87aWYobj9vPW4odCxlKTpvPUkuaXNVUkxTZWFyY2hQYXJhbXModCk/dC50b1N0cmluZygpOm5ldyBjQSh0LGUpLnRvU3RyaW5nKHIpLG8pe2xldCBpPUEuaW5kZXhPZigiIyIpO2khPT0tMSYmKEE9QS5zbGljZSgwLGkpKSxBKz0oQS5pbmRleE9mKCI/Iik9PT0tMT8iPyI6IiYiKStvfXJldHVybiBBfXZhciBQQT1jbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuaGFuZGxlcnM9W119dXNlKHQsZSxyKXtyZXR1cm4gdGhpcy5oYW5kbGVycy5wdXNoKHtmdWxmaWxsZWQ6dCxyZWplY3RlZDplLHN5bmNocm9ub3VzOnI/ci5zeW5jaHJvbm91czohMSxydW5XaGVuOnI/ci5ydW5XaGVuOm51bGx9KSx0aGlzLmhhbmRsZXJzLmxlbmd0aC0xfWVqZWN0KHQpe3RoaXMuaGFuZGxlcnNbdF0mJih0aGlzLmhhbmRsZXJzW3RdPW51bGwpfWNsZWFyKCl7dGhpcy5oYW5kbGVycyYmKHRoaXMuaGFuZGxlcnM9W10pfWZvckVhY2godCl7SS5mb3JFYWNoKHRoaXMuaGFuZGxlcnMsZnVuY3Rpb24ocil7ciE9PW51bGwmJnQocil9KX19LEpBPVBBO3ZhciB1QT17c2lsZW50SlNPTlBhcnNpbmc6ITAsZm9yY2VkSlNPTlBhcnNpbmc6ITAsY2xhcmlmeVRpbWVvdXRFcnJvcjohMX07dmFyIExlPXR5cGVvZiBVUkxTZWFyY2hQYXJhbXM8InUiP1VSTFNlYXJjaFBhcmFtczpjQTt2YXIgeGU9dHlwZW9mIEZvcm1EYXRhPCJ1Ij9Gb3JtRGF0YTpudWxsO3ZhciBPZT10eXBlb2YgQmxvYjwidSI/QmxvYjpudWxsO3ZhciBQZT17aXNCcm93c2VyOiEwLGNsYXNzZXM6e1VSTFNlYXJjaFBhcmFtczpMZSxGb3JtRGF0YTp4ZSxCbG9iOk9lfSxwcm90b2NvbHM6WyJodHRwIiwiaHR0cHMiLCJmaWxlIiwiYmxvYiIsInVybCIsImRhdGEiXX07dmFyIEhBPXt9O3B0KEhBLHtoYXNCcm93c2VyRW52OigpPT5KZSxoYXNTdGFuZGFyZEJyb3dzZXJFbnY6KCk9PmhyLGhhc1N0YW5kYXJkQnJvd3NlcldlYldvcmtlckVudjooKT0+eXJ9KTt2YXIgSmU9dHlwZW9mIHdpbmRvdzwidSImJnR5cGVvZiBkb2N1bWVudDwidSIsaHI9KEE9PkplJiZbIlJlYWN0TmF0aXZlIiwiTmF0aXZlU2NyaXB0IiwiTlMiXS5pbmRleE9mKEEpPDApKHR5cGVvZiBuYXZpZ2F0b3I8InUiJiZuYXZpZ2F0b3IucHJvZHVjdCkseXI9dHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlPCJ1IiYmc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlJiZ0eXBlb2Ygc2VsZi5pbXBvcnRTY3JpcHRzPT0iZnVuY3Rpb24iO3ZhciB3PXsuLi5IQSwuLi5QZX07ZnVuY3Rpb24gTUEoQSx0KXtyZXR1cm4geChBLG5ldyB3LmNsYXNzZXMuVVJMU2VhcmNoUGFyYW1zLE9iamVjdC5hc3NpZ24oe3Zpc2l0b3I6ZnVuY3Rpb24oZSxyLG4sbyl7cmV0dXJuIHcuaXNOb2RlJiZJLmlzQnVmZmVyKGUpPyh0aGlzLmFwcGVuZChyLGUudG9TdHJpbmcoImJhc2U2NCIpKSwhMSk6by5kZWZhdWx0VmlzaXRvci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSx0KSl9ZnVuY3Rpb24gd3IoQSl7cmV0dXJuIEkubWF0Y2hBbGwoL1x3K3xcWyhcdyopXS9nLEEpLm1hcCh0PT50WzBdPT09IltdIj8iIjp0WzFdfHx0WzBdKX1mdW5jdGlvbiBEcihBKXtsZXQgdD17fSxlPU9iamVjdC5rZXlzKEEpLHIsbj1lLmxlbmd0aCxvO2ZvcihyPTA7cjxuO3IrKylvPWVbcl0sdFtvXT1BW29dO3JldHVybiB0fWZ1bmN0aW9uIFNyKEEpe2Z1bmN0aW9uIHQoZSxyLG4sbyl7bGV0IGk9ZVtvKytdLGc9TnVtYmVyLmlzRmluaXRlKCtpKSxDPW8+PWUubGVuZ3RoO3JldHVybiBpPSFpJiZJLmlzQXJyYXkobik/bi5sZW5ndGg6aSxDPyhJLmhhc093blByb3AobixpKT9uW2ldPVtuW2ldLHJdOm5baV09ciwhZyk6KCghbltpXXx8IUkuaXNPYmplY3QobltpXSkpJiYobltpXT1bXSksdChlLHIsbltpXSxvKSYmSS5pc0FycmF5KG5baV0pJiYobltpXT1EcihuW2ldKSksIWcpfWlmKEkuaXNGb3JtRGF0YShBKSYmSS5pc0Z1bmN0aW9uKEEuZW50cmllcykpe2xldCBlPXt9O3JldHVybiBJLmZvckVhY2hFbnRyeShBLChyLG4pPT57dCh3cihyKSxuLGUsMCl9KSxlfXJldHVybiBudWxsfXZhciBmQT1TcjtmdW5jdGlvbiBGcihBLHQsZSl7aWYoSS5pc1N0cmluZyhBKSl0cnl7cmV0dXJuKHR8fEpTT04ucGFyc2UpKEEpLEkudHJpbShBKX1jYXRjaChyKXtpZihyLm5hbWUhPT0iU3ludGF4RXJyb3IiKXRocm93IHJ9cmV0dXJuKGV8fEpTT04uc3RyaW5naWZ5KShBKX12YXIgWUE9e3RyYW5zaXRpb25hbDp1QSxhZGFwdGVyOlsieGhyIiwiaHR0cCJdLHRyYW5zZm9ybVJlcXVlc3Q6W2Z1bmN0aW9uKHQsZSl7bGV0IHI9ZS5nZXRDb250ZW50VHlwZSgpfHwiIixuPXIuaW5kZXhPZigiYXBwbGljYXRpb24vanNvbiIpPi0xLG89SS5pc09iamVjdCh0KTtpZihvJiZJLmlzSFRNTEZvcm0odCkmJih0PW5ldyBGb3JtRGF0YSh0KSksSS5pc0Zvcm1EYXRhKHQpKXJldHVybiBuJiZuP0pTT04uc3RyaW5naWZ5KGZBKHQpKTp0O2lmKEkuaXNBcnJheUJ1ZmZlcih0KXx8SS5pc0J1ZmZlcih0KXx8SS5pc1N0cmVhbSh0KXx8SS5pc0ZpbGUodCl8fEkuaXNCbG9iKHQpKXJldHVybiB0O2lmKEkuaXNBcnJheUJ1ZmZlclZpZXcodCkpcmV0dXJuIHQuYnVmZmVyO2lmKEkuaXNVUkxTZWFyY2hQYXJhbXModCkpcmV0dXJuIGUuc2V0Q29udGVudFR5cGUoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04IiwhMSksdC50b1N0cmluZygpO2xldCBnO2lmKG8pe2lmKHIuaW5kZXhPZigiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIik+LTEpcmV0dXJuIE1BKHQsdGhpcy5mb3JtU2VyaWFsaXplcikudG9TdHJpbmcoKTtpZigoZz1JLmlzRmlsZUxpc3QodCkpfHxyLmluZGV4T2YoIm11bHRpcGFydC9mb3JtLWRhdGEiKT4tMSl7bGV0IEM9dGhpcy5lbnYmJnRoaXMuZW52LkZvcm1EYXRhO3JldHVybiB4KGc/eyJmaWxlc1tdIjp0fTp0LEMmJm5ldyBDLHRoaXMuZm9ybVNlcmlhbGl6ZXIpfX1yZXR1cm4gb3x8bj8oZS5zZXRDb250ZW50VHlwZSgiYXBwbGljYXRpb24vanNvbiIsITEpLEZyKHQpKTp0fV0sdHJhbnNmb3JtUmVzcG9uc2U6W2Z1bmN0aW9uKHQpe2xldCBlPXRoaXMudHJhbnNpdGlvbmFsfHxZQS50cmFuc2l0aW9uYWwscj1lJiZlLmZvcmNlZEpTT05QYXJzaW5nLG49dGhpcy5yZXNwb25zZVR5cGU9PT0ianNvbiI7aWYodCYmSS5pc1N0cmluZyh0KSYmKHImJiF0aGlzLnJlc3BvbnNlVHlwZXx8bikpe2xldCBpPSEoZSYmZS5zaWxlbnRKU09OUGFyc2luZykmJm47dHJ5e3JldHVybiBKU09OLnBhcnNlKHQpfWNhdGNoKGcpe2lmKGkpdGhyb3cgZy5uYW1lPT09IlN5bnRheEVycm9yIj9kLmZyb20oZyxkLkVSUl9CQURfUkVTUE9OU0UsdGhpcyxudWxsLHRoaXMucmVzcG9uc2UpOmd9fXJldHVybiB0fV0sdGltZW91dDowLHhzcmZDb29raWVOYW1lOiJYU1JGLVRPS0VOIix4c3JmSGVhZGVyTmFtZToiWC1YU1JGLVRPS0VOIixtYXhDb250ZW50TGVuZ3RoOi0xLG1heEJvZHlMZW5ndGg6LTEsZW52OntGb3JtRGF0YTp3LmNsYXNzZXMuRm9ybURhdGEsQmxvYjp3LmNsYXNzZXMuQmxvYn0sdmFsaWRhdGVTdGF0dXM6ZnVuY3Rpb24odCl7cmV0dXJuIHQ+PTIwMCYmdDwzMDB9LGhlYWRlcnM6e2NvbW1vbjp7QWNjZXB0OiJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyoiLCJDb250ZW50LVR5cGUiOnZvaWQgMH19fTtJLmZvckVhY2goWyJkZWxldGUiLCJnZXQiLCJoZWFkIiwicG9zdCIsInB1dCIsInBhdGNoIl0sQT0+e1lBLmhlYWRlcnNbQV09e319KTt2YXIgSz1ZQTt2YXIgUnI9SS50b09iamVjdFNldChbImFnZSIsImF1dGhvcml6YXRpb24iLCJjb250ZW50LWxlbmd0aCIsImNvbnRlbnQtdHlwZSIsImV0YWciLCJleHBpcmVzIiwiZnJvbSIsImhvc3QiLCJpZi1tb2RpZmllZC1zaW5jZSIsImlmLXVubW9kaWZpZWQtc2luY2UiLCJsYXN0LW1vZGlmaWVkIiwibG9jYXRpb24iLCJtYXgtZm9yd2FyZHMiLCJwcm94eS1hdXRob3JpemF0aW9uIiwicmVmZXJlciIsInJldHJ5LWFmdGVyIiwidXNlci1hZ2VudCJdKSxIZT1BPT57bGV0IHQ9e30sZSxyLG47cmV0dXJuIEEmJkEuc3BsaXQoYApgKS5mb3JFYWNoKGZ1bmN0aW9uKGkpe249aS5pbmRleE9mKCI6IiksZT1pLnN1YnN0cmluZygwLG4pLnRyaW0oKS50b0xvd2VyQ2FzZSgpLHI9aS5zdWJzdHJpbmcobisxKS50cmltKCksISghZXx8dFtlXSYmUnJbZV0pJiYoZT09PSJzZXQtY29va2llIj90W2VdP3RbZV0ucHVzaChyKTp0W2VdPVtyXTp0W2VdPXRbZV0/dFtlXSsiLCAiK3I6cil9KSx0fTt2YXIgTWU9U3ltYm9sKCJpbnRlcm5hbHMiKTtmdW5jdGlvbiAkKEEpe3JldHVybiBBJiZTdHJpbmcoQSkudHJpbSgpLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gRUEoQSl7cmV0dXJuIEE9PT0hMXx8QT09bnVsbD9BOkkuaXNBcnJheShBKT9BLm1hcChFQSk6U3RyaW5nKEEpfWZ1bmN0aW9uIGtyKEEpe2xldCB0PU9iamVjdC5jcmVhdGUobnVsbCksZT0vKFteXHMsOz1dKylccyooPzo9XHMqKFteLDtdKykpPy9nLHI7Zm9yKDtyPWUuZXhlYyhBKTspdFtyWzFdXT1yWzJdO3JldHVybiB0fXZhciBicj1BPT4vXlstX2EtekEtWjAtOV5gfH4sISMkJSYnKisuXSskLy50ZXN0KEEudHJpbSgpKTtmdW5jdGlvbiBxQShBLHQsZSxyLG4pe2lmKEkuaXNGdW5jdGlvbihyKSlyZXR1cm4gci5jYWxsKHRoaXMsdCxlKTtpZihuJiYodD1lKSwhIUkuaXNTdHJpbmcodCkpe2lmKEkuaXNTdHJpbmcocikpcmV0dXJuIHQuaW5kZXhPZihyKSE9PS0xO2lmKEkuaXNSZWdFeHAocikpcmV0dXJuIHIudGVzdCh0KX19ZnVuY3Rpb24gVXIoQSl7cmV0dXJuIEEudHJpbSgpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvKFthLXpcZF0pKFx3KikvZywodCxlLHIpPT5lLnRvVXBwZXJDYXNlKCkrcil9ZnVuY3Rpb24gTnIoQSx0KXtsZXQgZT1JLnRvQ2FtZWxDYXNlKCIgIit0KTtbImdldCIsInNldCIsImhhcyJdLmZvckVhY2gocj0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShBLHIrZSx7dmFsdWU6ZnVuY3Rpb24obixvLGkpe3JldHVybiB0aGlzW3JdLmNhbGwodGhpcyx0LG4sbyxpKX0sY29uZmlndXJhYmxlOiEwfSl9KX12YXIgdj1jbGFzc3tjb25zdHJ1Y3Rvcih0KXt0JiZ0aGlzLnNldCh0KX1zZXQodCxlLHIpe2xldCBuPXRoaXM7ZnVuY3Rpb24gbyhnLEMsbCl7bGV0IHM9JChDKTtpZighcyl0aHJvdyBuZXcgRXJyb3IoImhlYWRlciBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nIik7bGV0IGE9SS5maW5kS2V5KG4scyk7KCFhfHxuW2FdPT09dm9pZCAwfHxsPT09ITB8fGw9PT12b2lkIDAmJm5bYV0hPT0hMSkmJihuW2F8fENdPUVBKGcpKX1sZXQgaT0oZyxDKT0+SS5mb3JFYWNoKGcsKGwscyk9Pm8obCxzLEMpKTtyZXR1cm4gSS5pc1BsYWluT2JqZWN0KHQpfHx0IGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3Rvcj9pKHQsZSk6SS5pc1N0cmluZyh0KSYmKHQ9dC50cmltKCkpJiYhYnIodCk/aShIZSh0KSxlKTp0IT1udWxsJiZvKGUsdCxyKSx0aGlzfWdldCh0LGUpe2lmKHQ9JCh0KSx0KXtsZXQgcj1JLmZpbmRLZXkodGhpcyx0KTtpZihyKXtsZXQgbj10aGlzW3JdO2lmKCFlKXJldHVybiBuO2lmKGU9PT0hMClyZXR1cm4ga3Iobik7aWYoSS5pc0Z1bmN0aW9uKGUpKXJldHVybiBlLmNhbGwodGhpcyxuLHIpO2lmKEkuaXNSZWdFeHAoZSkpcmV0dXJuIGUuZXhlYyhuKTt0aHJvdyBuZXcgVHlwZUVycm9yKCJwYXJzZXIgbXVzdCBiZSBib29sZWFufHJlZ2V4cHxmdW5jdGlvbiIpfX19aGFzKHQsZSl7aWYodD0kKHQpLHQpe2xldCByPUkuZmluZEtleSh0aGlzLHQpO3JldHVybiEhKHImJnRoaXNbcl0hPT12b2lkIDAmJighZXx8cUEodGhpcyx0aGlzW3JdLHIsZSkpKX1yZXR1cm4hMX1kZWxldGUodCxlKXtsZXQgcj10aGlzLG49ITE7ZnVuY3Rpb24gbyhpKXtpZihpPSQoaSksaSl7bGV0IGc9SS5maW5kS2V5KHIsaSk7ZyYmKCFlfHxxQShyLHJbZ10sZyxlKSkmJihkZWxldGUgcltnXSxuPSEwKX19cmV0dXJuIEkuaXNBcnJheSh0KT90LmZvckVhY2gobyk6byh0KSxufWNsZWFyKHQpe2xldCBlPU9iamVjdC5rZXlzKHRoaXMpLHI9ZS5sZW5ndGgsbj0hMTtmb3IoO3ItLTspe2xldCBvPWVbcl07KCF0fHxxQSh0aGlzLHRoaXNbb10sbyx0LCEwKSkmJihkZWxldGUgdGhpc1tvXSxuPSEwKX1yZXR1cm4gbn1ub3JtYWxpemUodCl7bGV0IGU9dGhpcyxyPXt9O3JldHVybiBJLmZvckVhY2godGhpcywobixvKT0+e2xldCBpPUkuZmluZEtleShyLG8pO2lmKGkpe2VbaV09RUEobiksZGVsZXRlIGVbb107cmV0dXJufWxldCBnPXQ/VXIobyk6U3RyaW5nKG8pLnRyaW0oKTtnIT09byYmZGVsZXRlIGVbb10sZVtnXT1FQShuKSxyW2ddPSEwfSksdGhpc31jb25jYXQoLi4udCl7cmV0dXJuIHRoaXMuY29uc3RydWN0b3IuY29uY2F0KHRoaXMsLi4udCl9dG9KU09OKHQpe2xldCBlPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuIEkuZm9yRWFjaCh0aGlzLChyLG4pPT57ciE9bnVsbCYmciE9PSExJiYoZVtuXT10JiZJLmlzQXJyYXkocik/ci5qb2luKCIsICIpOnIpfSksZX1bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiBPYmplY3QuZW50cmllcyh0aGlzLnRvSlNPTigpKVtTeW1ib2wuaXRlcmF0b3JdKCl9dG9TdHJpbmcoKXtyZXR1cm4gT2JqZWN0LmVudHJpZXModGhpcy50b0pTT04oKSkubWFwKChbdCxlXSk9PnQrIjogIitlKS5qb2luKGAKYCl9Z2V0W1N5bWJvbC50b1N0cmluZ1RhZ10oKXtyZXR1cm4iQXhpb3NIZWFkZXJzIn1zdGF0aWMgZnJvbSh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIHRoaXM/dDpuZXcgdGhpcyh0KX1zdGF0aWMgY29uY2F0KHQsLi4uZSl7bGV0IHI9bmV3IHRoaXModCk7cmV0dXJuIGUuZm9yRWFjaChuPT5yLnNldChuKSkscn1zdGF0aWMgYWNjZXNzb3IodCl7bGV0IHI9KHRoaXNbTWVdPXRoaXNbTWVdPXthY2Nlc3NvcnM6e319KS5hY2Nlc3NvcnMsbj10aGlzLnByb3RvdHlwZTtmdW5jdGlvbiBvKGkpe2xldCBnPSQoaSk7cltnXXx8KE5yKG4saSkscltnXT0hMCl9cmV0dXJuIEkuaXNBcnJheSh0KT90LmZvckVhY2gobyk6byh0KSx0aGlzfX07di5hY2Nlc3NvcihbIkNvbnRlbnQtVHlwZSIsIkNvbnRlbnQtTGVuZ3RoIiwiQWNjZXB0IiwiQWNjZXB0LUVuY29kaW5nIiwiVXNlci1BZ2VudCIsIkF1dGhvcml6YXRpb24iXSk7SS5yZWR1Y2VEZXNjcmlwdG9ycyh2LnByb3RvdHlwZSwoe3ZhbHVlOkF9LHQpPT57bGV0IGU9dFswXS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSk7cmV0dXJue2dldDooKT0+QSxzZXQocil7dGhpc1tlXT1yfX19KTtJLmZyZWV6ZU1ldGhvZHModik7dmFyIEQ9djtmdW5jdGlvbiBBQShBLHQpe2xldCBlPXRoaXN8fEsscj10fHxlLG49RC5mcm9tKHIuaGVhZGVycyksbz1yLmRhdGE7cmV0dXJuIEkuZm9yRWFjaChBLGZ1bmN0aW9uKGcpe289Zy5jYWxsKGUsbyxuLm5vcm1hbGl6ZSgpLHQ/dC5zdGF0dXM6dm9pZCAwKX0pLG4ubm9ybWFsaXplKCksb31mdW5jdGlvbiBlQShBKXtyZXR1cm4hIShBJiZBLl9fQ0FOQ0VMX18pfWZ1bmN0aW9uIFllKEEsdCxlKXtkLmNhbGwodGhpcyxBPz8iY2FuY2VsZWQiLGQuRVJSX0NBTkNFTEVELHQsZSksdGhpcy5uYW1lPSJDYW5jZWxlZEVycm9yIn1JLmluaGVyaXRzKFllLGQse19fQ0FOQ0VMX186ITB9KTt2YXIgTz1ZZTtmdW5jdGlvbiBLQShBLHQsZSl7bGV0IHI9ZS5jb25maWcudmFsaWRhdGVTdGF0dXM7IWUuc3RhdHVzfHwhcnx8cihlLnN0YXR1cyk/QShlKTp0KG5ldyBkKCJSZXF1ZXN0IGZhaWxlZCB3aXRoIHN0YXR1cyBjb2RlICIrZS5zdGF0dXMsW2QuRVJSX0JBRF9SRVFVRVNULGQuRVJSX0JBRF9SRVNQT05TRV1bTWF0aC5mbG9vcihlLnN0YXR1cy8xMDApLTRdLGUuY29uZmlnLGUucmVxdWVzdCxlKSl9dmFyIHFlPXcuaGFzU3RhbmRhcmRCcm93c2VyRW52P3t3cml0ZShBLHQsZSxyLG4sbyl7bGV0IGk9W0ErIj0iK2VuY29kZVVSSUNvbXBvbmVudCh0KV07SS5pc051bWJlcihlKSYmaS5wdXNoKCJleHBpcmVzPSIrbmV3IERhdGUoZSkudG9HTVRTdHJpbmcoKSksSS5pc1N0cmluZyhyKSYmaS5wdXNoKCJwYXRoPSIrciksSS5pc1N0cmluZyhuKSYmaS5wdXNoKCJkb21haW49IituKSxvPT09ITAmJmkucHVzaCgic2VjdXJlIiksZG9jdW1lbnQuY29va2llPWkuam9pbigiOyAiKX0scmVhZChBKXtsZXQgdD1kb2N1bWVudC5jb29raWUubWF0Y2gobmV3IFJlZ0V4cCgiKF58O1xccyopKCIrQSsiKT0oW147XSopIikpO3JldHVybiB0P2RlY29kZVVSSUNvbXBvbmVudCh0WzNdKTpudWxsfSxyZW1vdmUoQSl7dGhpcy53cml0ZShBLCIiLERhdGUubm93KCktODY0ZTUpfX06e3dyaXRlKCl7fSxyZWFkKCl7cmV0dXJuIG51bGx9LHJlbW92ZSgpe319O2Z1bmN0aW9uIHZBKEEpe3JldHVybi9eKFthLXpdW2EtelxkK1wtLl0qOik/XC9cLy9pLnRlc3QoQSl9ZnVuY3Rpb24gV0EoQSx0KXtyZXR1cm4gdD9BLnJlcGxhY2UoL1wvKyQvLCIiKSsiLyIrdC5yZXBsYWNlKC9eXC8rLywiIik6QX1mdW5jdGlvbiB0QShBLHQpe3JldHVybiBBJiYhdkEodCk/V0EoQSx0KTp0fXZhciBLZT13Lmhhc1N0YW5kYXJkQnJvd3NlckVudj9mdW5jdGlvbigpe2xldCB0PS8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIikscjtmdW5jdGlvbiBuKG8pe2xldCBpPW87cmV0dXJuIHQmJihlLnNldEF0dHJpYnV0ZSgiaHJlZiIsaSksaT1lLmhyZWYpLGUuc2V0QXR0cmlidXRlKCJocmVmIixpKSx7aHJlZjplLmhyZWYscHJvdG9jb2w6ZS5wcm90b2NvbD9lLnByb3RvY29sLnJlcGxhY2UoLzokLywiIik6IiIsaG9zdDplLmhvc3Qsc2VhcmNoOmUuc2VhcmNoP2Uuc2VhcmNoLnJlcGxhY2UoL15cPy8sIiIpOiIiLGhhc2g6ZS5oYXNoP2UuaGFzaC5yZXBsYWNlKC9eIy8sIiIpOiIiLGhvc3RuYW1lOmUuaG9zdG5hbWUscG9ydDplLnBvcnQscGF0aG5hbWU6ZS5wYXRobmFtZS5jaGFyQXQoMCk9PT0iLyI/ZS5wYXRobmFtZToiLyIrZS5wYXRobmFtZX19cmV0dXJuIHI9bih3aW5kb3cubG9jYXRpb24uaHJlZiksZnVuY3Rpb24oaSl7bGV0IGc9SS5pc1N0cmluZyhpKT9uKGkpOmk7cmV0dXJuIGcucHJvdG9jb2w9PT1yLnByb3RvY29sJiZnLmhvc3Q9PT1yLmhvc3R9fSgpOmZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuITB9fSgpO2Z1bmN0aW9uIGpBKEEpe2xldCB0PS9eKFstK1x3XXsxLDI1fSkoOj9cL1wvfDopLy5leGVjKEEpO3JldHVybiB0JiZ0WzFdfHwiIn1mdW5jdGlvbiBHcihBLHQpe0E9QXx8MTA7bGV0IGU9bmV3IEFycmF5KEEpLHI9bmV3IEFycmF5KEEpLG49MCxvPTAsaTtyZXR1cm4gdD10IT09dm9pZCAwP3Q6MWUzLGZ1bmN0aW9uKEMpe2xldCBsPURhdGUubm93KCkscz1yW29dO2l8fChpPWwpLGVbbl09QyxyW25dPWw7bGV0IGE9byxmPTA7Zm9yKDthIT09bjspZis9ZVthKytdLGE9YSVBO2lmKG49KG4rMSklQSxuPT09byYmKG89KG8rMSklQSksbC1pPHQpcmV0dXJuO2xldCBCPXMmJmwtcztyZXR1cm4gQj9NYXRoLnJvdW5kKGYqMWUzL0IpOnZvaWQgMH19dmFyIHZlPUdyO2Z1bmN0aW9uIFdlKEEsdCl7bGV0IGU9MCxyPXZlKDUwLDI1MCk7cmV0dXJuIG49PntsZXQgbz1uLmxvYWRlZCxpPW4ubGVuZ3RoQ29tcHV0YWJsZT9uLnRvdGFsOnZvaWQgMCxnPW8tZSxDPXIoZyksbD1vPD1pO2U9bztsZXQgcz17bG9hZGVkOm8sdG90YWw6aSxwcm9ncmVzczppP28vaTp2b2lkIDAsYnl0ZXM6ZyxyYXRlOkN8fHZvaWQgMCxlc3RpbWF0ZWQ6QyYmaSYmbD8oaS1vKS9DOnZvaWQgMCxldmVudDpufTtzW3Q/ImRvd25sb2FkIjoidXBsb2FkIl09ITAsQShzKX19dmFyIFRyPXR5cGVvZiBYTUxIdHRwUmVxdWVzdDwidSIsamU9VHImJmZ1bmN0aW9uKEEpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihlLHIpe2xldCBuPUEuZGF0YSxvPUQuZnJvbShBLmhlYWRlcnMpLm5vcm1hbGl6ZSgpLHtyZXNwb25zZVR5cGU6aSx3aXRoWFNSRlRva2VuOmd9PUEsQztmdW5jdGlvbiBsKCl7QS5jYW5jZWxUb2tlbiYmQS5jYW5jZWxUb2tlbi51bnN1YnNjcmliZShDKSxBLnNpZ25hbCYmQS5zaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYWJvcnQiLEMpfWxldCBzO2lmKEkuaXNGb3JtRGF0YShuKSl7aWYody5oYXNTdGFuZGFyZEJyb3dzZXJFbnZ8fHcuaGFzU3RhbmRhcmRCcm93c2VyV2ViV29ya2VyRW52KW8uc2V0Q29udGVudFR5cGUoITEpO2Vsc2UgaWYoKHM9by5nZXRDb250ZW50VHlwZSgpKSE9PSExKXtsZXRbYywuLi5RXT1zP3Muc3BsaXQoIjsiKS5tYXAocD0+cC50cmltKCkpLmZpbHRlcihCb29sZWFuKTpbXTtvLnNldENvbnRlbnRUeXBlKFtjfHwibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsLi4uUV0uam9pbigiOyAiKSl9fWxldCBhPW5ldyBYTUxIdHRwUmVxdWVzdDtpZihBLmF1dGgpe2xldCBjPUEuYXV0aC51c2VybmFtZXx8IiIsUT1BLmF1dGgucGFzc3dvcmQ/dW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEEuYXV0aC5wYXNzd29yZCkpOiIiO28uc2V0KCJBdXRob3JpemF0aW9uIiwiQmFzaWMgIitidG9hKGMrIjoiK1EpKX1sZXQgZj10QShBLmJhc2VVUkwsQS51cmwpO2Eub3BlbihBLm1ldGhvZC50b1VwcGVyQ2FzZSgpLFgoZixBLnBhcmFtcyxBLnBhcmFtc1NlcmlhbGl6ZXIpLCEwKSxhLnRpbWVvdXQ9QS50aW1lb3V0O2Z1bmN0aW9uIEIoKXtpZighYSlyZXR1cm47bGV0IGM9RC5mcm9tKCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiaW4gYSYmYS5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSkscD17ZGF0YTohaXx8aT09PSJ0ZXh0Inx8aT09PSJqc29uIj9hLnJlc3BvbnNlVGV4dDphLnJlc3BvbnNlLHN0YXR1czphLnN0YXR1cyxzdGF0dXNUZXh0OmEuc3RhdHVzVGV4dCxoZWFkZXJzOmMsY29uZmlnOkEscmVxdWVzdDphfTtLQShmdW5jdGlvbihTKXtlKFMpLGwoKX0sZnVuY3Rpb24oUyl7cihTKSxsKCl9LHApLGE9bnVsbH1pZigib25sb2FkZW5kImluIGE/YS5vbmxvYWRlbmQ9QjphLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpeyFhfHxhLnJlYWR5U3RhdGUhPT00fHxhLnN0YXR1cz09PTAmJiEoYS5yZXNwb25zZVVSTCYmYS5yZXNwb25zZVVSTC5pbmRleE9mKCJmaWxlOiIpPT09MCl8fHNldFRpbWVvdXQoQil9LGEub25hYm9ydD1mdW5jdGlvbigpe2EmJihyKG5ldyBkKCJSZXF1ZXN0IGFib3J0ZWQiLGQuRUNPTk5BQk9SVEVELEEsYSkpLGE9bnVsbCl9LGEub25lcnJvcj1mdW5jdGlvbigpe3IobmV3IGQoIk5ldHdvcmsgRXJyb3IiLGQuRVJSX05FVFdPUkssQSxhKSksYT1udWxsfSxhLm9udGltZW91dD1mdW5jdGlvbigpe2xldCBRPUEudGltZW91dD8idGltZW91dCBvZiAiK0EudGltZW91dCsibXMgZXhjZWVkZWQiOiJ0aW1lb3V0IGV4Y2VlZGVkIixwPUEudHJhbnNpdGlvbmFsfHx1QTtBLnRpbWVvdXRFcnJvck1lc3NhZ2UmJihRPUEudGltZW91dEVycm9yTWVzc2FnZSkscihuZXcgZChRLHAuY2xhcmlmeVRpbWVvdXRFcnJvcj9kLkVUSU1FRE9VVDpkLkVDT05OQUJPUlRFRCxBLGEpKSxhPW51bGx9LHcuaGFzU3RhbmRhcmRCcm93c2VyRW52JiYoZyYmSS5pc0Z1bmN0aW9uKGcpJiYoZz1nKEEpKSxnfHxnIT09ITEmJktlKGYpKSl7bGV0IGM9QS54c3JmSGVhZGVyTmFtZSYmQS54c3JmQ29va2llTmFtZSYmcWUucmVhZChBLnhzcmZDb29raWVOYW1lKTtjJiZvLnNldChBLnhzcmZIZWFkZXJOYW1lLGMpfW49PT12b2lkIDAmJm8uc2V0Q29udGVudFR5cGUobnVsbCksInNldFJlcXVlc3RIZWFkZXIiaW4gYSYmSS5mb3JFYWNoKG8udG9KU09OKCksZnVuY3Rpb24oUSxwKXthLnNldFJlcXVlc3RIZWFkZXIocCxRKX0pLEkuaXNVbmRlZmluZWQoQS53aXRoQ3JlZGVudGlhbHMpfHwoYS53aXRoQ3JlZGVudGlhbHM9ISFBLndpdGhDcmVkZW50aWFscyksaSYmaSE9PSJqc29uIiYmKGEucmVzcG9uc2VUeXBlPUEucmVzcG9uc2VUeXBlKSx0eXBlb2YgQS5vbkRvd25sb2FkUHJvZ3Jlc3M9PSJmdW5jdGlvbiImJmEuYWRkRXZlbnRMaXN0ZW5lcigicHJvZ3Jlc3MiLFdlKEEub25Eb3dubG9hZFByb2dyZXNzLCEwKSksdHlwZW9mIEEub25VcGxvYWRQcm9ncmVzcz09ImZ1bmN0aW9uIiYmYS51cGxvYWQmJmEudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoInByb2dyZXNzIixXZShBLm9uVXBsb2FkUHJvZ3Jlc3MpKSwoQS5jYW5jZWxUb2tlbnx8QS5zaWduYWwpJiYoQz1jPT57YSYmKHIoIWN8fGMudHlwZT9uZXcgTyhudWxsLEEsYSk6YyksYS5hYm9ydCgpLGE9bnVsbCl9LEEuY2FuY2VsVG9rZW4mJkEuY2FuY2VsVG9rZW4uc3Vic2NyaWJlKEMpLEEuc2lnbmFsJiYoQS5zaWduYWwuYWJvcnRlZD9DKCk6QS5zaWduYWwuYWRkRXZlbnRMaXN0ZW5lcigiYWJvcnQiLEMpKSk7bGV0IHU9akEoZik7aWYodSYmdy5wcm90b2NvbHMuaW5kZXhPZih1KT09PS0xKXtyKG5ldyBkKCJVbnN1cHBvcnRlZCBwcm90b2NvbCAiK3UrIjoiLGQuRVJSX0JBRF9SRVFVRVNULEEpKTtyZXR1cm59YS5zZW5kKG58fG51bGwpfSl9O3ZhciBfQT17aHR0cDpDQSx4aHI6amV9O0kuZm9yRWFjaChfQSwoQSx0KT0+e2lmKEEpe3RyeXtPYmplY3QuZGVmaW5lUHJvcGVydHkoQSwibmFtZSIse3ZhbHVlOnR9KX1jYXRjaHt9T2JqZWN0LmRlZmluZVByb3BlcnR5KEEsImFkYXB0ZXJOYW1lIix7dmFsdWU6dH0pfX0pO3ZhciBfZT1BPT5gLSAke0F9YCxMcj1BPT5JLmlzRnVuY3Rpb24oQSl8fEE9PT1udWxsfHxBPT09ITEsUUE9e2dldEFkYXB0ZXI6QT0+e0E9SS5pc0FycmF5KEEpP0E6W0FdO2xldHtsZW5ndGg6dH09QSxlLHIsbj17fTtmb3IobGV0IG89MDtvPHQ7bysrKXtlPUFbb107bGV0IGk7aWYocj1lLCFMcihlKSYmKHI9X0FbKGk9U3RyaW5nKGUpKS50b0xvd2VyQ2FzZSgpXSxyPT09dm9pZCAwKSl0aHJvdyBuZXcgZChgVW5rbm93biBhZGFwdGVyICcke2l9J2ApO2lmKHIpYnJlYWs7bltpfHwiIyIrb109cn1pZighcil7bGV0IG89T2JqZWN0LmVudHJpZXMobikubWFwKChbZyxDXSk9PmBhZGFwdGVyICR7Z30gYCsoQz09PSExPyJpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBlbnZpcm9ubWVudCI6ImlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGJ1aWxkIikpLGk9dD9vLmxlbmd0aD4xP2BzaW5jZSA6CmArby5tYXAoX2UpLmpvaW4oYApgKToiICIrX2Uob1swXSk6ImFzIG5vIGFkYXB0ZXIgc3BlY2lmaWVkIjt0aHJvdyBuZXcgZCgiVGhlcmUgaXMgbm8gc3VpdGFibGUgYWRhcHRlciB0byBkaXNwYXRjaCB0aGUgcmVxdWVzdCAiK2ksIkVSUl9OT1RfU1VQUE9SVCIpfXJldHVybiByfSxhZGFwdGVyczpfQX07ZnVuY3Rpb24gekEoQSl7aWYoQS5jYW5jZWxUb2tlbiYmQS5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCksQS5zaWduYWwmJkEuc2lnbmFsLmFib3J0ZWQpdGhyb3cgbmV3IE8obnVsbCxBKX1mdW5jdGlvbiBkQShBKXtyZXR1cm4gekEoQSksQS5oZWFkZXJzPUQuZnJvbShBLmhlYWRlcnMpLEEuZGF0YT1BQS5jYWxsKEEsQS50cmFuc2Zvcm1SZXF1ZXN0KSxbInBvc3QiLCJwdXQiLCJwYXRjaCJdLmluZGV4T2YoQS5tZXRob2QpIT09LTEmJkEuaGVhZGVycy5zZXRDb250ZW50VHlwZSgiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwhMSksUUEuZ2V0QWRhcHRlcihBLmFkYXB0ZXJ8fEsuYWRhcHRlcikoQSkudGhlbihmdW5jdGlvbihyKXtyZXR1cm4gekEoQSksci5kYXRhPUFBLmNhbGwoQSxBLnRyYW5zZm9ybVJlc3BvbnNlLHIpLHIuaGVhZGVycz1ELmZyb20oci5oZWFkZXJzKSxyfSxmdW5jdGlvbihyKXtyZXR1cm4gZUEocil8fCh6QShBKSxyJiZyLnJlc3BvbnNlJiYoci5yZXNwb25zZS5kYXRhPUFBLmNhbGwoQSxBLnRyYW5zZm9ybVJlc3BvbnNlLHIucmVzcG9uc2UpLHIucmVzcG9uc2UuaGVhZGVycz1ELmZyb20oci5yZXNwb25zZS5oZWFkZXJzKSkpLFByb21pc2UucmVqZWN0KHIpfSl9dmFyIHplPUE9PkEgaW5zdGFuY2VvZiBEP0EudG9KU09OKCk6QTtmdW5jdGlvbiBUKEEsdCl7dD10fHx7fTtsZXQgZT17fTtmdW5jdGlvbiByKGwscyxhKXtyZXR1cm4gSS5pc1BsYWluT2JqZWN0KGwpJiZJLmlzUGxhaW5PYmplY3Qocyk/SS5tZXJnZS5jYWxsKHtjYXNlbGVzczphfSxsLHMpOkkuaXNQbGFpbk9iamVjdChzKT9JLm1lcmdlKHt9LHMpOkkuaXNBcnJheShzKT9zLnNsaWNlKCk6c31mdW5jdGlvbiBuKGwscyxhKXtpZihJLmlzVW5kZWZpbmVkKHMpKXtpZighSS5pc1VuZGVmaW5lZChsKSlyZXR1cm4gcih2b2lkIDAsbCxhKX1lbHNlIHJldHVybiByKGwscyxhKX1mdW5jdGlvbiBvKGwscyl7aWYoIUkuaXNVbmRlZmluZWQocykpcmV0dXJuIHIodm9pZCAwLHMpfWZ1bmN0aW9uIGkobCxzKXtpZihJLmlzVW5kZWZpbmVkKHMpKXtpZighSS5pc1VuZGVmaW5lZChsKSlyZXR1cm4gcih2b2lkIDAsbCl9ZWxzZSByZXR1cm4gcih2b2lkIDAscyl9ZnVuY3Rpb24gZyhsLHMsYSl7aWYoYSBpbiB0KXJldHVybiByKGwscyk7aWYoYSBpbiBBKXJldHVybiByKHZvaWQgMCxsKX1sZXQgQz17dXJsOm8sbWV0aG9kOm8sZGF0YTpvLGJhc2VVUkw6aSx0cmFuc2Zvcm1SZXF1ZXN0OmksdHJhbnNmb3JtUmVzcG9uc2U6aSxwYXJhbXNTZXJpYWxpemVyOmksdGltZW91dDppLHRpbWVvdXRNZXNzYWdlOmksd2l0aENyZWRlbnRpYWxzOmksd2l0aFhTUkZUb2tlbjppLGFkYXB0ZXI6aSxyZXNwb25zZVR5cGU6aSx4c3JmQ29va2llTmFtZTppLHhzcmZIZWFkZXJOYW1lOmksb25VcGxvYWRQcm9ncmVzczppLG9uRG93bmxvYWRQcm9ncmVzczppLGRlY29tcHJlc3M6aSxtYXhDb250ZW50TGVuZ3RoOmksbWF4Qm9keUxlbmd0aDppLGJlZm9yZVJlZGlyZWN0OmksdHJhbnNwb3J0OmksaHR0cEFnZW50OmksaHR0cHNBZ2VudDppLGNhbmNlbFRva2VuOmksc29ja2V0UGF0aDppLHJlc3BvbnNlRW5jb2Rpbmc6aSx2YWxpZGF0ZVN0YXR1czpnLGhlYWRlcnM6KGwscyk9Pm4oemUobCksemUocyksITApfTtyZXR1cm4gSS5mb3JFYWNoKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sQSx0KSksZnVuY3Rpb24ocyl7bGV0IGE9Q1tzXXx8bixmPWEoQVtzXSx0W3NdLHMpO0kuaXNVbmRlZmluZWQoZikmJmEhPT1nfHwoZVtzXT1mKX0pLGV9dmFyIHBBPSIxLjYuMiI7dmFyIFZBPXt9O1sib2JqZWN0IiwiYm9vbGVhbiIsIm51bWJlciIsImZ1bmN0aW9uIiwic3RyaW5nIiwic3ltYm9sIl0uZm9yRWFjaCgoQSx0KT0+e1ZBW0FdPWZ1bmN0aW9uKHIpe3JldHVybiB0eXBlb2Ygcj09PUF8fCJhIisodDwxPyJuICI6IiAiKStBfX0pO3ZhciBWZT17fTtWQS50cmFuc2l0aW9uYWw9ZnVuY3Rpb24odCxlLHIpe2Z1bmN0aW9uIG4obyxpKXtyZXR1cm4iW0F4aW9zIHYiK3BBKyJdIFRyYW5zaXRpb25hbCBvcHRpb24gJyIrbysiJyIraSsocj8iLiAiK3I6IiIpfXJldHVybihvLGksZyk9PntpZih0PT09ITEpdGhyb3cgbmV3IGQobihpLCIgaGFzIGJlZW4gcmVtb3ZlZCIrKGU/IiBpbiAiK2U6IiIpKSxkLkVSUl9ERVBSRUNBVEVEKTtyZXR1cm4gZSYmIVZlW2ldJiYoVmVbaV09ITAsY29uc29sZS53YXJuKG4oaSwiIGhhcyBiZWVuIGRlcHJlY2F0ZWQgc2luY2UgdiIrZSsiIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5lYXIgZnV0dXJlIikpKSx0P3QobyxpLGcpOiEwfX07ZnVuY3Rpb24geHIoQSx0LGUpe2lmKHR5cGVvZiBBIT0ib2JqZWN0Iil0aHJvdyBuZXcgZCgib3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdCIsZC5FUlJfQkFEX09QVElPTl9WQUxVRSk7bGV0IHI9T2JqZWN0LmtleXMoQSksbj1yLmxlbmd0aDtmb3IoO24tLSA+MDspe2xldCBvPXJbbl0saT10W29dO2lmKGkpe2xldCBnPUFbb10sQz1nPT09dm9pZCAwfHxpKGcsbyxBKTtpZihDIT09ITApdGhyb3cgbmV3IGQoIm9wdGlvbiAiK28rIiBtdXN0IGJlICIrQyxkLkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtjb250aW51ZX1pZihlIT09ITApdGhyb3cgbmV3IGQoIlVua25vd24gb3B0aW9uICIrbyxkLkVSUl9CQURfT1BUSU9OKX19dmFyIG1BPXthc3NlcnRPcHRpb25zOnhyLHZhbGlkYXRvcnM6VkF9O3ZhciBQPW1BLnZhbGlkYXRvcnMsVz1jbGFzc3tjb25zdHJ1Y3Rvcih0KXt0aGlzLmRlZmF1bHRzPXQsdGhpcy5pbnRlcmNlcHRvcnM9e3JlcXVlc3Q6bmV3IEpBLHJlc3BvbnNlOm5ldyBKQX19cmVxdWVzdCh0LGUpe3R5cGVvZiB0PT0ic3RyaW5nIj8oZT1lfHx7fSxlLnVybD10KTplPXR8fHt9LGU9VCh0aGlzLmRlZmF1bHRzLGUpO2xldHt0cmFuc2l0aW9uYWw6cixwYXJhbXNTZXJpYWxpemVyOm4saGVhZGVyczpvfT1lO3IhPT12b2lkIDAmJm1BLmFzc2VydE9wdGlvbnMocix7c2lsZW50SlNPTlBhcnNpbmc6UC50cmFuc2l0aW9uYWwoUC5ib29sZWFuKSxmb3JjZWRKU09OUGFyc2luZzpQLnRyYW5zaXRpb25hbChQLmJvb2xlYW4pLGNsYXJpZnlUaW1lb3V0RXJyb3I6UC50cmFuc2l0aW9uYWwoUC5ib29sZWFuKX0sITEpLG4hPW51bGwmJihJLmlzRnVuY3Rpb24obik/ZS5wYXJhbXNTZXJpYWxpemVyPXtzZXJpYWxpemU6bn06bUEuYXNzZXJ0T3B0aW9ucyhuLHtlbmNvZGU6UC5mdW5jdGlvbixzZXJpYWxpemU6UC5mdW5jdGlvbn0sITApKSxlLm1ldGhvZD0oZS5tZXRob2R8fHRoaXMuZGVmYXVsdHMubWV0aG9kfHwiZ2V0IikudG9Mb3dlckNhc2UoKTtsZXQgaT1vJiZJLm1lcmdlKG8uY29tbW9uLG9bZS5tZXRob2RdKTtvJiZJLmZvckVhY2goWyJkZWxldGUiLCJnZXQiLCJoZWFkIiwicG9zdCIsInB1dCIsInBhdGNoIiwiY29tbW9uIl0sdT0+e2RlbGV0ZSBvW3VdfSksZS5oZWFkZXJzPUQuY29uY2F0KGksbyk7bGV0IGc9W10sQz0hMDt0aGlzLmludGVyY2VwdG9ycy5yZXF1ZXN0LmZvckVhY2goZnVuY3Rpb24oYyl7dHlwZW9mIGMucnVuV2hlbj09ImZ1bmN0aW9uIiYmYy5ydW5XaGVuKGUpPT09ITF8fChDPUMmJmMuc3luY2hyb25vdXMsZy51bnNoaWZ0KGMuZnVsZmlsbGVkLGMucmVqZWN0ZWQpKX0pO2xldCBsPVtdO3RoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24oYyl7bC5wdXNoKGMuZnVsZmlsbGVkLGMucmVqZWN0ZWQpfSk7bGV0IHMsYT0wLGY7aWYoIUMpe2xldCB1PVtkQS5iaW5kKHRoaXMpLHZvaWQgMF07Zm9yKHUudW5zaGlmdC5hcHBseSh1LGcpLHUucHVzaC5hcHBseSh1LGwpLGY9dS5sZW5ndGgscz1Qcm9taXNlLnJlc29sdmUoZSk7YTxmOylzPXMudGhlbih1W2ErK10sdVthKytdKTtyZXR1cm4gc31mPWcubGVuZ3RoO2xldCBCPWU7Zm9yKGE9MDthPGY7KXtsZXQgdT1nW2ErK10sYz1nW2ErK107dHJ5e0I9dShCKX1jYXRjaChRKXtjLmNhbGwodGhpcyxRKTticmVha319dHJ5e3M9ZEEuY2FsbCh0aGlzLEIpfWNhdGNoKHUpe3JldHVybiBQcm9taXNlLnJlamVjdCh1KX1mb3IoYT0wLGY9bC5sZW5ndGg7YTxmOylzPXMudGhlbihsW2ErK10sbFthKytdKTtyZXR1cm4gc31nZXRVcmkodCl7dD1UKHRoaXMuZGVmYXVsdHMsdCk7bGV0IGU9dEEodC5iYXNlVVJMLHQudXJsKTtyZXR1cm4gWChlLHQucGFyYW1zLHQucGFyYW1zU2VyaWFsaXplcil9fTtJLmZvckVhY2goWyJkZWxldGUiLCJnZXQiLCJoZWFkIiwib3B0aW9ucyJdLGZ1bmN0aW9uKHQpe1cucHJvdG90eXBlW3RdPWZ1bmN0aW9uKGUscil7cmV0dXJuIHRoaXMucmVxdWVzdChUKHJ8fHt9LHttZXRob2Q6dCx1cmw6ZSxkYXRhOihyfHx7fSkuZGF0YX0pKX19KTtJLmZvckVhY2goWyJwb3N0IiwicHV0IiwicGF0Y2giXSxmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHIpe3JldHVybiBmdW5jdGlvbihvLGksZyl7cmV0dXJuIHRoaXMucmVxdWVzdChUKGd8fHt9LHttZXRob2Q6dCxoZWFkZXJzOnI/eyJDb250ZW50LVR5cGUiOiJtdWx0aXBhcnQvZm9ybS1kYXRhIn06e30sdXJsOm8sZGF0YTppfSkpfX1XLnByb3RvdHlwZVt0XT1lKCksVy5wcm90b3R5cGVbdCsiRm9ybSJdPWUoITApfSk7dmFyIHJBPVc7dmFyIFpBPWNsYXNzIEF7Y29uc3RydWN0b3IodCl7aWYodHlwZW9mIHQhPSJmdW5jdGlvbiIpdGhyb3cgbmV3IFR5cGVFcnJvcigiZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLiIpO2xldCBlO3RoaXMucHJvbWlzZT1uZXcgUHJvbWlzZShmdW5jdGlvbihvKXtlPW99KTtsZXQgcj10aGlzO3RoaXMucHJvbWlzZS50aGVuKG49PntpZighci5fbGlzdGVuZXJzKXJldHVybjtsZXQgbz1yLl9saXN0ZW5lcnMubGVuZ3RoO2Zvcig7by0tID4wOylyLl9saXN0ZW5lcnNbb10obik7ci5fbGlzdGVuZXJzPW51bGx9KSx0aGlzLnByb21pc2UudGhlbj1uPT57bGV0IG8saT1uZXcgUHJvbWlzZShnPT57ci5zdWJzY3JpYmUoZyksbz1nfSkudGhlbihuKTtyZXR1cm4gaS5jYW5jZWw9ZnVuY3Rpb24oKXtyLnVuc3Vic2NyaWJlKG8pfSxpfSx0KGZ1bmN0aW9uKG8saSxnKXtyLnJlYXNvbnx8KHIucmVhc29uPW5ldyBPKG8saSxnKSxlKHIucmVhc29uKSl9KX10aHJvd0lmUmVxdWVzdGVkKCl7aWYodGhpcy5yZWFzb24pdGhyb3cgdGhpcy5yZWFzb259c3Vic2NyaWJlKHQpe2lmKHRoaXMucmVhc29uKXt0KHRoaXMucmVhc29uKTtyZXR1cm59dGhpcy5fbGlzdGVuZXJzP3RoaXMuX2xpc3RlbmVycy5wdXNoKHQpOnRoaXMuX2xpc3RlbmVycz1bdF19dW5zdWJzY3JpYmUodCl7aWYoIXRoaXMuX2xpc3RlbmVycylyZXR1cm47bGV0IGU9dGhpcy5fbGlzdGVuZXJzLmluZGV4T2YodCk7ZSE9PS0xJiZ0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKGUsMSl9c3RhdGljIHNvdXJjZSgpe2xldCB0O3JldHVybnt0b2tlbjpuZXcgQShmdW5jdGlvbihuKXt0PW59KSxjYW5jZWw6dH19fSxaZT1aQTtmdW5jdGlvbiBYQShBKXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIEEuYXBwbHkobnVsbCxlKX19ZnVuY3Rpb24gJEEoQSl7cmV0dXJuIEkuaXNPYmplY3QoQSkmJkEuaXNBeGlvc0Vycm9yPT09ITB9dmFyIEFlPXtDb250aW51ZToxMDAsU3dpdGNoaW5nUHJvdG9jb2xzOjEwMSxQcm9jZXNzaW5nOjEwMixFYXJseUhpbnRzOjEwMyxPazoyMDAsQ3JlYXRlZDoyMDEsQWNjZXB0ZWQ6MjAyLE5vbkF1dGhvcml0YXRpdmVJbmZvcm1hdGlvbjoyMDMsTm9Db250ZW50OjIwNCxSZXNldENvbnRlbnQ6MjA1LFBhcnRpYWxDb250ZW50OjIwNixNdWx0aVN0YXR1czoyMDcsQWxyZWFkeVJlcG9ydGVkOjIwOCxJbVVzZWQ6MjI2LE11bHRpcGxlQ2hvaWNlczozMDAsTW92ZWRQZXJtYW5lbnRseTozMDEsRm91bmQ6MzAyLFNlZU90aGVyOjMwMyxOb3RNb2RpZmllZDozMDQsVXNlUHJveHk6MzA1LFVudXNlZDozMDYsVGVtcG9yYXJ5UmVkaXJlY3Q6MzA3LFBlcm1hbmVudFJlZGlyZWN0OjMwOCxCYWRSZXF1ZXN0OjQwMCxVbmF1dGhvcml6ZWQ6NDAxLFBheW1lbnRSZXF1aXJlZDo0MDIsRm9yYmlkZGVuOjQwMyxOb3RGb3VuZDo0MDQsTWV0aG9kTm90QWxsb3dlZDo0MDUsTm90QWNjZXB0YWJsZTo0MDYsUHJveHlBdXRoZW50aWNhdGlvblJlcXVpcmVkOjQwNyxSZXF1ZXN0VGltZW91dDo0MDgsQ29uZmxpY3Q6NDA5LEdvbmU6NDEwLExlbmd0aFJlcXVpcmVkOjQxMSxQcmVjb25kaXRpb25GYWlsZWQ6NDEyLFBheWxvYWRUb29MYXJnZTo0MTMsVXJpVG9vTG9uZzo0MTQsVW5zdXBwb3J0ZWRNZWRpYVR5cGU6NDE1LFJhbmdlTm90U2F0aXNmaWFibGU6NDE2LEV4cGVjdGF0aW9uRmFpbGVkOjQxNyxJbUFUZWFwb3Q6NDE4LE1pc2RpcmVjdGVkUmVxdWVzdDo0MjEsVW5wcm9jZXNzYWJsZUVudGl0eTo0MjIsTG9ja2VkOjQyMyxGYWlsZWREZXBlbmRlbmN5OjQyNCxUb29FYXJseTo0MjUsVXBncmFkZVJlcXVpcmVkOjQyNixQcmVjb25kaXRpb25SZXF1aXJlZDo0MjgsVG9vTWFueVJlcXVlc3RzOjQyOSxSZXF1ZXN0SGVhZGVyRmllbGRzVG9vTGFyZ2U6NDMxLFVuYXZhaWxhYmxlRm9yTGVnYWxSZWFzb25zOjQ1MSxJbnRlcm5hbFNlcnZlckVycm9yOjUwMCxOb3RJbXBsZW1lbnRlZDo1MDEsQmFkR2F0ZXdheTo1MDIsU2VydmljZVVuYXZhaWxhYmxlOjUwMyxHYXRld2F5VGltZW91dDo1MDQsSHR0cFZlcnNpb25Ob3RTdXBwb3J0ZWQ6NTA1LFZhcmlhbnRBbHNvTmVnb3RpYXRlczo1MDYsSW5zdWZmaWNpZW50U3RvcmFnZTo1MDcsTG9vcERldGVjdGVkOjUwOCxOb3RFeHRlbmRlZDo1MTAsTmV0d29ya0F1dGhlbnRpY2F0aW9uUmVxdWlyZWQ6NTExfTtPYmplY3QuZW50cmllcyhBZSkuZm9yRWFjaCgoW0EsdF0pPT57QWVbdF09QX0pO3ZhciBYZT1BZTtmdW5jdGlvbiAkZShBKXtsZXQgdD1uZXcgckEoQSksZT16KHJBLnByb3RvdHlwZS5yZXF1ZXN0LHQpO3JldHVybiBJLmV4dGVuZChlLHJBLnByb3RvdHlwZSx0LHthbGxPd25LZXlzOiEwfSksSS5leHRlbmQoZSx0LG51bGwse2FsbE93bktleXM6ITB9KSxlLmNyZWF0ZT1mdW5jdGlvbihuKXtyZXR1cm4gJGUoVChBLG4pKX0sZX12YXIgbT0kZShLKTttLkF4aW9zPXJBO20uQ2FuY2VsZWRFcnJvcj1PO20uQ2FuY2VsVG9rZW49WmU7bS5pc0NhbmNlbD1lQTttLlZFUlNJT049cEE7bS50b0Zvcm1EYXRhPXg7bS5BeGlvc0Vycm9yPWQ7bS5DYW5jZWw9bS5DYW5jZWxlZEVycm9yO20uYWxsPWZ1bmN0aW9uKHQpe3JldHVybiBQcm9taXNlLmFsbCh0KX07bS5zcHJlYWQ9WEE7bS5pc0F4aW9zRXJyb3I9JEE7bS5tZXJnZUNvbmZpZz1UO20uQXhpb3NIZWFkZXJzPUQ7bS5mb3JtVG9KU09OPUE9PmZBKEkuaXNIVE1MRm9ybShBKT9uZXcgRm9ybURhdGEoQSk6QSk7bS5nZXRBZGFwdGVyPVFBLmdldEFkYXB0ZXI7bS5IdHRwU3RhdHVzQ29kZT1YZTttLmRlZmF1bHQ9bTt2YXIgaj1tO3ZhcntBeGlvczpRYSxBeGlvc0Vycm9yOmRhLENhbmNlbGVkRXJyb3I6cGEsaXNDYW5jZWw6bWEsQ2FuY2VsVG9rZW46aGEsVkVSU0lPTjp5YSxhbGw6d2EsQ2FuY2VsOkRhLGlzQXhpb3NFcnJvcjpTYSxzcHJlYWQ6RmEsdG9Gb3JtRGF0YTpSYSxBeGlvc0hlYWRlcnM6a2EsSHR0cFN0YXR1c0NvZGU6YmEsZm9ybVRvSlNPTjpVYSxnZXRBZGFwdGVyOk5hLG1lcmdlQ29uZmlnOkdhfT1qO2Z1bmN0aW9uIEF0KEEpe2xldCB0PU5BKEEpLGU9QTtyZXR1cm4gZS53b3JrZXJQcm94eT10LGUub3JpZ2luYWxUZXJtaW5hdGU9ZS50ZXJtaW5hdGUsZS50ZXJtaW5hdGU9KCk9PntlLndvcmtlclByb3h5W1VBXSgpLGUub3JpZ2luYWxUZXJtaW5hdGUoKX0se3dvcmtlclByb3h5OnQsd29ya2VyOmV9fWFzeW5jIGZ1bmN0aW9uIE9yKEEsdCl7bGV0IGU7aWYoQSE9bnVsbCl7bGV0IG89QTtyZXR1cm4gby53b3JrZXJQcm94eSE9PXZvaWQgMD8oZT1vLndvcmtlclByb3h5LHt3b3JrZXJQcm94eTplLHdvcmtlcjpvfSk6QXQoQSl9bGV0IHI9dCxuPW51bGw7aWYocj09PW51bGwpbj1uZXcgV29ya2VyKG5ldyBVUkwoIi4vd2ViLXdvcmtlcnMvaXRrLXdhc20tcGlwZWxpbmUud29ya2VyLmpzIixpbXBvcnQubWV0YS51cmwpLHt0eXBlOiJtb2R1bGUifSk7ZWxzZSBpZihyLnN0YXJ0c1dpdGgoImh0dHAiKSl7bGV0IG89YXdhaXQgai5nZXQocix7cmVzcG9uc2VUeXBlOiJibG9iIn0pLGk9VVJMLmNyZWF0ZU9iamVjdFVSTChvLmRhdGEpO249bmV3IFdvcmtlcihpLHt0eXBlOiJtb2R1bGUifSl9ZWxzZSBuPW5ldyBXb3JrZXIocix7dHlwZToibW9kdWxlIn0pO3JldHVybiBBdChuKX12YXIgZXQ9T3I7YXN5bmMgZnVuY3Rpb24gUHIoQSx0KXtsZXQgZT0idW5rbm93biI7dHlwZW9mIEEhPSJzdHJpbmciP2U9QS5ocmVmOkEuc3RhcnRzV2l0aCgiaHR0cCIpP2U9QTplPXR5cGVvZiB0PCJ1Ij9gJHt0fS8ke0F9YDpBLGUuZW5kc1dpdGgoIi5qcyIpJiYoZT1lLnN1YnN0cmluZygwLGUubGVuZ3RoLTMpKSxlLmVuZHNXaXRoKCIud2FzbSIpJiYoZT1lLnN1YnN0cmluZygwLGUubGVuZ3RoLTUpKTtsZXQgcj1gJHtlfS53YXNtYCxvPShhd2FpdCBqLmdldChyLHtyZXNwb25zZVR5cGU6ImFycmF5YnVmZmVyIn0pKS5kYXRhO3JldHVybihhd2FpdCBpbXBvcnQoYCR7ZX0uanNgKSkuZGVmYXVsdCh7d2FzbUJpbmFyeTpvfSl9dmFyIHR0PVByO3ZhciBydD1hc3luYygpPT5XZWJBc3NlbWJseS52YWxpZGF0ZShuZXcgVWludDhBcnJheShbMCw5NywxMTUsMTA5LDEsMCwwLDAsMSw1LDEsOTYsMCwxLDEyMywzLDIsMSwwLDEwLDEwLDEsOCwwLDY1LDAsMjUzLDE1LDI1Myw5OCwxMV0pKTt2YXIgb3Q9dHlwZW9mIGdsb2JhbFRoaXMuU2hhcmVkQXJyYXlCdWZmZXI9PSJmdW5jdGlvbiIsaXQ9bmV3IFRleHRFbmNvZGVyLG50PW5ldyBUZXh0RGVjb2RlcigidXRmLTgiKTtmdW5jdGlvbiBKcihBLHQpe2xldCBlPXtmbGFnczoiciIsZW5jb2Rpbmc6ImJpbmFyeSJ9LHI9QS5mc19vcGVuKHQsZS5mbGFncyksbz1BLmZzX3N0YXQodCkuc2l6ZSxpPW51bGw7b3Q/aT1uZXcgU2hhcmVkQXJyYXlCdWZmZXIobyk6aT1uZXcgQXJyYXlCdWZmZXIobyk7bGV0IGc9bmV3IFVpbnQ4QXJyYXkoaSk7cmV0dXJuIEEuZnNfcmVhZChyLGcsMCxvLDApLEEuZnNfY2xvc2UociksZ31mdW5jdGlvbiBhdChBLHQsZSl7bGV0IHI9bnVsbDtvdD9yPW5ldyBTaGFyZWRBcnJheUJ1ZmZlcihlKTpyPW5ldyBBcnJheUJ1ZmZlcihlKTtsZXQgbj1uZXcgVWludDhBcnJheShyKSxvPW5ldyBVaW50OEFycmF5KEEuSEVBUFU4LmJ1ZmZlcix0LGUpO3JldHVybiBuLnNldChvKSxufWZ1bmN0aW9uIHkoQSx0LGUscil7bGV0IG49MDtyZXR1cm4gdCE9PW51bGwmJihuPUEuY2NhbGwoIml0a193YXNtX2lucHV0X2FycmF5X2FsbG9jIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLGUscix0LmJ1ZmZlci5ieXRlTGVuZ3RoXSksQS5IRUFQVTguc2V0KG5ldyBVaW50OEFycmF5KHQuYnVmZmVyKSxuKSksbn1mdW5jdGlvbiBfKEEsdCxlKXtsZXQgcj1KU09OLnN0cmluZ2lmeSh0KSxuPUEuY2NhbGwoIml0a193YXNtX2lucHV0X2pzb25fYWxsb2MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsZSxyLmxlbmd0aF0pO0Eud3JpdGVBc2NpaVRvTWVtb3J5KHIsbiwhMSl9ZnVuY3Rpb24gUihBLHQsZSxyKXtsZXQgbj1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfYWRkcmVzcyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCx0LGVdKSxvPUEuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9zaXplIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLHQsZV0pLGk9YXQoQSxuLG8pO3JldHVybiBMKHIsaS5idWZmZXIpfWZ1bmN0aW9uIGVlKEEsdCl7bGV0IGU9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2pzb25fYWRkcmVzcyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiXSxbMCx0XSkscj1BLkFzY2lpVG9TdHJpbmcoZSk7cmV0dXJuIEpTT04ucGFyc2Uocil9ZnVuY3Rpb24gSHIoQSx0LGUscil7ciE9bnVsbCYmci5sZW5ndGg+MCYmci5mb3JFYWNoKGZ1bmN0aW9uKGwscyl7c3dpdGNoKGwudHlwZSl7Y2FzZSBFLlRleHRTdHJlYW06e2xldCBhPWl0LmVuY29kZShsLmRhdGEuZGF0YSksZj15KEEsYSxzLDApLEI9e3NpemU6YS5idWZmZXIuYnl0ZUxlbmd0aCxkYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Zn1gfTtfKEEsQixzKTticmVha31jYXNlIEUuSnNvbkNvbXBhdGlibGU6e2xldCBhPWl0LmVuY29kZShKU09OLnN0cmluZ2lmeShsLmRhdGEpKSxmPXkoQSxhLHMsMCksQj17c2l6ZTphLmJ1ZmZlci5ieXRlTGVuZ3RoLGRhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtmfWB9O18oQSxCLHMpO2JyZWFrfWNhc2UgRS5CaW5hcnlTdHJlYW06e2xldCBhPWwuZGF0YS5kYXRhLGY9eShBLGEscywwKSxCPXtzaXplOmEuYnVmZmVyLmJ5dGVMZW5ndGgsZGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2Z9YH07XyhBLEIscyk7YnJlYWt9Y2FzZSBFLlRleHRGaWxlOntBLmZzX3dyaXRlRmlsZShsLmRhdGEucGF0aCxsLmRhdGEuZGF0YSk7YnJlYWt9Y2FzZSBFLkJpbmFyeUZpbGU6e0EuZnNfd3JpdGVGaWxlKGwuZGF0YS5wYXRoLGwuZGF0YS5kYXRhKTticmVha31jYXNlIEUuSW1hZ2U6e2xldCBhPWwuZGF0YSxmPXkoQSxhLmRhdGEscywwKSxCPXkoQSxhLmRpcmVjdGlvbixzLDEpLHU9dHlwZW9mIGEubWV0YWRhdGE/LmVudHJpZXM8InUiP0pTT04uc3RyaW5naWZ5KEFycmF5LmZyb20oYS5tZXRhZGF0YS5lbnRyaWVzKCkpKToiW10iLGM9e2ltYWdlVHlwZTphLmltYWdlVHlwZSxuYW1lOmEubmFtZSxvcmlnaW46YS5vcmlnaW4sc3BhY2luZzphLnNwYWNpbmcsZGlyZWN0aW9uOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Qn1gLHNpemU6YS5zaXplLGRhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtmfWAsbWV0YWRhdGE6dX07XyhBLGMscyk7YnJlYWt9Y2FzZSBFLk1lc2g6e2xldCBhPWwuZGF0YSxmPXkoQSxhLnBvaW50cyxzLDApLEI9eShBLGEuY2VsbHMscywxKSx1PXkoQSxhLnBvaW50RGF0YSxzLDIpLGM9eShBLGEuY2VsbERhdGEscywzKSxRPXttZXNoVHlwZTphLm1lc2hUeXBlLG5hbWU6YS5uYW1lLG51bWJlck9mUG9pbnRzOmEubnVtYmVyT2ZQb2ludHMscG9pbnRzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Zn1gLG51bWJlck9mQ2VsbHM6YS5udW1iZXJPZkNlbGxzLGNlbGxzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Qn1gLGNlbGxCdWZmZXJTaXplOmEuY2VsbEJ1ZmZlclNpemUsbnVtYmVyT2ZQb2ludFBpeGVsczphLm51bWJlck9mUG9pbnRQaXhlbHMscG9pbnREYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7dX1gLG51bWJlck9mQ2VsbFBpeGVsczphLm51bWJlck9mQ2VsbFBpeGVscyxjZWxsRGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2N9YH07XyhBLFEscyk7YnJlYWt9Y2FzZSBFLlBvbHlEYXRhOntsZXQgYT1sLmRhdGEsZj15KEEsYS5wb2ludHMscywwKSxCPXkoQSxhLnZlcnRpY2VzLHMsMSksdT15KEEsYS5saW5lcyxzLDIpLGM9eShBLGEucG9seWdvbnMscywzKSxRPXkoQSxhLnRyaWFuZ2xlU3RyaXBzLHMsNCkscD15KEEsYS5wb2ludERhdGEscyw1KSxGPXkoQSxhLnBvaW50RGF0YSxzLDYpLFM9e3BvbHlEYXRhVHlwZTphLnBvbHlEYXRhVHlwZSxuYW1lOmEubmFtZSxudW1iZXJPZlBvaW50czphLm51bWJlck9mUG9pbnRzLHBvaW50czpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2Z9YCx2ZXJ0aWNlc0J1ZmZlclNpemU6YS52ZXJ0aWNlc0J1ZmZlclNpemUsdmVydGljZXM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtCfWAsbGluZXNCdWZmZXJTaXplOmEubGluZXNCdWZmZXJTaXplLGxpbmVzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7dX1gLHBvbHlnb25zQnVmZmVyU2l6ZTphLnBvbHlnb25zQnVmZmVyU2l6ZSxwb2x5Z29uczpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2N9YCx0cmlhbmdsZVN0cmlwc0J1ZmZlclNpemU6YS50cmlhbmdsZVN0cmlwc0J1ZmZlclNpemUsdHJpYW5nbGVTdHJpcHM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtRfWAsbnVtYmVyT2ZQb2ludFBpeGVsczphLm51bWJlck9mUG9pbnRQaXhlbHMscG9pbnREYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7cH1gLG51bWJlck9mQ2VsbFBpeGVsczphLm51bWJlck9mQ2VsbFBpeGVscyxjZWxsRGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke0Z9YH07XyhBLFMscyk7YnJlYWt9ZGVmYXVsdDp0aHJvdyBFcnJvcigiVW5zdXBwb3J0ZWQgaW5wdXQgSW50ZXJmYWNlVHlwZSIpfX0pLEEucmVzZXRNb2R1bGVTdGRvdXQoKSxBLnJlc2V0TW9kdWxlU3RkZXJyKCk7bGV0IG49QS5zdGFja1NhdmUoKSxvPTA7dHJ5e289QS5jYWxsTWFpbih0LnNsaWNlKCkpfWNhdGNoKGwpe3Rocm93IHR5cGVvZiBsPT0ibnVtYmVyIiYmKGNvbnNvbGUubG9nKCJFeGNlcHRpb24gd2hpbGUgcnVubmluZyBwaXBlbGluZToiKSxjb25zb2xlLmxvZygic3Rkb3V0OiIsQS5nZXRNb2R1bGVTdGRvdXQoKSksY29uc29sZS5lcnJvcigic3RkZXJyOiIsQS5nZXRNb2R1bGVTdGRlcnIoKSksdHlwZW9mIEEuZ2V0RXhjZXB0aW9uTWVzc2FnZTwidSI/Y29uc29sZS5lcnJvcigiZXhjZXB0aW9uOiIsQS5nZXRFeGNlcHRpb25NZXNzYWdlKGwpKTpjb25zb2xlLmVycm9yKCJCdWlsZCBtb2R1bGUgaW4gRGVidWcgbW9kZSBmb3IgZXhjZXB0aW9uIG1lc3NhZ2UgaW5mb3JtYXRpb24uIikpLGx9ZmluYWxseXtBLnN0YWNrUmVzdG9yZShuKX1sZXQgaT1BLmdldE1vZHVsZVN0ZG91dCgpLGc9QS5nZXRNb2R1bGVTdGRlcnIoKSxDPVtdO3JldHVybiBlIT1udWxsJiZlLmxlbmd0aD4wJiZvPT09MCYmZS5mb3JFYWNoKGZ1bmN0aW9uKGwscyl7bGV0IGE9bnVsbDtzd2l0Y2gobC50eXBlKXtjYXNlIEUuVGV4dFN0cmVhbTp7bGV0IEI9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAscywwXSksdT1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfc2l6ZSIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxzLDBdKSxjPW5ldyBVaW50OEFycmF5KEEuSEVBUFU4LmJ1ZmZlcixCLHUpO2E9e2RhdGE6bnQuZGVjb2RlKGMpfTticmVha31jYXNlIEUuSnNvbkNvbXBhdGlibGU6e2xldCBCPUEuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9hZGRyZXNzIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLHMsMF0pLHU9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X3NpemUiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAscywwXSksYz1uZXcgVWludDhBcnJheShBLkhFQVBVOC5idWZmZXIsQix1KTthPUpTT04ucGFyc2UobnQuZGVjb2RlKGMpKTticmVha31jYXNlIEUuQmluYXJ5U3RyZWFtOntsZXQgQj1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfYWRkcmVzcyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxzLDBdKSx1PUEuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9zaXplIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLHMsMF0pO2E9e2RhdGE6YXQoQSxCLHUpfTticmVha31jYXNlIEUuVGV4dEZpbGU6e2E9e3BhdGg6bC5kYXRhLnBhdGgsZGF0YTpBLmZzX3JlYWRGaWxlKGwuZGF0YS5wYXRoLHtlbmNvZGluZzoidXRmOCJ9KX07YnJlYWt9Y2FzZSBFLkJpbmFyeUZpbGU6e2E9e3BhdGg6bC5kYXRhLnBhdGgsZGF0YTpKcihBLGwuZGF0YS5wYXRoKX07YnJlYWt9Y2FzZSBFLkltYWdlOntsZXQgQj1lZShBLHMpO0IuZGF0YT1SKEEscywwLEIuaW1hZ2VUeXBlLmNvbXBvbmVudFR5cGUpLEIuZGlyZWN0aW9uPVIoQSxzLDEsSC5GbG9hdDY0KSxCLm1ldGFkYXRhPW5ldyBNYXAoQi5tZXRhZGF0YSksYT1CO2JyZWFrfWNhc2UgRS5NZXNoOntsZXQgQj1lZShBLHMpO0IubnVtYmVyT2ZQb2ludHM+MD9CLnBvaW50cz1SKEEscywwLEIubWVzaFR5cGUucG9pbnRDb21wb25lbnRUeXBlKTpCLnBvaW50cz1MKEIubWVzaFR5cGUucG9pbnRDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksQi5udW1iZXJPZkNlbGxzPjA/Qi5jZWxscz1SKEEscywxLEIubWVzaFR5cGUuY2VsbENvbXBvbmVudFR5cGUpOkIuY2VsbHM9TChCLm1lc2hUeXBlLmNlbGxDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksQi5udW1iZXJPZlBvaW50UGl4ZWxzPjA/Qi5wb2ludERhdGE9UihBLHMsMixCLm1lc2hUeXBlLnBvaW50UGl4ZWxDb21wb25lbnRUeXBlKTpCLnBvaW50RGF0YT1MKEIubWVzaFR5cGUucG9pbnRQaXhlbENvbXBvbmVudFR5cGUsbmV3IEFycmF5QnVmZmVyKDApKSxCLm51bWJlck9mQ2VsbFBpeGVscz4wP0IuY2VsbERhdGE9UihBLHMsMyxCLm1lc2hUeXBlLmNlbGxQaXhlbENvbXBvbmVudFR5cGUpOkIuY2VsbERhdGE9TChCLm1lc2hUeXBlLmNlbGxQaXhlbENvbXBvbmVudFR5cGUsbmV3IEFycmF5QnVmZmVyKDApKSxhPUI7YnJlYWt9Y2FzZSBFLlBvbHlEYXRhOntsZXQgQj1lZShBLHMpO0IubnVtYmVyT2ZQb2ludHM+MD9CLnBvaW50cz1SKEEscywwLEguRmxvYXQzMik6Qi5wb2ludHM9bmV3IEZsb2F0MzJBcnJheSxCLnZlcnRpY2VzQnVmZmVyU2l6ZT4wP0IudmVydGljZXM9UihBLHMsMSxoLlVJbnQzMik6Qi52ZXJ0aWNlcz1uZXcgVWludDMyQXJyYXksQi5saW5lc0J1ZmZlclNpemU+MD9CLmxpbmVzPVIoQSxzLDIsaC5VSW50MzIpOkIubGluZXM9bmV3IFVpbnQzMkFycmF5LEIucG9seWdvbnNCdWZmZXJTaXplPjA/Qi5wb2x5Z29ucz1SKEEscywzLGguVUludDMyKTpCLnBvbHlnb25zPW5ldyBVaW50MzJBcnJheSxCLnRyaWFuZ2xlU3RyaXBzQnVmZmVyU2l6ZT4wP0IudHJpYW5nbGVTdHJpcHM9UihBLHMsNCxoLlVJbnQzMik6Qi50cmlhbmdsZVN0cmlwcz1uZXcgVWludDMyQXJyYXksQi5udW1iZXJPZlBvaW50UGl4ZWxzPjA/Qi5wb2ludERhdGE9UihBLHMsNSxCLnBvbHlEYXRhVHlwZS5wb2ludFBpeGVsQ29tcG9uZW50VHlwZSk6Qi5wb2ludERhdGE9TChCLnBvbHlEYXRhVHlwZS5wb2ludFBpeGVsQ29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLEIubnVtYmVyT2ZDZWxsUGl4ZWxzPjA/Qi5jZWxsRGF0YT1SKEEscyw2LEIucG9seURhdGFUeXBlLmNlbGxQaXhlbENvbXBvbmVudFR5cGUpOkIuY2VsbERhdGE9TChCLnBvbHlEYXRhVHlwZS5jZWxsUGl4ZWxDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksYT1CO2JyZWFrfWRlZmF1bHQ6dGhyb3cgRXJyb3IoIlVuc3VwcG9ydGVkIG91dHB1dCBJbnRlcmZhY2VUeXBlIil9bGV0IGY9e3R5cGU6bC50eXBlLGRhdGE6YX07Qy5wdXNoKGYpfSkse3JldHVyblZhbHVlOm8sc3Rkb3V0Omksc3RkZXJyOmcsb3V0cHV0czpDfX12YXIgc3Q9SHI7dmFyIE1yPXR5cGVvZiBnbG9iYWxUaGlzLlNoYXJlZEFycmF5QnVmZmVyPCJ1IjtmdW5jdGlvbiBZcihBKXtpZihBPT1udWxsKXJldHVybltdO2xldCB0PVtdO2ZvcihsZXQgZT0wO2U8QS5sZW5ndGg7ZSsrKXtsZXQgcj1xcihBW2VdKTtyIT09bnVsbCYmdC5wdXNoKHIpfXJldHVybiB0fWZ1bmN0aW9uIHFyKEEpe2lmKEE9PW51bGwpcmV0dXJuIG51bGw7bGV0IHQ9bnVsbDtyZXR1cm4gQS5idWZmZXIhPT12b2lkIDA/dD1BLmJ1ZmZlcjpBLmJ5dGVMZW5ndGghPT12b2lkIDAmJih0PUEpLE1yJiZ0IGluc3RhbmNlb2YgU2hhcmVkQXJyYXlCdWZmZXI/bnVsbDp0fXZhciBJdD1ZcjtmdW5jdGlvbiBLcihBKXtyZXR1cm5bQS5kYXRhLEEuZGlyZWN0aW9uXX12YXIgZ3Q9S3I7ZnVuY3Rpb24gdnIoQSl7cmV0dXJuW0EucG9pbnRzLEEucG9pbnREYXRhLEEuY2VsbHMsQS5jZWxsRGF0YV19dmFyIGx0PXZyO2Z1bmN0aW9uIFdyKEEpe3JldHVybltBLnBvaW50cyxBLnZlcnRpY2VzLEEubGluZXMsQS5wb2x5Z29ucyxBLnRyaWFuZ2xlU3RyaXBzLEEucG9pbnREYXRhLEEuY2VsbERhdGFdfXZhciBCdD1Xcjt2YXIganI7ZnVuY3Rpb24gaEEoKXtyZXR1cm4ganJ9dmFyIF9yO2Z1bmN0aW9uIHlBKCl7cmV0dXJuIF9yfXZhciB0ZT1uZXcgTWFwO2Z1bmN0aW9uIHpyKCl7bGV0IEE9eUEoKTtyZXR1cm4gdHlwZW9mIEE+InUiJiYoQT1udWxsKSxBfWZ1bmN0aW9uIEN0KCl7bGV0IEE9aEEoKTtyZXR1cm4gdHlwZW9mIEE+InUiJiYoQT1uZXcgVVJMKCIvcGlwZWxpbmVzIixkb2N1bWVudC5sb2NhdGlvbi5vcmlnaW4pLmhyZWYpLEF9YXN5bmMgZnVuY3Rpb24gVnIoQSx0KXtsZXQgZT1BLHI9QTtpZih0eXBlb2YgQSE9InN0cmluZyImJihlPW5ldyBVUkwoQS5ocmVmKSxyPWUuaHJlZiksdGUuaGFzKHIpKXJldHVybiB0ZS5nZXQocik7e2xldCBuPWF3YWl0IHR0KEEsdD8udG9TdHJpbmcoKT8/Q3QoKSk7cmV0dXJuIHRlLnNldChyLG4pLG59fWFzeW5jIGZ1bmN0aW9uIFpyKEEsdCxlLHIsbixvKXtpZighYXdhaXQgcnQoKSl7bGV0IFE9IldlYkFzc2VtYmx5IFNJTUQgc3VwcG9ydCBpcyByZXF1aXJlZCAtLSBwbGVhc2UgdXBkYXRlIHlvdXIgYnJvd3Nlci4iO3Rocm93IGFsZXJ0KFEpLG5ldyBFcnJvcihRKX1pZihBPT09ITEpe2xldCBRPWF3YWl0IFZyKHQudG9TdHJpbmcoKSxvPy5waXBlbGluZUJhc2VVcmwpO3JldHVybiBzdChRLGUscixuKX1sZXQgaT1BLGc9bz8ucGlwZWxpbmVXb3JrZXJVcmw/P3pyKCksQz10eXBlb2YgZyE9InN0cmluZyImJnR5cGVvZiBnPy5ocmVmPCJ1Ij9nLmhyZWY6Zyx7d29ya2VyUHJveHk6bCx3b3JrZXI6c309YXdhaXQgZXQoaSxDKTtpPXM7bGV0IGE9W107biE9bnVsbCYmbi5sZW5ndGg+MCYmbi5mb3JFYWNoKGZ1bmN0aW9uKFEpe2lmKFEudHlwZT09PUUuQmluYXJ5U3RyZWFtKXtsZXQgcD1RLmRhdGEuZGF0YTthLnB1c2gocCl9ZWxzZSBpZihRLnR5cGU9PT1FLkJpbmFyeUZpbGUpe2xldCBwPVEuZGF0YS5kYXRhO2EucHVzaChwKX1lbHNlIGlmKFEudHlwZT09PUUuSW1hZ2Upe2xldCBwPVEuZGF0YTtwLmRhdGEhPT1udWxsJiZhLnB1c2goLi4uZ3QocCkpfWVsc2UgaWYoUS50eXBlPT09RS5NZXNoKXtsZXQgcD1RLmRhdGE7YS5wdXNoKC4uLmx0KHApKX1lbHNlIGlmKFEudHlwZT09PUUuUG9seURhdGEpe2xldCBwPVEuZGF0YTthLnB1c2goLi4uQnQocCkpfX0pO2xldCBmPW8/LnBpcGVsaW5lQmFzZVVybD8/Q3QoKSxCPXR5cGVvZiBmIT0ic3RyaW5nIiYmdHlwZW9mIGY/LmhyZWY8InUiP2YuaHJlZjpmLHU9biE9bnVsbD9HQShuLEl0KGEpKTpudWxsLGM9YXdhaXQgbC5ydW5QaXBlbGluZSh0LnRvU3RyaW5nKCksQixlLHIsdSk7cmV0dXJue3JldHVyblZhbHVlOmMucmV0dXJuVmFsdWUsc3Rkb3V0OmMuc3Rkb3V0LHN0ZGVycjpjLnN0ZGVycixvdXRwdXRzOmMub3V0cHV0cyx3ZWJXb3JrZXI6aX19dmFyIGs9WnI7dmFyIGN0PXtuYW1lOiJAaXRrLXdhc20vZGljb20iLHZlcnNpb246IjUuMC4wIixwYWNrYWdlTWFuYWdlcjoicG5wbUA4LjExLjAiLGRlc2NyaXB0aW9uOiJSZWFkIGZpbGVzIGFuZCBpbWFnZXMgcmVsYXRlZCB0byBESUNPTSBmaWxlIGZvcm1hdC4iLHR5cGU6Im1vZHVsZSIsbW9kdWxlOiIuL2Rpc3QvaW5kZXguanMiLHR5cGVzOiIuL2Rpc3QvaW5kZXguZC50cyIsZXhwb3J0czp7Ii4iOnt0eXBlczoiLi9kaXN0L2luZGV4LmQudHMiLGJyb3dzZXI6Ii4vZGlzdC9pbmRleC5qcyIsbm9kZToiLi9kaXN0L2luZGV4LW5vZGUuanMiLGRlZmF1bHQ6Ii4vZGlzdC9pbmRleC5qcyJ9fSxzY3JpcHRzOntzdGFydDoicG5wbSBjb3B5U2hvZWxhY2VBc3NldHMgJiYgdml0ZSIsdGVzdDoicG5wbSB0ZXN0Om5vZGUgJiYgcG5wbSB0ZXN0OmJyb3dzZXIiLCJ0ZXN0Om5vZGUiOiJhdmEgdGVzdC9ub2RlLyouanMiLCJ0ZXN0OmJyb3dzZXIiOiJwbnBtIHRlc3Q6YnJvd3NlcjpjaHJvbWUgJiYgcG5wbSB0ZXN0OmJyb3dzZXI6ZmlyZWZveCIsInRlc3Q6YnJvd3NlcjpmaXJlZm94Ijoic3RhcnQtc2VydmVyLWFuZC10ZXN0IHN0YXJ0IGh0dHAtZ2V0Oi8vbG9jYWxob3N0OjUxNzMgY3lwcmVzczpydW5GaXJlZm94IiwidGVzdDpicm93c2VyOmNocm9tZSI6InN0YXJ0LXNlcnZlci1hbmQtdGVzdCBzdGFydCBodHRwLWdldDovL2xvY2FsaG9zdDo1MTczIGN5cHJlc3M6cnVuQ2hyb21lIiwidGVzdDpicm93c2VyOmRlYnVnIjoic3RhcnQtc2VydmVyLWFuZC10ZXN0IHN0YXJ0IGh0dHAtZ2V0Oi8vbG9jYWxob3N0OjUxNzMgY3lwcmVzczpvcGVuIixjb3B5U2hvZWxhY2VBc3NldHM6InNoeCBta2RpciAtcCB0ZXN0L2Jyb3dzZXIvZGVtby1hcHAvcHVibGljL3Nob2VsYWNlICYmIHNoeCBjcCAtciBub2RlX21vZHVsZXMvQHNob2VsYWNlLXN0eWxlL3Nob2VsYWNlL2Rpc3QvYXNzZXRzIHRlc3QvYnJvd3Nlci9kZW1vLWFwcC9wdWJsaWMvIiwiY3lwcmVzczpvcGVuIjoibnB4IGN5cHJlc3Mgb3BlbiIsImN5cHJlc3M6cnVuQ2hyb21lIjoibnB4IGN5cHJlc3MgcnVuIC0tYnJvd3NlciBjaHJvbWUiLCJjeXByZXNzOnJ1bkZpcmVmb3giOiJucHggY3lwcmVzcyBydW4gLS1icm93c2VyIGZpcmVmb3giLGJ1aWxkOiJwbnBtIGJ1aWxkOnRzYyAmJiBwbnBtIGJ1aWxkOmJyb3dzZXI6d29ya2VyRW1iZWRkZWQgJiYgcG5wbSBidWlsZDpicm93c2VyOndvcmtlckVtYmVkZGVkTWluICYmIHBucG0gYnVpbGQ6ZGVtbyIsImJ1aWxkOmJyb3dzZXI6d29ya2VyRW1iZWRkZWQiOiJlc2J1aWxkIC0tbG9hZGVyOi53b3JrZXIuanM9ZGF0YXVybCAtLWJ1bmRsZSAtLWZvcm1hdD1lc20gLS1vdXRmaWxlPS4vZGlzdC9idW5kbGUvaW5kZXgtd29ya2VyLWVtYmVkZGVkLmpzIC4vc3JjL2luZGV4LXdvcmtlci1lbWJlZGRlZC50cyIsImJ1aWxkOmJyb3dzZXI6d29ya2VyRW1iZWRkZWRNaW4iOiJlc2J1aWxkIC0tbWluaWZ5IC0tbG9hZGVyOi53b3JrZXIuanM9ZGF0YXVybCAtLWJ1bmRsZSAtLWZvcm1hdD1lc20gLS1vdXRmaWxlPS4vZGlzdC9idW5kbGUvaW5kZXgtd29ya2VyLWVtYmVkZGVkLm1pbi5qcyAuL3NyYy9pbmRleC13b3JrZXItZW1iZWRkZWQubWluLnRzIiwiYnVpbGQ6dHNjIjoidHNjIC0tcHJldHR5IiwiYnVpbGQ6ZGVtbyI6InBucG0gY29weVNob2VsYWNlQXNzZXRzICYmIHZpdGUgYnVpbGQifSxrZXl3b3JkczpbIml0ayIsIndhc20iLCJ3ZWJhc3NlbWJseSJdLGF1dGhvcjoiIixsaWNlbnNlOiJBcGFjaGUtMi4wIixkZXBlbmRlbmNpZXM6eyJpdGstd2FzbSI6IndvcmtzcGFjZTpeIn0sZGV2RGVwZW5kZW5jaWVzOnsiQGl0ay13YXNtL2RpY29tLWJ1aWxkIjoid29ya3NwYWNlOioiLCJAaXRrLXdhc20vaW1hZ2UtaW8iOiJeMC40LjAiLCJAc2hvZWxhY2Utc3R5bGUvc2hvZWxhY2UiOiJeMi41LjIiLCJAdHlwZXMvbm9kZSI6Il4yMC4yLjUiLGF2YToiXjUuMS4wIixjeXByZXNzOiJeMTIuMTcuMiIsZXNidWlsZDoiXjAuMTkuOCIsImZzLWV4dHJhIjoiXjExLjIuMCIsZ2xvYjoiXjguMS4wIixzaHg6Il4wLjMuNCIsInN0YXJ0LXNlcnZlci1hbmQtdGVzdCI6Il4yLjAuMCIsdHlwZXNjcmlwdDoiXjUuMS42Iix2aXRlOiJeNC40LjExIiwidml0ZS1wbHVnaW4tc3RhdGljLWNvcHkiOiJeMC4xNy4wIn0scmVwb3NpdG9yeTp7dHlwZToiZ2l0Iix1cmw6Imh0dHBzOi8vZ2l0aHViLmNvbS9JbnNpZ2h0U29mdHdhcmVDb25zb3J0aXVtL2l0ay13YXNtIn19O3ZhciByZSwkcj1gaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9AaXRrLXdhc20vZGljb21AJHtjdC52ZXJzaW9ufS9kaXN0L3BpcGVsaW5lc2A7ZnVuY3Rpb24gZnMoQSl7cmU9QX1mdW5jdGlvbiBVKCl7aWYodHlwZW9mIHJlPCJ1IilyZXR1cm4gcmU7bGV0IEE9aEEoKTtyZXR1cm4gdHlwZW9mIEE8InUiP0E6JHJ9dmFyIGllLEFpPW51bGw7ZnVuY3Rpb24gdXQoQSl7aWU9QX1mdW5jdGlvbiBOKCl7aWYodHlwZW9mIGllPCJ1IilyZXR1cm4gaWU7bGV0IEE9eUEoKTtyZXR1cm4gdHlwZW9mIEE8InUiP0E6QWl9YXN5bmMgZnVuY3Rpb24gZWkoQSx0LGUscj17fSl7bGV0IG49W3t0eXBlOkUuSnNvbkNvbXBhdGlibGV9LHt0eXBlOkUuSW1hZ2V9XSxvPXQ7aWYodCBpbnN0YW5jZW9mIEZpbGUpe2xldCBTPWF3YWl0IHQuYXJyYXlCdWZmZXIoKTtvPXtwYXRoOnQubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KFMpfX1sZXQgaT1lO2lmKGUgaW5zdGFuY2VvZiBGaWxlKXtsZXQgUz1hd2FpdCBlLmFycmF5QnVmZmVyKCk7aT17cGF0aDplLm5hbWUsZGF0YTpuZXcgVWludDhBcnJheShTKX19bGV0IGc9W3t0eXBlOkUuQmluYXJ5RmlsZSxkYXRhOm99LHt0eXBlOkUuQmluYXJ5RmlsZSxkYXRhOml9XSxDPVtdLGw9by5wYXRoO0MucHVzaChsKTtsZXQgcz1pLnBhdGg7Qy5wdXNoKHMpO2xldCBhPSIwIjtDLnB1c2goYSk7bGV0IGY9IjEiO0MucHVzaChmKSxDLnB1c2goIi0tbWVtb3J5LWlvIiksdHlwZW9mIHIuY29sb3JPdXRwdXQ8InUiJiZyLmNvbG9yT3V0cHV0JiZDLnB1c2goIi0tY29sb3Itb3V0cHV0IiksdHlwZW9mIHIuY29uZmlnRmlsZTwidSImJkMucHVzaCgiLS1jb25maWctZmlsZSIsci5jb25maWdGaWxlLnRvU3RyaW5nKCkpLHR5cGVvZiByLmZyYW1lPCJ1IiYmQy5wdXNoKCItLWZyYW1lIixyLmZyYW1lLnRvU3RyaW5nKCkpLHR5cGVvZiByLm5vUHJlc2VudGF0aW9uU3RhdGVPdXRwdXQ8InUiJiZyLm5vUHJlc2VudGF0aW9uU3RhdGVPdXRwdXQmJkMucHVzaCgiLS1uby1wcmVzZW50YXRpb24tc3RhdGUtb3V0cHV0IiksdHlwZW9mIHIubm9CaXRtYXBPdXRwdXQ8InUiJiZyLm5vQml0bWFwT3V0cHV0JiZDLnB1c2goIi0tbm8tYml0bWFwLW91dHB1dCIpO2xldCBCPSJhcHBseS1wcmVzZW50YXRpb24tc3RhdGUtdG8taW1hZ2UiLHt3ZWJXb3JrZXI6dSxyZXR1cm5WYWx1ZTpjLHN0ZGVycjpRLG91dHB1dHM6cH09YXdhaXQgayhBLEIsQyxuLGcse3BpcGVsaW5lQmFzZVVybDpVKCkscGlwZWxpbmVXb3JrZXJVcmw6TigpfSk7aWYoYyE9PTAmJlEhPT0iIil0aHJvdyBuZXcgRXJyb3IoUSk7cmV0dXJue3dlYldvcmtlcjp1LHByZXNlbnRhdGlvblN0YXRlT3V0U3RyZWFtOnBbMF0/LmRhdGEsb3V0cHV0SW1hZ2U6cFsxXT8uZGF0YX19dmFyIHRpPWVpO2FzeW5jIGZ1bmN0aW9uIHJpKEEsdCxlPXt9KXtsZXQgcj1be3R5cGU6RS5CaW5hcnlTdHJlYW19XSxuPXQ7aWYodCBpbnN0YW5jZW9mIEZpbGUpe2xldCBjPWF3YWl0IHQuYXJyYXlCdWZmZXIoKTtuPXtwYXRoOnQubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KGMpfX1sZXQgbz1be3R5cGU6RS5CaW5hcnlGaWxlLGRhdGE6bn1dLGk9W10sZz1uLnBhdGg7aS5wdXNoKGcpO2xldCBDPSIwIjtpLnB1c2goQyksaS5wdXNoKCItLW1lbW9yeS1pbyIpLHR5cGVvZiBlLnJlYWRGaWxlT25seTwidSImJmUucmVhZEZpbGVPbmx5JiZpLnB1c2goIi0tcmVhZC1maWxlLW9ubHkiKSx0eXBlb2YgZS5yZWFkRGF0YXNldDwidSImJmUucmVhZERhdGFzZXQmJmkucHVzaCgiLS1yZWFkLWRhdGFzZXQiKSx0eXBlb2YgZS5yZWFkWGZlckF1dG88InUiJiZlLnJlYWRYZmVyQXV0byYmaS5wdXNoKCItLXJlYWQteGZlci1hdXRvIiksdHlwZW9mIGUucmVhZFhmZXJEZXRlY3Q8InUiJiZlLnJlYWRYZmVyRGV0ZWN0JiZpLnB1c2goIi0tcmVhZC14ZmVyLWRldGVjdCIpLHR5cGVvZiBlLnJlYWRYZmVyTGl0dGxlPCJ1IiYmZS5yZWFkWGZlckxpdHRsZSYmaS5wdXNoKCItLXJlYWQteGZlci1saXR0bGUiKSx0eXBlb2YgZS5yZWFkWGZlckJpZzwidSImJmUucmVhZFhmZXJCaWcmJmkucHVzaCgiLS1yZWFkLXhmZXItYmlnIiksdHlwZW9mIGUucmVhZFhmZXJJbXBsaWNpdDwidSImJmUucmVhZFhmZXJJbXBsaWNpdCYmaS5wdXNoKCItLXJlYWQteGZlci1pbXBsaWNpdCIpLHR5cGVvZiBlLmFjY2VwdE9kZExlbmd0aDwidSImJmUuYWNjZXB0T2RkTGVuZ3RoJiZpLnB1c2goIi0tYWNjZXB0LW9kZC1sZW5ndGgiKSx0eXBlb2YgZS5hc3N1bWVFdmVuTGVuZ3RoPCJ1IiYmZS5hc3N1bWVFdmVuTGVuZ3RoJiZpLnB1c2goIi0tYXNzdW1lLWV2ZW4tbGVuZ3RoIiksdHlwZW9mIGUuZW5hYmxlQ3AyNDY8InUiJiZlLmVuYWJsZUNwMjQ2JiZpLnB1c2goIi0tZW5hYmxlLWNwMjQ2IiksdHlwZW9mIGUuZGlzYWJsZUNwMjQ2PCJ1IiYmZS5kaXNhYmxlQ3AyNDYmJmkucHVzaCgiLS1kaXNhYmxlLWNwMjQ2IiksdHlwZW9mIGUucmV0YWluVW48InUiJiZlLnJldGFpblVuJiZpLnB1c2goIi0tcmV0YWluLXVuIiksdHlwZW9mIGUuY29udmVydFVuPCJ1IiYmZS5jb252ZXJ0VW4mJmkucHVzaCgiLS1jb252ZXJ0LXVuIiksdHlwZW9mIGUuZW5hYmxlQ29ycmVjdGlvbjwidSImJmUuZW5hYmxlQ29ycmVjdGlvbiYmaS5wdXNoKCItLWVuYWJsZS1jb3JyZWN0aW9uIiksdHlwZW9mIGUuZGlzYWJsZUNvcnJlY3Rpb248InUiJiZlLmRpc2FibGVDb3JyZWN0aW9uJiZpLnB1c2goIi0tZGlzYWJsZS1jb3JyZWN0aW9uIik7bGV0IGw9InJlYWQtZGljb20tZW5jYXBzdWxhdGVkLXBkZiIse3dlYldvcmtlcjpzLHJldHVyblZhbHVlOmEsc3RkZXJyOmYsb3V0cHV0czpCfT1hd2FpdCBrKEEsbCxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOlUoKSxwaXBlbGluZVdvcmtlclVybDpOKCl9KTtpZihhIT09MCYmZiE9PSIiKXRocm93IG5ldyBFcnJvcihmKTtyZXR1cm57d2ViV29ya2VyOnMscGRmQmluYXJ5T3V0cHV0OihCWzBdPy5kYXRhKS5kYXRhfX12YXIgaWk9cmk7YXN5bmMgZnVuY3Rpb24gbmkoQSx0LGU9e30pe2xldCByPVt7dHlwZTpFLlRleHRTdHJlYW19XSxuPXQ7aWYodCBpbnN0YW5jZW9mIEZpbGUpe2xldCBjPWF3YWl0IHQuYXJyYXlCdWZmZXIoKTtuPXtwYXRoOnQubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KGMpfX1sZXQgbz1be3R5cGU6RS5CaW5hcnlGaWxlLGRhdGE6bn1dLGk9W10sZz1uLnBhdGg7aS5wdXNoKGcpO2xldCBDPSIwIjtpZihpLnB1c2goQyksaS5wdXNoKCItLW1lbW9yeS1pbyIpLHR5cGVvZiBlLnJlYWRGaWxlT25seTwidSImJmUucmVhZEZpbGVPbmx5JiZpLnB1c2goIi0tcmVhZC1maWxlLW9ubHkiKSx0eXBlb2YgZS5yZWFkRGF0YXNldDwidSImJmUucmVhZERhdGFzZXQmJmkucHVzaCgiLS1yZWFkLWRhdGFzZXQiKSx0eXBlb2YgZS5yZWFkWGZlckF1dG88InUiJiZlLnJlYWRYZmVyQXV0byYmaS5wdXNoKCItLXJlYWQteGZlci1hdXRvIiksdHlwZW9mIGUucmVhZFhmZXJEZXRlY3Q8InUiJiZlLnJlYWRYZmVyRGV0ZWN0JiZpLnB1c2goIi0tcmVhZC14ZmVyLWRldGVjdCIpLHR5cGVvZiBlLnJlYWRYZmVyTGl0dGxlPCJ1IiYmZS5yZWFkWGZlckxpdHRsZSYmaS5wdXNoKCItLXJlYWQteGZlci1saXR0bGUiKSx0eXBlb2YgZS5yZWFkWGZlckJpZzwidSImJmUucmVhZFhmZXJCaWcmJmkucHVzaCgiLS1yZWFkLXhmZXItYmlnIiksdHlwZW9mIGUucmVhZFhmZXJJbXBsaWNpdDwidSImJmUucmVhZFhmZXJJbXBsaWNpdCYmaS5wdXNoKCItLXJlYWQteGZlci1pbXBsaWNpdCIpLHR5cGVvZiBlLnByb2Nlc3NpbmdEZXRhaWxzPCJ1IiYmZS5wcm9jZXNzaW5nRGV0YWlscyYmaS5wdXNoKCItLXByb2Nlc3NpbmctZGV0YWlscyIpLHR5cGVvZiBlLnVua25vd25SZWxhdGlvbnNoaXA8InUiJiZlLnVua25vd25SZWxhdGlvbnNoaXAmJmkucHVzaCgiLS11bmtub3duLXJlbGF0aW9uc2hpcCIpLHR5cGVvZiBlLmludmFsaWRJdGVtVmFsdWU8InUiJiZlLmludmFsaWRJdGVtVmFsdWUmJmkucHVzaCgiLS1pbnZhbGlkLWl0ZW0tdmFsdWUiKSx0eXBlb2YgZS5pZ25vcmVDb25zdHJhaW50czwidSImJmUuaWdub3JlQ29uc3RyYWludHMmJmkucHVzaCgiLS1pZ25vcmUtY29uc3RyYWludHMiKSx0eXBlb2YgZS5pZ25vcmVJdGVtRXJyb3JzPCJ1IiYmZS5pZ25vcmVJdGVtRXJyb3JzJiZpLnB1c2goIi0taWdub3JlLWl0ZW0tZXJyb3JzIiksdHlwZW9mIGUuc2tpcEludmFsaWRJdGVtczwidSImJmUuc2tpcEludmFsaWRJdGVtcyYmaS5wdXNoKCItLXNraXAtaW52YWxpZC1pdGVtcyIpLHR5cGVvZiBlLmRpc2FibGVWckNoZWNrZXI8InUiJiZlLmRpc2FibGVWckNoZWNrZXImJmkucHVzaCgiLS1kaXNhYmxlLXZyLWNoZWNrZXIiKSx0eXBlb2YgZS5jaGFyc2V0UmVxdWlyZTwidSImJmUuY2hhcnNldFJlcXVpcmUmJmkucHVzaCgiLS1jaGFyc2V0LXJlcXVpcmUiKSx0eXBlb2YgZS5jaGFyc2V0QXNzdW1lPCJ1IiYmaS5wdXNoKCItLWNoYXJzZXQtYXNzdW1lIixlLmNoYXJzZXRBc3N1bWUudG9TdHJpbmcoKSksdHlwZW9mIGUuY2hhcnNldENoZWNrQWxsPCJ1IiYmZS5jaGFyc2V0Q2hlY2tBbGwmJmkucHVzaCgiLS1jaGFyc2V0LWNoZWNrLWFsbCIpLHR5cGVvZiBlLmNvbnZlcnRUb1V0Zjg8InUiJiZlLmNvbnZlcnRUb1V0ZjgmJmkucHVzaCgiLS1jb252ZXJ0LXRvLXV0ZjgiKSx0eXBlb2YgZS51cmxQcmVmaXg8InUiJiZpLnB1c2goIi0tdXJsLXByZWZpeCIsZS51cmxQcmVmaXgudG9TdHJpbmcoKSksdHlwZW9mIGUuaHRtbDMyPCJ1IiYmZS5odG1sMzImJmkucHVzaCgiLS1odG1sLTMyIiksdHlwZW9mIGUuaHRtbDQwPCJ1IiYmZS5odG1sNDAmJmkucHVzaCgiLS1odG1sLTQwIiksdHlwZW9mIGUueGh0bWwxMTwidSImJmUueGh0bWwxMSYmaS5wdXNoKCItLXhodG1sLTExIiksdHlwZW9mIGUuYWRkRG9jdW1lbnRUeXBlPCJ1IiYmZS5hZGREb2N1bWVudFR5cGUmJmkucHVzaCgiLS1hZGQtZG9jdW1lbnQtdHlwZSIpLHR5cGVvZiBlLmNzc1JlZmVyZW5jZTwidSIpe2xldCBjPW8ubGVuZ3RoLnRvU3RyaW5nKCk7by5wdXNoKHt0eXBlOkUuVGV4dFN0cmVhbSxkYXRhOntkYXRhOmUuY3NzUmVmZXJlbmNlfX0pLGkucHVzaCgiLS1jc3MtcmVmZXJlbmNlIixjKX1pZih0eXBlb2YgZS5jc3NGaWxlPCJ1Iil7bGV0IGM9ZS5jc3NGaWxlLFE9YztpZihjIGluc3RhbmNlb2YgRmlsZSl7bGV0IEY9YXdhaXQgYy5hcnJheUJ1ZmZlcigpO1E9e3BhdGg6Yy5uYW1lLGRhdGE6bmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKEYpfX1pLnB1c2goIi0tY3NzLWZpbGUiKSxvLnB1c2goe3R5cGU6RS5UZXh0RmlsZSxkYXRhOlF9KTtsZXQgcD1jIGluc3RhbmNlb2YgRmlsZT9jLm5hbWU6Yy5wYXRoO2kucHVzaChwKX10eXBlb2YgZS5leHBhbmRJbmxpbmU8InUiJiZlLmV4cGFuZElubGluZSYmaS5wdXNoKCItLWV4cGFuZC1pbmxpbmUiKSx0eXBlb2YgZS5uZXZlckV4cGFuZElubGluZTwidSImJmUubmV2ZXJFeHBhbmRJbmxpbmUmJmkucHVzaCgiLS1uZXZlci1leHBhbmQtaW5saW5lIiksdHlwZW9mIGUuYWx3YXlzRXhwYW5kSW5saW5lPCJ1IiYmZS5hbHdheXNFeHBhbmRJbmxpbmUmJmkucHVzaCgiLS1hbHdheXMtZXhwYW5kLWlubGluZSIpLHR5cGVvZiBlLnJlbmRlckZ1bGxEYXRhPCJ1IiYmZS5yZW5kZXJGdWxsRGF0YSYmaS5wdXNoKCItLXJlbmRlci1mdWxsLWRhdGEiKSx0eXBlb2YgZS5zZWN0aW9uVGl0bGVJbmxpbmU8InUiJiZlLnNlY3Rpb25UaXRsZUlubGluZSYmaS5wdXNoKCItLXNlY3Rpb24tdGl0bGUtaW5saW5lIiksdHlwZW9mIGUuZG9jdW1lbnRUeXBlVGl0bGU8InUiJiZlLmRvY3VtZW50VHlwZVRpdGxlJiZpLnB1c2goIi0tZG9jdW1lbnQtdHlwZS10aXRsZSIpLHR5cGVvZiBlLnBhdGllbnRJbmZvVGl0bGU8InUiJiZlLnBhdGllbnRJbmZvVGl0bGUmJmkucHVzaCgiLS1wYXRpZW50LWluZm8tdGl0bGUiKSx0eXBlb2YgZS5ub0RvY3VtZW50SGVhZGVyPCJ1IiYmZS5ub0RvY3VtZW50SGVhZGVyJiZpLnB1c2goIi0tbm8tZG9jdW1lbnQtaGVhZGVyIiksdHlwZW9mIGUucmVuZGVySW5saW5lQ29kZXM8InUiJiZlLnJlbmRlcklubGluZUNvZGVzJiZpLnB1c2goIi0tcmVuZGVyLWlubGluZS1jb2RlcyIpLHR5cGVvZiBlLmNvbmNlcHROYW1lQ29kZXM8InUiJiZlLmNvbmNlcHROYW1lQ29kZXMmJmkucHVzaCgiLS1jb25jZXB0LW5hbWUtY29kZXMiKSx0eXBlb2YgZS5udW1lcmljVW5pdENvZGVzPCJ1IiYmZS5udW1lcmljVW5pdENvZGVzJiZpLnB1c2goIi0tbnVtZXJpYy11bml0LWNvZGVzIiksdHlwZW9mIGUuY29kZVZhbHVlVW5pdDwidSImJmUuY29kZVZhbHVlVW5pdCYmaS5wdXNoKCItLWNvZGUtdmFsdWUtdW5pdCIpLHR5cGVvZiBlLmNvZGVNZWFuaW5nVW5pdDwidSImJmUuY29kZU1lYW5pbmdVbml0JiZpLnB1c2goIi0tY29kZS1tZWFuaW5nLXVuaXQiKSx0eXBlb2YgZS5yZW5kZXJBbGxDb2RlczwidSImJmUucmVuZGVyQWxsQ29kZXMmJmkucHVzaCgiLS1yZW5kZXItYWxsLWNvZGVzIiksdHlwZW9mIGUuY29kZURldGFpbHNUb29sdGlwPCJ1IiYmZS5jb2RlRGV0YWlsc1Rvb2x0aXAmJmkucHVzaCgiLS1jb2RlLWRldGFpbHMtdG9vbHRpcCIpO2xldCBsPSJzdHJ1Y3R1cmVkLXJlcG9ydC10by1odG1sIix7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6YSxzdGRlcnI6ZixvdXRwdXRzOkJ9PWF3YWl0IGsoQSxsLGkscixvLHtwaXBlbGluZUJhc2VVcmw6VSgpLHBpcGVsaW5lV29ya2VyVXJsOk4oKX0pO2lmKGEhPT0wJiZmIT09IiIpdGhyb3cgbmV3IEVycm9yKGYpO3JldHVybnt3ZWJXb3JrZXI6cyxvdXRwdXRUZXh0OihCWzBdPy5kYXRhKS5kYXRhfX12YXIgb2k9bmk7YXN5bmMgZnVuY3Rpb24gYWkoQSx0LGU9e30pe2xldCByPVt7dHlwZTpFLlRleHRTdHJlYW19XSxuPXQ7aWYodCBpbnN0YW5jZW9mIEZpbGUpe2xldCBjPWF3YWl0IHQuYXJyYXlCdWZmZXIoKTtuPXtwYXRoOnQubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KGMpfX1sZXQgbz1be3R5cGU6RS5CaW5hcnlGaWxlLGRhdGE6bn1dLGk9W10sZz1uLnBhdGg7aS5wdXNoKGcpO2xldCBDPSIwIjtpLnB1c2goQyksaS5wdXNoKCItLW1lbW9yeS1pbyIpLHR5cGVvZiBlLnVua25vd25SZWxhdGlvbnNoaXA8InUiJiZlLnVua25vd25SZWxhdGlvbnNoaXAmJmkucHVzaCgiLS11bmtub3duLXJlbGF0aW9uc2hpcCIpLHR5cGVvZiBlLmludmFsaWRJdGVtVmFsdWU8InUiJiZlLmludmFsaWRJdGVtVmFsdWUmJmkucHVzaCgiLS1pbnZhbGlkLWl0ZW0tdmFsdWUiKSx0eXBlb2YgZS5pZ25vcmVDb25zdHJhaW50czwidSImJmUuaWdub3JlQ29uc3RyYWludHMmJmkucHVzaCgiLS1pZ25vcmUtY29uc3RyYWludHMiKSx0eXBlb2YgZS5pZ25vcmVJdGVtRXJyb3JzPCJ1IiYmZS5pZ25vcmVJdGVtRXJyb3JzJiZpLnB1c2goIi0taWdub3JlLWl0ZW0tZXJyb3JzIiksdHlwZW9mIGUuc2tpcEludmFsaWRJdGVtczwidSImJmUuc2tpcEludmFsaWRJdGVtcyYmaS5wdXNoKCItLXNraXAtaW52YWxpZC1pdGVtcyIpLHR5cGVvZiBlLm5vRG9jdW1lbnRIZWFkZXI8InUiJiZlLm5vRG9jdW1lbnRIZWFkZXImJmkucHVzaCgiLS1uby1kb2N1bWVudC1oZWFkZXIiKSx0eXBlb2YgZS5udW1iZXJOZXN0ZWRJdGVtczwidSImJmUubnVtYmVyTmVzdGVkSXRlbXMmJmkucHVzaCgiLS1udW1iZXItbmVzdGVkLWl0ZW1zIiksdHlwZW9mIGUuc2hvcnRlbkxvbmdWYWx1ZXM8InUiJiZlLnNob3J0ZW5Mb25nVmFsdWVzJiZpLnB1c2goIi0tc2hvcnRlbi1sb25nLXZhbHVlcyIpLHR5cGVvZiBlLnByaW50SW5zdGFuY2VVaWQ8InUiJiZlLnByaW50SW5zdGFuY2VVaWQmJmkucHVzaCgiLS1wcmludC1pbnN0YW5jZS11aWQiKSx0eXBlb2YgZS5wcmludFNvcGNsYXNzU2hvcnQ8InUiJiZlLnByaW50U29wY2xhc3NTaG9ydCYmaS5wdXNoKCItLXByaW50LXNvcGNsYXNzLXNob3J0IiksdHlwZW9mIGUucHJpbnRTb3BjbGFzc0xvbmc8InUiJiZlLnByaW50U29wY2xhc3NMb25nJiZpLnB1c2goIi0tcHJpbnQtc29wY2xhc3MtbG9uZyIpLHR5cGVvZiBlLnByaW50U29wY2xhc3NVaWQ8InUiJiZlLnByaW50U29wY2xhc3NVaWQmJmkucHVzaCgiLS1wcmludC1zb3BjbGFzcy11aWQiKSx0eXBlb2YgZS5wcmludEFsbENvZGVzPCJ1IiYmZS5wcmludEFsbENvZGVzJiZpLnB1c2goIi0tcHJpbnQtYWxsLWNvZGVzIiksdHlwZW9mIGUucHJpbnRJbnZhbGlkQ29kZXM8InUiJiZlLnByaW50SW52YWxpZENvZGVzJiZpLnB1c2goIi0tcHJpbnQtaW52YWxpZC1jb2RlcyIpLHR5cGVvZiBlLnByaW50VGVtcGxhdGVJZDwidSImJmUucHJpbnRUZW1wbGF0ZUlkJiZpLnB1c2goIi0tcHJpbnQtdGVtcGxhdGUtaWQiKSx0eXBlb2YgZS5pbmRpY2F0ZUVuaGFuY2VkPCJ1IiYmZS5pbmRpY2F0ZUVuaGFuY2VkJiZpLnB1c2goIi0taW5kaWNhdGUtZW5oYW5jZWQiKSx0eXBlb2YgZS5wcmludENvbG9yPCJ1IiYmZS5wcmludENvbG9yJiZpLnB1c2goIi0tcHJpbnQtY29sb3IiKTtsZXQgbD0ic3RydWN0dXJlZC1yZXBvcnQtdG8tdGV4dCIse3dlYldvcmtlcjpzLHJldHVyblZhbHVlOmEsc3RkZXJyOmYsb3V0cHV0czpCfT1hd2FpdCBrKEEsbCxpLHIsbyx7cGlwZWxpbmVCYXNlVXJsOlUoKSxwaXBlbGluZVdvcmtlclVybDpOKCl9KTtpZihhIT09MCYmZiE9PSIiKXRocm93IG5ldyBFcnJvcihmKTtyZXR1cm57d2ViV29ya2VyOnMsb3V0cHV0VGV4dDooQlswXT8uZGF0YSkuZGF0YX19dmFyIHNpPWFpO2FzeW5jIGZ1bmN0aW9uIElpKEEsdCxlPXt9KXtsZXQgcj1be3R5cGU6RS5Kc29uQ29tcGF0aWJsZX1dLG49dDtpZih0IGluc3RhbmNlb2YgRmlsZSl7bGV0IGM9YXdhaXQgdC5hcnJheUJ1ZmZlcigpO249e3BhdGg6dC5uYW1lLGRhdGE6bmV3IFVpbnQ4QXJyYXkoYyl9fWxldCBvPVt7dHlwZTpFLkJpbmFyeUZpbGUsZGF0YTpufV0saT1bXSxnPW4ucGF0aDtpLnB1c2goZyk7bGV0IEM9IjAiO2lmKGkucHVzaChDKSxpLnB1c2goIi0tbWVtb3J5LWlvIiksdHlwZW9mIGUudGFnc1RvUmVhZDwidSIpe2xldCBjPW8ubGVuZ3RoLnRvU3RyaW5nKCk7by5wdXNoKHt0eXBlOkUuSnNvbkNvbXBhdGlibGUsZGF0YTplLnRhZ3NUb1JlYWR9KSxpLnB1c2goIi0tdGFncy10by1yZWFkIixjKX1sZXQgbD0icmVhZC1kaWNvbS10YWdzIix7d2ViV29ya2VyOnMscmV0dXJuVmFsdWU6YSxzdGRlcnI6ZixvdXRwdXRzOkJ9PWF3YWl0IGsoQSxsLGkscixvLHtwaXBlbGluZUJhc2VVcmw6VSgpLHBpcGVsaW5lV29ya2VyVXJsOk4oKX0pO2lmKGEhPT0wKXRocm93IG5ldyBFcnJvcihmKTtyZXR1cm57d2ViV29ya2VyOnMsdGFnczpCWzBdLmRhdGF9fXZhciBnaT1JaTthc3luYyBmdW5jdGlvbiBsaShBLHQsZT0hMSl7bGV0IHI9W3t0eXBlOkUuSW1hZ2V9LHt0eXBlOkUuSnNvbkNvbXBhdGlibGV9XSxuPVtdLG89W10saT0iMCI7by5wdXNoKGkpO2xldCBnPSIxIjtvLnB1c2goZyksby5wdXNoKCItLW1lbW9yeS1pbyIpLG8ucHVzaCgiLS1pbnB1dC1pbWFnZXMiKSx0LmZvckVhY2godT0+e24ucHVzaCh7dHlwZTpFLkJpbmFyeUZpbGUsZGF0YTp1fSksby5wdXNoKHUucGF0aCl9KSx0eXBlb2YgZTwidSImJmUmJm8ucHVzaCgiLS1zaW5nbGUtc29ydGVkLXNlcmllcyIpO2xldCBDPSJyZWFkLWltYWdlLWRpY29tLWZpbGUtc2VyaWVzIix7d2ViV29ya2VyOmwscmV0dXJuVmFsdWU6cyxzdGRlcnI6YSxvdXRwdXRzOmZ9PWF3YWl0IGsoQSxDLG8scixuLHtwaXBlbGluZUJhc2VVcmw6VSgpLHBpcGVsaW5lV29ya2VyVXJsOk4oKX0pO2lmKHMhPT0wKXRocm93IG5ldyBFcnJvcihhKTtyZXR1cm57d2ViV29ya2VyOmwsb3V0cHV0SW1hZ2U6ZlswXS5kYXRhLHNvcnRlZEZpbGVuYW1lczpmWzFdLmRhdGF9fXZhciBuZT1saTt2YXIgQmk9dHlwZW9mIGdsb2JhbFRoaXMubmF2aWdhdG9yPy5oYXJkd2FyZUNvbmN1cnJlbmN5PT0ibnVtYmVyIj9nbG9iYWxUaGlzLm5hdmlnYXRvci5oYXJkd2FyZUNvbmN1cnJlbmN5OjQsZnQ9ODthc3luYyBmdW5jdGlvbiBDaShBLHQ9e2lucHV0SW1hZ2VzOltdfSl7bGV0IGU9QTtlPT09bnVsbCYmKGU9bmV3IFJBKEJpLG5lKSk7bGV0IHI9W107aWYodC5pbnB1dEltYWdlcy5sZW5ndGg8MSl0aHJvdyBuZXcgRXJyb3IoJyJpbnB1dC1pbWFnZXMiIG9wdGlvbiBtdXN0IGhhdmUgYSBsZW5ndGggPiAxJyk7aWYoYXdhaXQgUHJvbWlzZS5hbGwodC5pbnB1dEltYWdlcy5tYXAoYXN5bmMgbj0+e2xldCBvPW47aWYobiBpbnN0YW5jZW9mIEZpbGUpe2xldCBpPWF3YWl0IG4uYXJyYXlCdWZmZXIoKTtvPXtwYXRoOm4ubmFtZSxkYXRhOm5ldyBVaW50OEFycmF5KGkpfX1yLnB1c2gobyl9KSksdC5zaW5nbGVTb3J0ZWRTZXJpZXMpe2xldCBuPVtdO2ZvcihsZXQgbD0wO2w8ci5sZW5ndGg7bCs9ZnQpe2xldCBzPXIuc2xpY2UobCxsK2Z0KTtuLnB1c2goW3MsdC5zaW5nbGVTb3J0ZWRTZXJpZXNdKX1sZXQgbz1hd2FpdCBlLnJ1blRhc2tzKG4pLnByb21pc2UsaT1vLm1hcChsPT5sLm91dHB1dEltYWdlKSxnPW8ucmVkdWNlKChsLHMpPT5sLmNvbmNhdChzLnNvcnRlZEZpbGVuYW1lcyksW10pO3JldHVybntvdXRwdXRJbWFnZTpTQShpKSx3ZWJXb3JrZXJQb29sOmUsc29ydGVkRmlsZW5hbWVzOmd9fWVsc2V7bGV0IG49W1tyLHQuc2luZ2xlU29ydGVkU2VyaWVzXV0sbz1hd2FpdCBlLnJ1blRhc2tzKG4pLnByb21pc2U7cmV0dXJue291dHB1dEltYWdlOm9bMF0ub3V0cHV0SW1hZ2Usd2ViV29ya2VyUG9vbDplLHNvcnRlZEZpbGVuYW1lczpvWzBdLnNvcnRlZEZpbGVuYW1lc319fXZhciBjaT1DaTt2YXIgRXQ9J2RhdGE6dGV4dC9qYXZhc2NyaXB0O2NoYXJzZXQ9dXRmLTgsdmFyIHR0PU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgZXQ9KEEsSSk9Pntmb3IodmFyIHQgaW4gSSl0dChBLHQse2dldDpJW3RdLGVudW1lcmFibGU6ITB9KX07dmFyIHZBPVN5bWJvbCgiQ29tbGluay5wcm94eSIpLGd0PVN5bWJvbCgiQ29tbGluay5lbmRwb2ludCIpLHJ0PVN5bWJvbCgiQ29tbGluay5yZWxlYXNlUHJveHkiKSxtQT1TeW1ib2woIkNvbWxpbmsuZmluYWxpemVyIiksZUE9U3ltYm9sKCJDb21saW5rLnRocm93biIpLCRBPUE9PnR5cGVvZiBBPT0ib2JqZWN0IiYmQSE9PW51bGx8fHR5cGVvZiBBPT0iZnVuY3Rpb24iLGl0PXtjYW5IYW5kbGU6QT0+JEEoQSkmJkFbdkFdLHNlcmlhbGl6ZShBKXtsZXR7cG9ydDE6SSxwb3J0Mjp0fT1uZXcgTWVzc2FnZUNoYW5uZWw7cmV0dXJuIG9BKEEsSSksW3QsW3RdXX0sZGVzZXJpYWxpemUoQSl7cmV0dXJuIEEuc3RhcnQoKSxzdChBKX19LG90PXtjYW5IYW5kbGU6QT0+JEEoQSkmJmVBIGluIEEsc2VyaWFsaXplKHt2YWx1ZTpBfSl7bGV0IEk7cmV0dXJuIEEgaW5zdGFuY2VvZiBFcnJvcj9JPXtpc0Vycm9yOiEwLHZhbHVlOnttZXNzYWdlOkEubWVzc2FnZSxuYW1lOkEubmFtZSxzdGFjazpBLnN0YWNrfX06ST17aXNFcnJvcjohMSx2YWx1ZTpBfSxbSSxbXV19LGRlc2VyaWFsaXplKEEpe3Rocm93IEEuaXNFcnJvcj9PYmplY3QuYXNzaWduKG5ldyBFcnJvcihBLnZhbHVlLm1lc3NhZ2UpLEEudmFsdWUpOkEudmFsdWV9fSxBST1uZXcgTWFwKFtbInByb3h5IixpdF0sWyJ0aHJvdyIsb3RdXSk7ZnVuY3Rpb24gQnQoQSxJKXtmb3IobGV0IHQgb2YgQSlpZihJPT09dHx8dD09PSIqInx8dCBpbnN0YW5jZW9mIFJlZ0V4cCYmdC50ZXN0KEkpKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIG9BKEEsST1nbG9iYWxUaGlzLHQ9WyIqIl0pe0kuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsZnVuY3Rpb24gZShnKXtpZighZ3x8IWcuZGF0YSlyZXR1cm47aWYoIUJ0KHQsZy5vcmlnaW4pKXtjb25zb2xlLndhcm4oYEludmFsaWQgb3JpZ2luIFwnJHtnLm9yaWdpbn1cJyBmb3IgY29tbGluayBwcm94eWApO3JldHVybn1sZXR7aWQ6aSx0eXBlOnIscGF0aDpzfT1PYmplY3QuYXNzaWduKHtwYXRoOltdfSxnLmRhdGEpLGE9KGcuZGF0YS5hcmd1bWVudExpc3R8fFtdKS5tYXAoYiksbjt0cnl7bGV0IEM9cy5zbGljZSgwLC0xKS5yZWR1Y2UoKGYsUSk9PmZbUV0sQSksbz1zLnJlZHVjZSgoZixRKT0+ZltRXSxBKTtzd2l0Y2gocil7Y2FzZSJHRVQiOm49bzticmVhaztjYXNlIlNFVCI6Q1tzLnNsaWNlKC0xKVswXV09YihnLmRhdGEudmFsdWUpLG49ITA7YnJlYWs7Y2FzZSJBUFBMWSI6bj1vLmFwcGx5KEMsYSk7YnJlYWs7Y2FzZSJDT05TVFJVQ1QiOntsZXQgZj1uZXcgbyguLi5hKTtuPWF0KGYpfWJyZWFrO2Nhc2UiRU5EUE9JTlQiOntsZXR7cG9ydDE6Zixwb3J0MjpRfT1uZXcgTWVzc2FnZUNoYW5uZWw7b0EoQSxRKSxuPVNBKGYsW2ZdKX1icmVhaztjYXNlIlJFTEVBU0UiOm49dm9pZCAwO2JyZWFrO2RlZmF1bHQ6cmV0dXJufX1jYXRjaChDKXtuPXt2YWx1ZTpDLFtlQV06MH19UHJvbWlzZS5yZXNvbHZlKG4pLmNhdGNoKEM9Pih7dmFsdWU6QyxbZUFdOjB9KSkudGhlbihDPT57bGV0W28sZl09aUEoQyk7SS5wb3N0TWVzc2FnZShPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sbykse2lkOml9KSxmKSxyPT09IlJFTEVBU0UiJiYoSS5yZW1vdmVFdmVudExpc3RlbmVyKCJtZXNzYWdlIixlKSxJSShJKSxtQSBpbiBBJiZ0eXBlb2YgQVttQV09PSJmdW5jdGlvbiImJkFbbUFdKCkpfSkuY2F0Y2goQz0+e2xldFtvLGZdPWlBKHt2YWx1ZTpuZXcgVHlwZUVycm9yKCJVbnNlcmlhbGl6YWJsZSByZXR1cm4gdmFsdWUiKSxbZUFdOjB9KTtJLnBvc3RNZXNzYWdlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxvKSx7aWQ6aX0pLGYpfSl9KSxJLnN0YXJ0JiZJLnN0YXJ0KCl9ZnVuY3Rpb24gQ3QoQSl7cmV0dXJuIEEuY29uc3RydWN0b3IubmFtZT09PSJNZXNzYWdlUG9ydCJ9ZnVuY3Rpb24gSUkoQSl7Q3QoQSkmJkEuY2xvc2UoKX1mdW5jdGlvbiBzdChBLEkpe3JldHVybiBwQShBLFtdLEkpfWZ1bmN0aW9uIHRBKEEpe2lmKEEpdGhyb3cgbmV3IEVycm9yKCJQcm94eSBoYXMgYmVlbiByZWxlYXNlZCBhbmQgaXMgbm90IHVzZWFibGUiKX1mdW5jdGlvbiB0SShBKXtyZXR1cm4gTShBLHt0eXBlOiJSRUxFQVNFIn0pLnRoZW4oKCk9PntJSShBKX0pfXZhciBnQT1uZXcgV2Vha01hcCxyQT0iRmluYWxpemF0aW9uUmVnaXN0cnkiaW4gZ2xvYmFsVGhpcyYmbmV3IEZpbmFsaXphdGlvblJlZ2lzdHJ5KEE9PntsZXQgST0oZ0EuZ2V0KEEpfHwwKS0xO2dBLnNldChBLEkpLEk9PT0wJiZ0SShBKX0pO2Z1bmN0aW9uIFF0KEEsSSl7bGV0IHQ9KGdBLmdldChJKXx8MCkrMTtnQS5zZXQoSSx0KSxyQSYmckEucmVnaXN0ZXIoQSxJLEEpfWZ1bmN0aW9uIG50KEEpe3JBJiZyQS51bnJlZ2lzdGVyKEEpfWZ1bmN0aW9uIHBBKEEsST1bXSx0PWZ1bmN0aW9uKCl7fSl7bGV0IGU9ITEsZz1uZXcgUHJveHkodCx7Z2V0KGkscil7aWYodEEoZSkscj09PXJ0KXJldHVybigpPT57bnQoZyksdEkoQSksZT0hMH07aWYocj09PSJ0aGVuIil7aWYoSS5sZW5ndGg9PT0wKXJldHVybnt0aGVuOigpPT5nfTtsZXQgcz1NKEEse3R5cGU6IkdFVCIscGF0aDpJLm1hcChhPT5hLnRvU3RyaW5nKCkpfSkudGhlbihiKTtyZXR1cm4gcy50aGVuLmJpbmQocyl9cmV0dXJuIHBBKEEsWy4uLkkscl0pfSxzZXQoaSxyLHMpe3RBKGUpO2xldFthLG5dPWlBKHMpO3JldHVybiBNKEEse3R5cGU6IlNFVCIscGF0aDpbLi4uSSxyXS5tYXAoQz0+Qy50b1N0cmluZygpKSx2YWx1ZTphfSxuKS50aGVuKGIpfSxhcHBseShpLHIscyl7dEEoZSk7bGV0IGE9SVtJLmxlbmd0aC0xXTtpZihhPT09Z3QpcmV0dXJuIE0oQSx7dHlwZToiRU5EUE9JTlQifSkudGhlbihiKTtpZihhPT09ImJpbmQiKXJldHVybiBwQShBLEkuc2xpY2UoMCwtMSkpO2xldFtuLENdPV9BKHMpO3JldHVybiBNKEEse3R5cGU6IkFQUExZIixwYXRoOkkubWFwKG89Pm8udG9TdHJpbmcoKSksYXJndW1lbnRMaXN0Om59LEMpLnRoZW4oYil9LGNvbnN0cnVjdChpLHIpe3RBKGUpO2xldFtzLGFdPV9BKHIpO3JldHVybiBNKEEse3R5cGU6IkNPTlNUUlVDVCIscGF0aDpJLm1hcChuPT5uLnRvU3RyaW5nKCkpLGFyZ3VtZW50TGlzdDpzfSxhKS50aGVuKGIpfX0pO3JldHVybiBRdChnLEEpLGd9ZnVuY3Rpb24gRXQoQSl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sQSl9ZnVuY3Rpb24gX0EoQSl7bGV0IEk9QS5tYXAoaUEpO3JldHVybltJLm1hcCh0PT50WzBdKSxFdChJLm1hcCh0PT50WzFdKSldfXZhciBlST1uZXcgV2Vha01hcDtmdW5jdGlvbiBTQShBLEkpe3JldHVybiBlSS5zZXQoQSxJKSxBfWZ1bmN0aW9uIGF0KEEpe3JldHVybiBPYmplY3QuYXNzaWduKEEse1t2QV06ITB9KX1mdW5jdGlvbiBpQShBKXtmb3IobGV0W0ksdF1vZiBBSSlpZih0LmNhbkhhbmRsZShBKSl7bGV0W2UsZ109dC5zZXJpYWxpemUoQSk7cmV0dXJuW3t0eXBlOiJIQU5ETEVSIixuYW1lOkksdmFsdWU6ZX0sZ119cmV0dXJuW3t0eXBlOiJSQVciLHZhbHVlOkF9LGVJLmdldChBKXx8W11dfWZ1bmN0aW9uIGIoQSl7c3dpdGNoKEEudHlwZSl7Y2FzZSJIQU5ETEVSIjpyZXR1cm4gQUkuZ2V0KEEubmFtZSkuZGVzZXJpYWxpemUoQS52YWx1ZSk7Y2FzZSJSQVciOnJldHVybiBBLnZhbHVlfX1mdW5jdGlvbiBNKEEsSSx0KXtyZXR1cm4gbmV3IFByb21pc2UoZT0+e2xldCBnPWN0KCk7QS5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixmdW5jdGlvbiBpKHIpeyFyLmRhdGF8fCFyLmRhdGEuaWR8fHIuZGF0YS5pZCE9PWd8fChBLnJlbW92ZUV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGkpLGUoci5kYXRhKSl9KSxBLnN0YXJ0JiZBLnN0YXJ0KCksQS5wb3N0TWVzc2FnZShPYmplY3QuYXNzaWduKHtpZDpnfSxJKSx0KX0pfWZ1bmN0aW9uIGN0KCl7cmV0dXJuIG5ldyBBcnJheSg0KS5maWxsKDApLm1hcCgoKT0+TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKk51bWJlci5NQVhfU0FGRV9JTlRFR0VSKS50b1N0cmluZygxNikpLmpvaW4oIi0iKX1mdW5jdGlvbiBXKEEsSSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIEEuYXBwbHkoSSxhcmd1bWVudHMpfX12YXJ7dG9TdHJpbmc6ZnR9PU9iamVjdC5wcm90b3R5cGUse2dldFByb3RvdHlwZU9mOk5BfT1PYmplY3QsQ0E9KEE9Pkk9PntsZXQgdD1mdC5jYWxsKEkpO3JldHVybiBBW3RdfHwoQVt0XT10LnNsaWNlKDgsLTEpLnRvTG93ZXJDYXNlKCkpfSkoT2JqZWN0LmNyZWF0ZShudWxsKSksVT1BPT4oQT1BLnRvTG93ZXJDYXNlKCksST0+Q0EoSSk9PT1BKSxzQT1BPT5JPT50eXBlb2YgST09PUEse2lzQXJyYXk6cX09QXJyYXksWj1zQSgidW5kZWZpbmVkIik7ZnVuY3Rpb24gbHQoQSl7cmV0dXJuIEEhPT1udWxsJiYhWihBKSYmQS5jb25zdHJ1Y3RvciE9PW51bGwmJiFaKEEuY29uc3RydWN0b3IpJiZGKEEuY29uc3RydWN0b3IuaXNCdWZmZXIpJiZBLmNvbnN0cnVjdG9yLmlzQnVmZmVyKEEpfXZhciBvST1VKCJBcnJheUJ1ZmZlciIpO2Z1bmN0aW9uIER0KEEpe2xldCBJO3JldHVybiB0eXBlb2YgQXJyYXlCdWZmZXI8InUiJiZBcnJheUJ1ZmZlci5pc1ZpZXc/ST1BcnJheUJ1ZmZlci5pc1ZpZXcoQSk6ST1BJiZBLmJ1ZmZlciYmb0koQS5idWZmZXIpLEl9dmFyIHV0PXNBKCJzdHJpbmciKSxGPXNBKCJmdW5jdGlvbiIpLEJJPXNBKCJudW1iZXIiKSxRQT1BPT5BIT09bnVsbCYmdHlwZW9mIEE9PSJvYmplY3QiLGh0PUE9PkE9PT0hMHx8QT09PSExLEJBPUE9PntpZihDQShBKSE9PSJvYmplY3QiKXJldHVybiExO2xldCBJPU5BKEEpO3JldHVybihJPT09bnVsbHx8ST09PU9iamVjdC5wcm90b3R5cGV8fE9iamVjdC5nZXRQcm90b3R5cGVPZihJKT09PW51bGwpJiYhKFN5bWJvbC50b1N0cmluZ1RhZyBpbiBBKSYmIShTeW1ib2wuaXRlcmF0b3IgaW4gQSl9LGR0PVUoIkRhdGUiKSx5dD1VKCJGaWxlIiksd3Q9VSgiQmxvYiIpLG10PVUoIkZpbGVMaXN0IikscHQ9QT0+UUEoQSkmJkYoQS5waXBlKSxTdD1BPT57bGV0IEk7cmV0dXJuIEEmJih0eXBlb2YgRm9ybURhdGE9PSJmdW5jdGlvbiImJkEgaW5zdGFuY2VvZiBGb3JtRGF0YXx8RihBLmFwcGVuZCkmJigoST1DQShBKSk9PT0iZm9ybWRhdGEifHxJPT09Im9iamVjdCImJkYoQS50b1N0cmluZykmJkEudG9TdHJpbmcoKT09PSJbb2JqZWN0IEZvcm1EYXRhXSIpKX0sRnQ9VSgiVVJMU2VhcmNoUGFyYW1zIiksUnQ9QT0+QS50cmltP0EudHJpbSgpOkEucmVwbGFjZSgvXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2csIiIpO2Z1bmN0aW9uIFYoQSxJLHthbGxPd25LZXlzOnQ9ITF9PXt9KXtpZihBPT09bnVsbHx8dHlwZW9mIEE+InUiKXJldHVybjtsZXQgZSxnO2lmKHR5cGVvZiBBIT0ib2JqZWN0IiYmKEE9W0FdKSxxKEEpKWZvcihlPTAsZz1BLmxlbmd0aDtlPGc7ZSsrKUkuY2FsbChudWxsLEFbZV0sZSxBKTtlbHNle2xldCBpPXQ/T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoQSk6T2JqZWN0LmtleXMoQSkscj1pLmxlbmd0aCxzO2ZvcihlPTA7ZTxyO2UrKylzPWlbZV0sSS5jYWxsKG51bGwsQVtzXSxzLEEpfX1mdW5jdGlvbiBDSShBLEkpe0k9SS50b0xvd2VyQ2FzZSgpO2xldCB0PU9iamVjdC5rZXlzKEEpLGU9dC5sZW5ndGgsZztmb3IoO2UtLSA+MDspaWYoZz10W2VdLEk9PT1nLnRvTG93ZXJDYXNlKCkpcmV0dXJuIGc7cmV0dXJuIG51bGx9dmFyIHNJPXR5cGVvZiBnbG9iYWxUaGlzPCJ1Ij9nbG9iYWxUaGlzOnR5cGVvZiBzZWxmPCJ1Ij9zZWxmOnR5cGVvZiB3aW5kb3c8InUiP3dpbmRvdzpnbG9iYWwsUUk9QT0+IVooQSkmJkEhPT1zSTtmdW5jdGlvbiBSQSgpe2xldHtjYXNlbGVzczpBfT1RSSh0aGlzKSYmdGhpc3x8e30sST17fSx0PShlLGcpPT57bGV0IGk9QSYmQ0koSSxnKXx8ZztCQShJW2ldKSYmQkEoZSk/SVtpXT1SQShJW2ldLGUpOkJBKGUpP0lbaV09UkEoe30sZSk6cShlKT9JW2ldPWUuc2xpY2UoKTpJW2ldPWV9O2ZvcihsZXQgZT0wLGc9YXJndW1lbnRzLmxlbmd0aDtlPGc7ZSsrKWFyZ3VtZW50c1tlXSYmVihhcmd1bWVudHNbZV0sdCk7cmV0dXJuIEl9dmFyIE50PShBLEksdCx7YWxsT3duS2V5czplfT17fSk9PihWKEksKGcsaSk9Pnt0JiZGKGcpP0FbaV09VyhnLHQpOkFbaV09Z30se2FsbE93bktleXM6ZX0pLEEpLFV0PUE9PihBLmNoYXJDb2RlQXQoMCk9PT02NTI3OSYmKEE9QS5zbGljZSgxKSksQSksR3Q9KEEsSSx0LGUpPT57QS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShJLnByb3RvdHlwZSxlKSxBLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1BLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBLCJzdXBlciIse3ZhbHVlOkkucHJvdG90eXBlfSksdCYmT2JqZWN0LmFzc2lnbihBLnByb3RvdHlwZSx0KX0sa3Q9KEEsSSx0LGUpPT57bGV0IGcsaSxyLHM9e307aWYoST1JfHx7fSxBPT1udWxsKXJldHVybiBJO2Rve2ZvcihnPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKEEpLGk9Zy5sZW5ndGg7aS0tID4wOylyPWdbaV0sKCFlfHxlKHIsQSxJKSkmJiFzW3JdJiYoSVtyXT1BW3JdLHNbcl09ITApO0E9dCE9PSExJiZOQShBKX13aGlsZShBJiYoIXR8fHQoQSxJKSkmJkEhPT1PYmplY3QucHJvdG90eXBlKTtyZXR1cm4gSX0sTHQ9KEEsSSx0KT0+e0E9U3RyaW5nKEEpLCh0PT09dm9pZCAwfHx0PkEubGVuZ3RoKSYmKHQ9QS5sZW5ndGgpLHQtPUkubGVuZ3RoO2xldCBlPUEuaW5kZXhPZihJLHQpO3JldHVybiBlIT09LTEmJmU9PT10fSxKdD1BPT57aWYoIUEpcmV0dXJuIG51bGw7aWYocShBKSlyZXR1cm4gQTtsZXQgST1BLmxlbmd0aDtpZighQkkoSSkpcmV0dXJuIG51bGw7bGV0IHQ9bmV3IEFycmF5KEkpO2Zvcig7SS0tID4wOyl0W0ldPUFbSV07cmV0dXJuIHR9LEh0PShBPT5JPT5BJiZJIGluc3RhbmNlb2YgQSkodHlwZW9mIFVpbnQ4QXJyYXk8InUiJiZOQShVaW50OEFycmF5KSksWXQ9KEEsSSk9PntsZXQgZT0oQSYmQVtTeW1ib2wuaXRlcmF0b3JdKS5jYWxsKEEpLGc7Zm9yKDsoZz1lLm5leHQoKSkmJiFnLmRvbmU7KXtsZXQgaT1nLnZhbHVlO0kuY2FsbChBLGlbMF0saVsxXSl9fSxidD0oQSxJKT0+e2xldCB0LGU9W107Zm9yKDsodD1BLmV4ZWMoSSkpIT09bnVsbDspZS5wdXNoKHQpO3JldHVybiBlfSxNdD1VKCJIVE1MRm9ybUVsZW1lbnQiKSxxdD1BPT5BLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvWy1fXFxzXShbYS16XFxkXSkoXFx3KikvZyxmdW5jdGlvbih0LGUsZyl7cmV0dXJuIGUudG9VcHBlckNhc2UoKStnfSksckk9KCh7aGFzT3duUHJvcGVydHk6QX0pPT4oSSx0KT0+QS5jYWxsKEksdCkpKE9iamVjdC5wcm90b3R5cGUpLEt0PVUoIlJlZ0V4cCIpLG5JPShBLEkpPT57bGV0IHQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoQSksZT17fTtWKHQsKGcsaSk9PntsZXQgcjsocj1JKGcsaSxBKSkhPT0hMSYmKGVbaV09cnx8Zyl9KSxPYmplY3QuZGVmaW5lUHJvcGVydGllcyhBLGUpfSxPdD1BPT57bkkoQSwoSSx0KT0+e2lmKEYoQSkmJlsiYXJndW1lbnRzIiwiY2FsbGVyIiwiY2FsbGVlIl0uaW5kZXhPZih0KSE9PS0xKXJldHVybiExO2xldCBlPUFbdF07aWYoRihlKSl7aWYoSS5lbnVtZXJhYmxlPSExLCJ3cml0YWJsZSJpbiBJKXtJLndyaXRhYmxlPSExO3JldHVybn1JLnNldHx8KEkuc2V0PSgpPT57dGhyb3cgRXJyb3IoIkNhbiBub3QgcmV3cml0ZSByZWFkLW9ubHkgbWV0aG9kIFwnIit0KyJcJyIpfSl9fSl9LFR0PShBLEkpPT57bGV0IHQ9e30sZT1nPT57Zy5mb3JFYWNoKGk9Pnt0W2ldPSEwfSl9O3JldHVybiBxKEEpP2UoQSk6ZShTdHJpbmcoQSkuc3BsaXQoSSkpLHR9LHh0PSgpPT57fSxQdD0oQSxJKT0+KEE9K0EsTnVtYmVyLmlzRmluaXRlKEEpP0E6SSksRkE9ImFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6IixpST0iMDEyMzQ1Njc4OSIsRUk9e0RJR0lUOmlJLEFMUEhBOkZBLEFMUEhBX0RJR0lUOkZBK0ZBLnRvVXBwZXJDYXNlKCkraUl9LGp0PShBPTE2LEk9RUkuQUxQSEFfRElHSVQpPT57bGV0IHQ9IiIse2xlbmd0aDplfT1JO2Zvcig7QS0tOyl0Kz1JW01hdGgucmFuZG9tKCkqZXwwXTtyZXR1cm4gdH07ZnVuY3Rpb24gV3QoQSl7cmV0dXJuISEoQSYmRihBLmFwcGVuZCkmJkFbU3ltYm9sLnRvU3RyaW5nVGFnXT09PSJGb3JtRGF0YSImJkFbU3ltYm9sLml0ZXJhdG9yXSl9dmFyIFp0PUE9PntsZXQgST1uZXcgQXJyYXkoMTApLHQ9KGUsZyk9PntpZihRQShlKSl7aWYoSS5pbmRleE9mKGUpPj0wKXJldHVybjtpZighKCJ0b0pTT04iaW4gZSkpe0lbZ109ZTtsZXQgaT1xKGUpP1tdOnt9O3JldHVybiBWKGUsKHIscyk9PntsZXQgYT10KHIsZysxKTshWihhKSYmKGlbc109YSl9KSxJW2ddPXZvaWQgMCxpfX1yZXR1cm4gZX07cmV0dXJuIHQoQSwwKX0sVnQ9VSgiQXN5bmNGdW5jdGlvbiIpLFh0PUE9PkEmJihRQShBKXx8RihBKSkmJkYoQS50aGVuKSYmRihBLmNhdGNoKSxCPXtpc0FycmF5OnEsaXNBcnJheUJ1ZmZlcjpvSSxpc0J1ZmZlcjpsdCxpc0Zvcm1EYXRhOlN0LGlzQXJyYXlCdWZmZXJWaWV3OkR0LGlzU3RyaW5nOnV0LGlzTnVtYmVyOkJJLGlzQm9vbGVhbjpodCxpc09iamVjdDpRQSxpc1BsYWluT2JqZWN0OkJBLGlzVW5kZWZpbmVkOlosaXNEYXRlOmR0LGlzRmlsZTp5dCxpc0Jsb2I6d3QsaXNSZWdFeHA6S3QsaXNGdW5jdGlvbjpGLGlzU3RyZWFtOnB0LGlzVVJMU2VhcmNoUGFyYW1zOkZ0LGlzVHlwZWRBcnJheTpIdCxpc0ZpbGVMaXN0Om10LGZvckVhY2g6VixtZXJnZTpSQSxleHRlbmQ6TnQsdHJpbTpSdCxzdHJpcEJPTTpVdCxpbmhlcml0czpHdCx0b0ZsYXRPYmplY3Q6a3Qsa2luZE9mOkNBLGtpbmRPZlRlc3Q6VSxlbmRzV2l0aDpMdCx0b0FycmF5Okp0LGZvckVhY2hFbnRyeTpZdCxtYXRjaEFsbDpidCxpc0hUTUxGb3JtOk10LGhhc093blByb3BlcnR5OnJJLGhhc093blByb3A6ckkscmVkdWNlRGVzY3JpcHRvcnM6bkksZnJlZXplTWV0aG9kczpPdCx0b09iamVjdFNldDpUdCx0b0NhbWVsQ2FzZTpxdCxub29wOnh0LHRvRmluaXRlTnVtYmVyOlB0LGZpbmRLZXk6Q0ksZ2xvYmFsOnNJLGlzQ29udGV4dERlZmluZWQ6UUksQUxQSEFCRVQ6RUksZ2VuZXJhdGVTdHJpbmc6anQsaXNTcGVjQ29tcGxpYW50Rm9ybTpXdCx0b0pTT05PYmplY3Q6WnQsaXNBc3luY0ZuOlZ0LGlzVGhlbmFibGU6WHR9O2Z1bmN0aW9uIEsoQSxJLHQsZSxnKXtFcnJvci5jYWxsKHRoaXMpLEVycm9yLmNhcHR1cmVTdGFja1RyYWNlP0Vycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsdGhpcy5jb25zdHJ1Y3Rvcik6dGhpcy5zdGFjaz1uZXcgRXJyb3IoKS5zdGFjayx0aGlzLm1lc3NhZ2U9QSx0aGlzLm5hbWU9IkF4aW9zRXJyb3IiLEkmJih0aGlzLmNvZGU9SSksdCYmKHRoaXMuY29uZmlnPXQpLGUmJih0aGlzLnJlcXVlc3Q9ZSksZyYmKHRoaXMucmVzcG9uc2U9Zyl9Qi5pbmhlcml0cyhLLEVycm9yLHt0b0pTT046ZnVuY3Rpb24oKXtyZXR1cm57bWVzc2FnZTp0aGlzLm1lc3NhZ2UsbmFtZTp0aGlzLm5hbWUsZGVzY3JpcHRpb246dGhpcy5kZXNjcmlwdGlvbixudW1iZXI6dGhpcy5udW1iZXIsZmlsZU5hbWU6dGhpcy5maWxlTmFtZSxsaW5lTnVtYmVyOnRoaXMubGluZU51bWJlcixjb2x1bW5OdW1iZXI6dGhpcy5jb2x1bW5OdW1iZXIsc3RhY2s6dGhpcy5zdGFjayxjb25maWc6Qi50b0pTT05PYmplY3QodGhpcy5jb25maWcpLGNvZGU6dGhpcy5jb2RlLHN0YXR1czp0aGlzLnJlc3BvbnNlJiZ0aGlzLnJlc3BvbnNlLnN0YXR1cz90aGlzLnJlc3BvbnNlLnN0YXR1czpudWxsfX19KTt2YXIgYUk9Sy5wcm90b3R5cGUsY0k9e307WyJFUlJfQkFEX09QVElPTl9WQUxVRSIsIkVSUl9CQURfT1BUSU9OIiwiRUNPTk5BQk9SVEVEIiwiRVRJTUVET1VUIiwiRVJSX05FVFdPUksiLCJFUlJfRlJfVE9PX01BTllfUkVESVJFQ1RTIiwiRVJSX0RFUFJFQ0FURUQiLCJFUlJfQkFEX1JFU1BPTlNFIiwiRVJSX0JBRF9SRVFVRVNUIiwiRVJSX0NBTkNFTEVEIiwiRVJSX05PVF9TVVBQT1JUIiwiRVJSX0lOVkFMSURfVVJMIl0uZm9yRWFjaChBPT57Y0lbQV09e3ZhbHVlOkF9fSk7T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoSyxjSSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGFJLCJpc0F4aW9zRXJyb3IiLHt2YWx1ZTohMH0pO0suZnJvbT0oQSxJLHQsZSxnLGkpPT57bGV0IHI9T2JqZWN0LmNyZWF0ZShhSSk7cmV0dXJuIEIudG9GbGF0T2JqZWN0KEEscixmdW5jdGlvbihhKXtyZXR1cm4gYSE9PUVycm9yLnByb3RvdHlwZX0scz0+cyE9PSJpc0F4aW9zRXJyb3IiKSxLLmNhbGwocixBLm1lc3NhZ2UsSSx0LGUsZyksci5jYXVzZT1BLHIubmFtZT1BLm5hbWUsaSYmT2JqZWN0LmFzc2lnbihyLGkpLHJ9O3ZhciBsPUs7dmFyIG5BPW51bGw7ZnVuY3Rpb24gVUEoQSl7cmV0dXJuIEIuaXNQbGFpbk9iamVjdChBKXx8Qi5pc0FycmF5KEEpfWZ1bmN0aW9uIGxJKEEpe3JldHVybiBCLmVuZHNXaXRoKEEsIltdIik/QS5zbGljZSgwLC0yKTpBfWZ1bmN0aW9uIGZJKEEsSSx0KXtyZXR1cm4gQT9BLmNvbmNhdChJKS5tYXAoZnVuY3Rpb24oZyxpKXtyZXR1cm4gZz1sSShnKSwhdCYmaT8iWyIrZysiXSI6Z30pLmpvaW4odD8iLiI6IiIpOkl9ZnVuY3Rpb24genQoQSl7cmV0dXJuIEIuaXNBcnJheShBKSYmIUEuc29tZShVQSl9dmFyIF90PUIudG9GbGF0T2JqZWN0KEIse30sbnVsbCxmdW5jdGlvbihJKXtyZXR1cm4vXmlzW0EtWl0vLnRlc3QoSSl9KTtmdW5jdGlvbiB2dChBLEksdCl7aWYoIUIuaXNPYmplY3QoQSkpdGhyb3cgbmV3IFR5cGVFcnJvcigidGFyZ2V0IG11c3QgYmUgYW4gb2JqZWN0Iik7ST1JfHxuZXcobkF8fEZvcm1EYXRhKSx0PUIudG9GbGF0T2JqZWN0KHQse21ldGFUb2tlbnM6ITAsZG90czohMSxpbmRleGVzOiExfSwhMSxmdW5jdGlvbihjLHUpe3JldHVybiFCLmlzVW5kZWZpbmVkKHVbY10pfSk7bGV0IGU9dC5tZXRhVG9rZW5zLGc9dC52aXNpdG9yfHxDLGk9dC5kb3RzLHI9dC5pbmRleGVzLGE9KHQuQmxvYnx8dHlwZW9mIEJsb2I8InUiJiZCbG9iKSYmQi5pc1NwZWNDb21wbGlhbnRGb3JtKEkpO2lmKCFCLmlzRnVuY3Rpb24oZykpdGhyb3cgbmV3IFR5cGVFcnJvcigidmlzaXRvciBtdXN0IGJlIGEgZnVuY3Rpb24iKTtmdW5jdGlvbiBuKEUpe2lmKEU9PT1udWxsKXJldHVybiIiO2lmKEIuaXNEYXRlKEUpKXJldHVybiBFLnRvSVNPU3RyaW5nKCk7aWYoIWEmJkIuaXNCbG9iKEUpKXRocm93IG5ldyBsKCJCbG9iIGlzIG5vdCBzdXBwb3J0ZWQuIFVzZSBhIEJ1ZmZlciBpbnN0ZWFkLiIpO3JldHVybiBCLmlzQXJyYXlCdWZmZXIoRSl8fEIuaXNUeXBlZEFycmF5KEUpP2EmJnR5cGVvZiBCbG9iPT0iZnVuY3Rpb24iP25ldyBCbG9iKFtFXSk6QnVmZmVyLmZyb20oRSk6RX1mdW5jdGlvbiBDKEUsYyx1KXtsZXQgZD1FO2lmKEUmJiF1JiZ0eXBlb2YgRT09Im9iamVjdCIpe2lmKEIuZW5kc1dpdGgoYywie30iKSljPWU/YzpjLnNsaWNlKDAsLTIpLEU9SlNPTi5zdHJpbmdpZnkoRSk7ZWxzZSBpZihCLmlzQXJyYXkoRSkmJnp0KEUpfHwoQi5pc0ZpbGVMaXN0KEUpfHxCLmVuZHNXaXRoKGMsIltdIikpJiYoZD1CLnRvQXJyYXkoRSkpKXJldHVybiBjPWxJKGMpLGQuZm9yRWFjaChmdW5jdGlvbihOLEl0KXshKEIuaXNVbmRlZmluZWQoTil8fE49PT1udWxsKSYmSS5hcHBlbmQocj09PSEwP2ZJKFtjXSxJdCxpKTpyPT09bnVsbD9jOmMrIltdIixuKE4pKX0pLCExfXJldHVybiBVQShFKT8hMDooSS5hcHBlbmQoZkkodSxjLGkpLG4oRSkpLCExKX1sZXQgbz1bXSxmPU9iamVjdC5hc3NpZ24oX3Qse2RlZmF1bHRWaXNpdG9yOkMsY29udmVydFZhbHVlOm4saXNWaXNpdGFibGU6VUF9KTtmdW5jdGlvbiBRKEUsYyl7aWYoIUIuaXNVbmRlZmluZWQoRSkpe2lmKG8uaW5kZXhPZihFKSE9PS0xKXRocm93IEVycm9yKCJDaXJjdWxhciByZWZlcmVuY2UgZGV0ZWN0ZWQgaW4gIitjLmpvaW4oIi4iKSk7by5wdXNoKEUpLEIuZm9yRWFjaChFLGZ1bmN0aW9uKGQsUil7KCEoQi5pc1VuZGVmaW5lZChkKXx8ZD09PW51bGwpJiZnLmNhbGwoSSxkLEIuaXNTdHJpbmcoUik/Ui50cmltKCk6UixjLGYpKT09PSEwJiZRKGQsYz9jLmNvbmNhdChSKTpbUl0pfSksby5wb3AoKX19aWYoIUIuaXNPYmplY3QoQSkpdGhyb3cgbmV3IFR5cGVFcnJvcigiZGF0YSBtdXN0IGJlIGFuIG9iamVjdCIpO3JldHVybiBRKEEpLEl9dmFyIEw9dnQ7ZnVuY3Rpb24gREkoQSl7bGV0IEk9eyIhIjoiJTI1MjEiLCJcJyI6IiUyNTI3IiwiKCI6IiUyNTI4IiwiKSI6IiUyNTI5IiwifiI6IiUyNTdFIiwiJTI1MjAiOiIrIiwiJTI1MDAiOiJcXDAifTtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KEEpLnJlcGxhY2UoL1shXCcoKX5dfCUyNTIwfCUyNTAwL2csZnVuY3Rpb24oZSl7cmV0dXJuIElbZV19KX1mdW5jdGlvbiB1SShBLEkpe3RoaXMuX3BhaXJzPVtdLEEmJkwoQSx0aGlzLEkpfXZhciBoST11SS5wcm90b3R5cGU7aEkuYXBwZW5kPWZ1bmN0aW9uKEksdCl7dGhpcy5fcGFpcnMucHVzaChbSSx0XSl9O2hJLnRvU3RyaW5nPWZ1bmN0aW9uKEkpe2xldCB0PUk/ZnVuY3Rpb24oZSl7cmV0dXJuIEkuY2FsbCh0aGlzLGUsREkpfTpESTtyZXR1cm4gdGhpcy5fcGFpcnMubWFwKGZ1bmN0aW9uKGcpe3JldHVybiB0KGdbMF0pKyI9Iit0KGdbMV0pfSwiIikuam9pbigiJiIpfTt2YXIgRUE9dUk7ZnVuY3Rpb24gJHQoQSl7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChBKS5yZXBsYWNlKC8lMjUzQS9naSwiOiIpLnJlcGxhY2UoLyUyNTI0L2csIiQiKS5yZXBsYWNlKC8lMjUyQy9naSwiLCIpLnJlcGxhY2UoLyUyNTIwL2csIisiKS5yZXBsYWNlKC8lMjU1Qi9naSwiWyIpLnJlcGxhY2UoLyUyNTVEL2dpLCJdIil9ZnVuY3Rpb24gWChBLEksdCl7aWYoIUkpcmV0dXJuIEE7bGV0IGU9dCYmdC5lbmNvZGV8fCR0LGc9dCYmdC5zZXJpYWxpemUsaTtpZihnP2k9ZyhJLHQpOmk9Qi5pc1VSTFNlYXJjaFBhcmFtcyhJKT9JLnRvU3RyaW5nKCk6bmV3IEVBKEksdCkudG9TdHJpbmcoZSksaSl7bGV0IHI9QS5pbmRleE9mKCIlMjMiKTtyIT09LTEmJihBPUEuc2xpY2UoMCxyKSksQSs9KEEuaW5kZXhPZigiPyIpPT09LTE/Ij8iOiImIikraX1yZXR1cm4gQX12YXIgR0E9Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLmhhbmRsZXJzPVtdfXVzZShJLHQsZSl7cmV0dXJuIHRoaXMuaGFuZGxlcnMucHVzaCh7ZnVsZmlsbGVkOkkscmVqZWN0ZWQ6dCxzeW5jaHJvbm91czplP2Uuc3luY2hyb25vdXM6ITEscnVuV2hlbjplP2UucnVuV2hlbjpudWxsfSksdGhpcy5oYW5kbGVycy5sZW5ndGgtMX1lamVjdChJKXt0aGlzLmhhbmRsZXJzW0ldJiYodGhpcy5oYW5kbGVyc1tJXT1udWxsKX1jbGVhcigpe3RoaXMuaGFuZGxlcnMmJih0aGlzLmhhbmRsZXJzPVtdKX1mb3JFYWNoKEkpe0IuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLGZ1bmN0aW9uKGUpe2UhPT1udWxsJiZJKGUpfSl9fSxrQT1HQTt2YXIgYUE9e3NpbGVudEpTT05QYXJzaW5nOiEwLGZvcmNlZEpTT05QYXJzaW5nOiEwLGNsYXJpZnlUaW1lb3V0RXJyb3I6ITF9O3ZhciBkST10eXBlb2YgVVJMU2VhcmNoUGFyYW1zPCJ1Ij9VUkxTZWFyY2hQYXJhbXM6RUE7dmFyIHlJPXR5cGVvZiBGb3JtRGF0YTwidSI/Rm9ybURhdGE6bnVsbDt2YXIgd0k9dHlwZW9mIEJsb2I8InUiP0Jsb2I6bnVsbDt2YXIgbUk9e2lzQnJvd3NlcjohMCxjbGFzc2VzOntVUkxTZWFyY2hQYXJhbXM6ZEksRm9ybURhdGE6eUksQmxvYjp3SX0scHJvdG9jb2xzOlsiaHR0cCIsImh0dHBzIiwiZmlsZSIsImJsb2IiLCJ1cmwiLCJkYXRhIl19O3ZhciBMQT17fTtldChMQSx7aGFzQnJvd3NlckVudjooKT0+cEksaGFzU3RhbmRhcmRCcm93c2VyRW52OigpPT5BZSxoYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnY6KCk9PkllfSk7dmFyIHBJPXR5cGVvZiB3aW5kb3c8InUiJiZ0eXBlb2YgZG9jdW1lbnQ8InUiLEFlPShBPT5wSSYmWyJSZWFjdE5hdGl2ZSIsIk5hdGl2ZVNjcmlwdCIsIk5TIl0uaW5kZXhPZihBKTwwKSh0eXBlb2YgbmF2aWdhdG9yPCJ1IiYmbmF2aWdhdG9yLnByb2R1Y3QpLEllPXR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZTwidSImJnNlbGYgaW5zdGFuY2VvZiBXb3JrZXJHbG9iYWxTY29wZSYmdHlwZW9mIHNlbGYuaW1wb3J0U2NyaXB0cz09ImZ1bmN0aW9uIjt2YXIgdz17Li4uTEEsLi4ubUl9O2Z1bmN0aW9uIEpBKEEsSSl7cmV0dXJuIEwoQSxuZXcgdy5jbGFzc2VzLlVSTFNlYXJjaFBhcmFtcyxPYmplY3QuYXNzaWduKHt2aXNpdG9yOmZ1bmN0aW9uKHQsZSxnLGkpe3JldHVybiB3LmlzTm9kZSYmQi5pc0J1ZmZlcih0KT8odGhpcy5hcHBlbmQoZSx0LnRvU3RyaW5nKCJiYXNlNjQiKSksITEpOmkuZGVmYXVsdFZpc2l0b3IuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0sSSkpfWZ1bmN0aW9uIHRlKEEpe3JldHVybiBCLm1hdGNoQWxsKC9cXHcrfFxcWyhcXHcqKV0vZyxBKS5tYXAoST0+SVswXT09PSJbXSI/IiI6SVsxXXx8SVswXSl9ZnVuY3Rpb24gZWUoQSl7bGV0IEk9e30sdD1PYmplY3Qua2V5cyhBKSxlLGc9dC5sZW5ndGgsaTtmb3IoZT0wO2U8ZztlKyspaT10W2VdLElbaV09QVtpXTtyZXR1cm4gSX1mdW5jdGlvbiBnZShBKXtmdW5jdGlvbiBJKHQsZSxnLGkpe2xldCByPXRbaSsrXSxzPU51bWJlci5pc0Zpbml0ZSgrciksYT1pPj10Lmxlbmd0aDtyZXR1cm4gcj0hciYmQi5pc0FycmF5KGcpP2cubGVuZ3RoOnIsYT8oQi5oYXNPd25Qcm9wKGcscik/Z1tyXT1bZ1tyXSxlXTpnW3JdPWUsIXMpOigoIWdbcl18fCFCLmlzT2JqZWN0KGdbcl0pKSYmKGdbcl09W10pLEkodCxlLGdbcl0saSkmJkIuaXNBcnJheShnW3JdKSYmKGdbcl09ZWUoZ1tyXSkpLCFzKX1pZihCLmlzRm9ybURhdGEoQSkmJkIuaXNGdW5jdGlvbihBLmVudHJpZXMpKXtsZXQgdD17fTtyZXR1cm4gQi5mb3JFYWNoRW50cnkoQSwoZSxnKT0+e0kodGUoZSksZyx0LDApfSksdH1yZXR1cm4gbnVsbH12YXIgY0E9Z2U7ZnVuY3Rpb24gcmUoQSxJLHQpe2lmKEIuaXNTdHJpbmcoQSkpdHJ5e3JldHVybihJfHxKU09OLnBhcnNlKShBKSxCLnRyaW0oQSl9Y2F0Y2goZSl7aWYoZS5uYW1lIT09IlN5bnRheEVycm9yIil0aHJvdyBlfXJldHVybih0fHxKU09OLnN0cmluZ2lmeSkoQSl9dmFyIEhBPXt0cmFuc2l0aW9uYWw6YUEsYWRhcHRlcjpbInhociIsImh0dHAiXSx0cmFuc2Zvcm1SZXF1ZXN0OltmdW5jdGlvbihJLHQpe2xldCBlPXQuZ2V0Q29udGVudFR5cGUoKXx8IiIsZz1lLmluZGV4T2YoImFwcGxpY2F0aW9uL2pzb24iKT4tMSxpPUIuaXNPYmplY3QoSSk7aWYoaSYmQi5pc0hUTUxGb3JtKEkpJiYoST1uZXcgRm9ybURhdGEoSSkpLEIuaXNGb3JtRGF0YShJKSlyZXR1cm4gZyYmZz9KU09OLnN0cmluZ2lmeShjQShJKSk6STtpZihCLmlzQXJyYXlCdWZmZXIoSSl8fEIuaXNCdWZmZXIoSSl8fEIuaXNTdHJlYW0oSSl8fEIuaXNGaWxlKEkpfHxCLmlzQmxvYihJKSlyZXR1cm4gSTtpZihCLmlzQXJyYXlCdWZmZXJWaWV3KEkpKXJldHVybiBJLmJ1ZmZlcjtpZihCLmlzVVJMU2VhcmNoUGFyYW1zKEkpKXJldHVybiB0LnNldENvbnRlbnRUeXBlKCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCIsITEpLEkudG9TdHJpbmcoKTtsZXQgcztpZihpKXtpZihlLmluZGV4T2YoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpPi0xKXJldHVybiBKQShJLHRoaXMuZm9ybVNlcmlhbGl6ZXIpLnRvU3RyaW5nKCk7aWYoKHM9Qi5pc0ZpbGVMaXN0KEkpKXx8ZS5pbmRleE9mKCJtdWx0aXBhcnQvZm9ybS1kYXRhIik+LTEpe2xldCBhPXRoaXMuZW52JiZ0aGlzLmVudi5Gb3JtRGF0YTtyZXR1cm4gTChzP3siZmlsZXNbXSI6SX06SSxhJiZuZXcgYSx0aGlzLmZvcm1TZXJpYWxpemVyKX19cmV0dXJuIGl8fGc/KHQuc2V0Q29udGVudFR5cGUoImFwcGxpY2F0aW9uL2pzb24iLCExKSxyZShJKSk6SX1dLHRyYW5zZm9ybVJlc3BvbnNlOltmdW5jdGlvbihJKXtsZXQgdD10aGlzLnRyYW5zaXRpb25hbHx8SEEudHJhbnNpdGlvbmFsLGU9dCYmdC5mb3JjZWRKU09OUGFyc2luZyxnPXRoaXMucmVzcG9uc2VUeXBlPT09Impzb24iO2lmKEkmJkIuaXNTdHJpbmcoSSkmJihlJiYhdGhpcy5yZXNwb25zZVR5cGV8fGcpKXtsZXQgcj0hKHQmJnQuc2lsZW50SlNPTlBhcnNpbmcpJiZnO3RyeXtyZXR1cm4gSlNPTi5wYXJzZShJKX1jYXRjaChzKXtpZihyKXRocm93IHMubmFtZT09PSJTeW50YXhFcnJvciI/bC5mcm9tKHMsbC5FUlJfQkFEX1JFU1BPTlNFLHRoaXMsbnVsbCx0aGlzLnJlc3BvbnNlKTpzfX1yZXR1cm4gSX1dLHRpbWVvdXQ6MCx4c3JmQ29va2llTmFtZToiWFNSRi1UT0tFTiIseHNyZkhlYWRlck5hbWU6IlgtWFNSRi1UT0tFTiIsbWF4Q29udGVudExlbmd0aDotMSxtYXhCb2R5TGVuZ3RoOi0xLGVudjp7Rm9ybURhdGE6dy5jbGFzc2VzLkZvcm1EYXRhLEJsb2I6dy5jbGFzc2VzLkJsb2J9LHZhbGlkYXRlU3RhdHVzOmZ1bmN0aW9uKEkpe3JldHVybiBJPj0yMDAmJkk8MzAwfSxoZWFkZXJzOntjb21tb246e0FjY2VwdDoiYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qIiwiQ29udGVudC1UeXBlIjp2b2lkIDB9fX07Qi5mb3JFYWNoKFsiZGVsZXRlIiwiZ2V0IiwiaGVhZCIsInBvc3QiLCJwdXQiLCJwYXRjaCJdLEE9PntIQS5oZWFkZXJzW0FdPXt9fSk7dmFyIE89SEE7dmFyIGllPUIudG9PYmplY3RTZXQoWyJhZ2UiLCJhdXRob3JpemF0aW9uIiwiY29udGVudC1sZW5ndGgiLCJjb250ZW50LXR5cGUiLCJldGFnIiwiZXhwaXJlcyIsImZyb20iLCJob3N0IiwiaWYtbW9kaWZpZWQtc2luY2UiLCJpZi11bm1vZGlmaWVkLXNpbmNlIiwibGFzdC1tb2RpZmllZCIsImxvY2F0aW9uIiwibWF4LWZvcndhcmRzIiwicHJveHktYXV0aG9yaXphdGlvbiIsInJlZmVyZXIiLCJyZXRyeS1hZnRlciIsInVzZXItYWdlbnQiXSksU0k9QT0+e2xldCBJPXt9LHQsZSxnO3JldHVybiBBJiZBLnNwbGl0KGAlMEFgKS5mb3JFYWNoKGZ1bmN0aW9uKHIpe2c9ci5pbmRleE9mKCI6IiksdD1yLnN1YnN0cmluZygwLGcpLnRyaW0oKS50b0xvd2VyQ2FzZSgpLGU9ci5zdWJzdHJpbmcoZysxKS50cmltKCksISghdHx8SVt0XSYmaWVbdF0pJiYodD09PSJzZXQtY29va2llIj9JW3RdP0lbdF0ucHVzaChlKTpJW3RdPVtlXTpJW3RdPUlbdF0/SVt0XSsiLCAiK2U6ZSl9KSxJfTt2YXIgRkk9U3ltYm9sKCJpbnRlcm5hbHMiKTtmdW5jdGlvbiB6KEEpe3JldHVybiBBJiZTdHJpbmcoQSkudHJpbSgpLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gZkEoQSl7cmV0dXJuIEE9PT0hMXx8QT09bnVsbD9BOkIuaXNBcnJheShBKT9BLm1hcChmQSk6U3RyaW5nKEEpfWZ1bmN0aW9uIG9lKEEpe2xldCBJPU9iamVjdC5jcmVhdGUobnVsbCksdD0vKFteXFxzLDs9XSspXFxzKig/Oj1cXHMqKFteLDtdKykpPy9nLGU7Zm9yKDtlPXQuZXhlYyhBKTspSVtlWzFdXT1lWzJdO3JldHVybiBJfXZhciBCZT1BPT4vXlstX2EtekEtWjAtOV5gfH4sISUyMyQlJlwnKisuXSskLy50ZXN0KEEudHJpbSgpKTtmdW5jdGlvbiBZQShBLEksdCxlLGcpe2lmKEIuaXNGdW5jdGlvbihlKSlyZXR1cm4gZS5jYWxsKHRoaXMsSSx0KTtpZihnJiYoST10KSwhIUIuaXNTdHJpbmcoSSkpe2lmKEIuaXNTdHJpbmcoZSkpcmV0dXJuIEkuaW5kZXhPZihlKSE9PS0xO2lmKEIuaXNSZWdFeHAoZSkpcmV0dXJuIGUudGVzdChJKX19ZnVuY3Rpb24gQ2UoQSl7cmV0dXJuIEEudHJpbSgpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvKFthLXpcXGRdKShcXHcqKS9nLChJLHQsZSk9PnQudG9VcHBlckNhc2UoKStlKX1mdW5jdGlvbiBzZShBLEkpe2xldCB0PUIudG9DYW1lbENhc2UoIiAiK0kpO1siZ2V0Iiwic2V0IiwiaGFzIl0uZm9yRWFjaChlPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KEEsZSt0LHt2YWx1ZTpmdW5jdGlvbihnLGkscil7cmV0dXJuIHRoaXNbZV0uY2FsbCh0aGlzLEksZyxpLHIpfSxjb25maWd1cmFibGU6ITB9KX0pfXZhciBUPWNsYXNze2NvbnN0cnVjdG9yKEkpe0kmJnRoaXMuc2V0KEkpfXNldChJLHQsZSl7bGV0IGc9dGhpcztmdW5jdGlvbiBpKHMsYSxuKXtsZXQgQz16KGEpO2lmKCFDKXRocm93IG5ldyBFcnJvcigiaGVhZGVyIG5hbWUgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmciKTtsZXQgbz1CLmZpbmRLZXkoZyxDKTsoIW98fGdbb109PT12b2lkIDB8fG49PT0hMHx8bj09PXZvaWQgMCYmZ1tvXSE9PSExKSYmKGdbb3x8YV09ZkEocykpfWxldCByPShzLGEpPT5CLmZvckVhY2gocywobixDKT0+aShuLEMsYSkpO3JldHVybiBCLmlzUGxhaW5PYmplY3QoSSl8fEkgaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yP3IoSSx0KTpCLmlzU3RyaW5nKEkpJiYoST1JLnRyaW0oKSkmJiFCZShJKT9yKFNJKEkpLHQpOkkhPW51bGwmJmkodCxJLGUpLHRoaXN9Z2V0KEksdCl7aWYoST16KEkpLEkpe2xldCBlPUIuZmluZEtleSh0aGlzLEkpO2lmKGUpe2xldCBnPXRoaXNbZV07aWYoIXQpcmV0dXJuIGc7aWYodD09PSEwKXJldHVybiBvZShnKTtpZihCLmlzRnVuY3Rpb24odCkpcmV0dXJuIHQuY2FsbCh0aGlzLGcsZSk7aWYoQi5pc1JlZ0V4cCh0KSlyZXR1cm4gdC5leGVjKGcpO3Rocm93IG5ldyBUeXBlRXJyb3IoInBhcnNlciBtdXN0IGJlIGJvb2xlYW58cmVnZXhwfGZ1bmN0aW9uIil9fX1oYXMoSSx0KXtpZihJPXooSSksSSl7bGV0IGU9Qi5maW5kS2V5KHRoaXMsSSk7cmV0dXJuISEoZSYmdGhpc1tlXSE9PXZvaWQgMCYmKCF0fHxZQSh0aGlzLHRoaXNbZV0sZSx0KSkpfXJldHVybiExfWRlbGV0ZShJLHQpe2xldCBlPXRoaXMsZz0hMTtmdW5jdGlvbiBpKHIpe2lmKHI9eihyKSxyKXtsZXQgcz1CLmZpbmRLZXkoZSxyKTtzJiYoIXR8fFlBKGUsZVtzXSxzLHQpKSYmKGRlbGV0ZSBlW3NdLGc9ITApfX1yZXR1cm4gQi5pc0FycmF5KEkpP0kuZm9yRWFjaChpKTppKEkpLGd9Y2xlYXIoSSl7bGV0IHQ9T2JqZWN0LmtleXModGhpcyksZT10Lmxlbmd0aCxnPSExO2Zvcig7ZS0tOyl7bGV0IGk9dFtlXTsoIUl8fFlBKHRoaXMsdGhpc1tpXSxpLEksITApKSYmKGRlbGV0ZSB0aGlzW2ldLGc9ITApfXJldHVybiBnfW5vcm1hbGl6ZShJKXtsZXQgdD10aGlzLGU9e307cmV0dXJuIEIuZm9yRWFjaCh0aGlzLChnLGkpPT57bGV0IHI9Qi5maW5kS2V5KGUsaSk7aWYocil7dFtyXT1mQShnKSxkZWxldGUgdFtpXTtyZXR1cm59bGV0IHM9ST9DZShpKTpTdHJpbmcoaSkudHJpbSgpO3MhPT1pJiZkZWxldGUgdFtpXSx0W3NdPWZBKGcpLGVbc109ITB9KSx0aGlzfWNvbmNhdCguLi5JKXtyZXR1cm4gdGhpcy5jb25zdHJ1Y3Rvci5jb25jYXQodGhpcywuLi5JKX10b0pTT04oSSl7bGV0IHQ9T2JqZWN0LmNyZWF0ZShudWxsKTtyZXR1cm4gQi5mb3JFYWNoKHRoaXMsKGUsZyk9PntlIT1udWxsJiZlIT09ITEmJih0W2ddPUkmJkIuaXNBcnJheShlKT9lLmpvaW4oIiwgIik6ZSl9KSx0fVtTeW1ib2wuaXRlcmF0b3JdKCl7cmV0dXJuIE9iamVjdC5lbnRyaWVzKHRoaXMudG9KU09OKCkpW1N5bWJvbC5pdGVyYXRvcl0oKX10b1N0cmluZygpe3JldHVybiBPYmplY3QuZW50cmllcyh0aGlzLnRvSlNPTigpKS5tYXAoKFtJLHRdKT0+SSsiOiAiK3QpLmpvaW4oYCUwQWApfWdldFtTeW1ib2wudG9TdHJpbmdUYWddKCl7cmV0dXJuIkF4aW9zSGVhZGVycyJ9c3RhdGljIGZyb20oSSl7cmV0dXJuIEkgaW5zdGFuY2VvZiB0aGlzP0k6bmV3IHRoaXMoSSl9c3RhdGljIGNvbmNhdChJLC4uLnQpe2xldCBlPW5ldyB0aGlzKEkpO3JldHVybiB0LmZvckVhY2goZz0+ZS5zZXQoZykpLGV9c3RhdGljIGFjY2Vzc29yKEkpe2xldCBlPSh0aGlzW0ZJXT10aGlzW0ZJXT17YWNjZXNzb3JzOnt9fSkuYWNjZXNzb3JzLGc9dGhpcy5wcm90b3R5cGU7ZnVuY3Rpb24gaShyKXtsZXQgcz16KHIpO2Vbc118fChzZShnLHIpLGVbc109ITApfXJldHVybiBCLmlzQXJyYXkoSSk/SS5mb3JFYWNoKGkpOmkoSSksdGhpc319O1QuYWNjZXNzb3IoWyJDb250ZW50LVR5cGUiLCJDb250ZW50LUxlbmd0aCIsIkFjY2VwdCIsIkFjY2VwdC1FbmNvZGluZyIsIlVzZXItQWdlbnQiLCJBdXRob3JpemF0aW9uIl0pO0IucmVkdWNlRGVzY3JpcHRvcnMoVC5wcm90b3R5cGUsKHt2YWx1ZTpBfSxJKT0+e2xldCB0PUlbMF0udG9VcHBlckNhc2UoKStJLnNsaWNlKDEpO3JldHVybntnZXQ6KCk9PkEsc2V0KGUpe3RoaXNbdF09ZX19fSk7Qi5mcmVlemVNZXRob2RzKFQpO3ZhciBtPVQ7ZnVuY3Rpb24gXyhBLEkpe2xldCB0PXRoaXN8fE8sZT1JfHx0LGc9bS5mcm9tKGUuaGVhZGVycyksaT1lLmRhdGE7cmV0dXJuIEIuZm9yRWFjaChBLGZ1bmN0aW9uKHMpe2k9cy5jYWxsKHQsaSxnLm5vcm1hbGl6ZSgpLEk/SS5zdGF0dXM6dm9pZCAwKX0pLGcubm9ybWFsaXplKCksaX1mdW5jdGlvbiB2KEEpe3JldHVybiEhKEEmJkEuX19DQU5DRUxfXyl9ZnVuY3Rpb24gUkkoQSxJLHQpe2wuY2FsbCh0aGlzLEE/PyJjYW5jZWxlZCIsbC5FUlJfQ0FOQ0VMRUQsSSx0KSx0aGlzLm5hbWU9IkNhbmNlbGVkRXJyb3IifUIuaW5oZXJpdHMoUkksbCx7X19DQU5DRUxfXzohMH0pO3ZhciBKPVJJO2Z1bmN0aW9uIGJBKEEsSSx0KXtsZXQgZT10LmNvbmZpZy52YWxpZGF0ZVN0YXR1czshdC5zdGF0dXN8fCFlfHxlKHQuc3RhdHVzKT9BKHQpOkkobmV3IGwoIlJlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgIit0LnN0YXR1cyxbbC5FUlJfQkFEX1JFUVVFU1QsbC5FUlJfQkFEX1JFU1BPTlNFXVtNYXRoLmZsb29yKHQuc3RhdHVzLzEwMCktNF0sdC5jb25maWcsdC5yZXF1ZXN0LHQpKX12YXIgTkk9dy5oYXNTdGFuZGFyZEJyb3dzZXJFbnY/e3dyaXRlKEEsSSx0LGUsZyxpKXtsZXQgcj1bQSsiPSIrZW5jb2RlVVJJQ29tcG9uZW50KEkpXTtCLmlzTnVtYmVyKHQpJiZyLnB1c2goImV4cGlyZXM9IituZXcgRGF0ZSh0KS50b0dNVFN0cmluZygpKSxCLmlzU3RyaW5nKGUpJiZyLnB1c2goInBhdGg9IitlKSxCLmlzU3RyaW5nKGcpJiZyLnB1c2goImRvbWFpbj0iK2cpLGk9PT0hMCYmci5wdXNoKCJzZWN1cmUiKSxkb2N1bWVudC5jb29raWU9ci5qb2luKCI7ICIpfSxyZWFkKEEpe2xldCBJPWRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCIoXnw7XFxcXHMqKSgiK0ErIik9KFteO10qKSIpKTtyZXR1cm4gST9kZWNvZGVVUklDb21wb25lbnQoSVszXSk6bnVsbH0scmVtb3ZlKEEpe3RoaXMud3JpdGUoQSwiIixEYXRlLm5vdygpLTg2NGU1KX19Ont3cml0ZSgpe30scmVhZCgpe3JldHVybiBudWxsfSxyZW1vdmUoKXt9fTtmdW5jdGlvbiBNQShBKXtyZXR1cm4vXihbYS16XVthLXpcXGQrXFwtLl0qOik/XFwvXFwvL2kudGVzdChBKX1mdW5jdGlvbiBxQShBLEkpe3JldHVybiBJP0EucmVwbGFjZSgvXFwvKyQvLCIiKSsiLyIrSS5yZXBsYWNlKC9eXFwvKy8sIiIpOkF9ZnVuY3Rpb24gJChBLEkpe3JldHVybiBBJiYhTUEoSSk/cUEoQSxJKTpJfXZhciBVST13Lmhhc1N0YW5kYXJkQnJvd3NlckVudj9mdW5jdGlvbigpe2xldCBJPS8obXNpZXx0cmlkZW50KS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIiksZTtmdW5jdGlvbiBnKGkpe2xldCByPWk7cmV0dXJuIEkmJih0LnNldEF0dHJpYnV0ZSgiaHJlZiIscikscj10LmhyZWYpLHQuc2V0QXR0cmlidXRlKCJocmVmIixyKSx7aHJlZjp0LmhyZWYscHJvdG9jb2w6dC5wcm90b2NvbD90LnByb3RvY29sLnJlcGxhY2UoLzokLywiIik6IiIsaG9zdDp0Lmhvc3Qsc2VhcmNoOnQuc2VhcmNoP3Quc2VhcmNoLnJlcGxhY2UoL15cXD8vLCIiKToiIixoYXNoOnQuaGFzaD90Lmhhc2gucmVwbGFjZSgvXiUyMy8sIiIpOiIiLGhvc3RuYW1lOnQuaG9zdG5hbWUscG9ydDp0LnBvcnQscGF0aG5hbWU6dC5wYXRobmFtZS5jaGFyQXQoMCk9PT0iLyI/dC5wYXRobmFtZToiLyIrdC5wYXRobmFtZX19cmV0dXJuIGU9Zyh3aW5kb3cubG9jYXRpb24uaHJlZiksZnVuY3Rpb24ocil7bGV0IHM9Qi5pc1N0cmluZyhyKT9nKHIpOnI7cmV0dXJuIHMucHJvdG9jb2w9PT1lLnByb3RvY29sJiZzLmhvc3Q9PT1lLmhvc3R9fSgpOmZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuITB9fSgpO2Z1bmN0aW9uIEtBKEEpe2xldCBJPS9eKFstK1xcd117MSwyNX0pKDo/XFwvXFwvfDopLy5leGVjKEEpO3JldHVybiBJJiZJWzFdfHwiIn1mdW5jdGlvbiBRZShBLEkpe0E9QXx8MTA7bGV0IHQ9bmV3IEFycmF5KEEpLGU9bmV3IEFycmF5KEEpLGc9MCxpPTAscjtyZXR1cm4gST1JIT09dm9pZCAwP0k6MWUzLGZ1bmN0aW9uKGEpe2xldCBuPURhdGUubm93KCksQz1lW2ldO3J8fChyPW4pLHRbZ109YSxlW2ddPW47bGV0IG89aSxmPTA7Zm9yKDtvIT09ZzspZis9dFtvKytdLG89byVBO2lmKGc9KGcrMSklQSxnPT09aSYmKGk9KGkrMSklQSksbi1yPEkpcmV0dXJuO2xldCBRPUMmJm4tQztyZXR1cm4gUT9NYXRoLnJvdW5kKGYqMWUzL1EpOnZvaWQgMH19dmFyIEdJPVFlO2Z1bmN0aW9uIGtJKEEsSSl7bGV0IHQ9MCxlPUdJKDUwLDI1MCk7cmV0dXJuIGc9PntsZXQgaT1nLmxvYWRlZCxyPWcubGVuZ3RoQ29tcHV0YWJsZT9nLnRvdGFsOnZvaWQgMCxzPWktdCxhPWUocyksbj1pPD1yO3Q9aTtsZXQgQz17bG9hZGVkOmksdG90YWw6cixwcm9ncmVzczpyP2kvcjp2b2lkIDAsYnl0ZXM6cyxyYXRlOmF8fHZvaWQgMCxlc3RpbWF0ZWQ6YSYmciYmbj8oci1pKS9hOnZvaWQgMCxldmVudDpnfTtDW0k/ImRvd25sb2FkIjoidXBsb2FkIl09ITAsQShDKX19dmFyIG5lPXR5cGVvZiBYTUxIdHRwUmVxdWVzdDwidSIsTEk9bmUmJmZ1bmN0aW9uKEEpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbih0LGUpe2xldCBnPUEuZGF0YSxpPW0uZnJvbShBLmhlYWRlcnMpLm5vcm1hbGl6ZSgpLHtyZXNwb25zZVR5cGU6cix3aXRoWFNSRlRva2VuOnN9PUEsYTtmdW5jdGlvbiBuKCl7QS5jYW5jZWxUb2tlbiYmQS5jYW5jZWxUb2tlbi51bnN1YnNjcmliZShhKSxBLnNpZ25hbCYmQS5zaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigiYWJvcnQiLGEpfWxldCBDO2lmKEIuaXNGb3JtRGF0YShnKSl7aWYody5oYXNTdGFuZGFyZEJyb3dzZXJFbnZ8fHcuaGFzU3RhbmRhcmRCcm93c2VyV2ViV29ya2VyRW52KWkuc2V0Q29udGVudFR5cGUoITEpO2Vsc2UgaWYoKEM9aS5nZXRDb250ZW50VHlwZSgpKSE9PSExKXtsZXRbYywuLi51XT1DP0Muc3BsaXQoIjsiKS5tYXAoZD0+ZC50cmltKCkpLmZpbHRlcihCb29sZWFuKTpbXTtpLnNldENvbnRlbnRUeXBlKFtjfHwibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsLi4udV0uam9pbigiOyAiKSl9fWxldCBvPW5ldyBYTUxIdHRwUmVxdWVzdDtpZihBLmF1dGgpe2xldCBjPUEuYXV0aC51c2VybmFtZXx8IiIsdT1BLmF1dGgucGFzc3dvcmQ/dW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEEuYXV0aC5wYXNzd29yZCkpOiIiO2kuc2V0KCJBdXRob3JpemF0aW9uIiwiQmFzaWMgIitidG9hKGMrIjoiK3UpKX1sZXQgZj0kKEEuYmFzZVVSTCxBLnVybCk7by5vcGVuKEEubWV0aG9kLnRvVXBwZXJDYXNlKCksWChmLEEucGFyYW1zLEEucGFyYW1zU2VyaWFsaXplciksITApLG8udGltZW91dD1BLnRpbWVvdXQ7ZnVuY3Rpb24gUSgpe2lmKCFvKXJldHVybjtsZXQgYz1tLmZyb20oImdldEFsbFJlc3BvbnNlSGVhZGVycyJpbiBvJiZvLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSxkPXtkYXRhOiFyfHxyPT09InRleHQifHxyPT09Impzb24iP28ucmVzcG9uc2VUZXh0Om8ucmVzcG9uc2Usc3RhdHVzOm8uc3RhdHVzLHN0YXR1c1RleHQ6by5zdGF0dXNUZXh0LGhlYWRlcnM6Yyxjb25maWc6QSxyZXF1ZXN0Om99O2JBKGZ1bmN0aW9uKE4pe3QoTiksbigpfSxmdW5jdGlvbihOKXtlKE4pLG4oKX0sZCksbz1udWxsfWlmKCJvbmxvYWRlbmQiaW4gbz9vLm9ubG9hZGVuZD1ROm8ub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7IW98fG8ucmVhZHlTdGF0ZSE9PTR8fG8uc3RhdHVzPT09MCYmIShvLnJlc3BvbnNlVVJMJiZvLnJlc3BvbnNlVVJMLmluZGV4T2YoImZpbGU6Iik9PT0wKXx8c2V0VGltZW91dChRKX0sby5vbmFib3J0PWZ1bmN0aW9uKCl7byYmKGUobmV3IGwoIlJlcXVlc3QgYWJvcnRlZCIsbC5FQ09OTkFCT1JURUQsQSxvKSksbz1udWxsKX0sby5vbmVycm9yPWZ1bmN0aW9uKCl7ZShuZXcgbCgiTmV0d29yayBFcnJvciIsbC5FUlJfTkVUV09SSyxBLG8pKSxvPW51bGx9LG8ub250aW1lb3V0PWZ1bmN0aW9uKCl7bGV0IHU9QS50aW1lb3V0PyJ0aW1lb3V0IG9mICIrQS50aW1lb3V0KyJtcyBleGNlZWRlZCI6InRpbWVvdXQgZXhjZWVkZWQiLGQ9QS50cmFuc2l0aW9uYWx8fGFBO0EudGltZW91dEVycm9yTWVzc2FnZSYmKHU9QS50aW1lb3V0RXJyb3JNZXNzYWdlKSxlKG5ldyBsKHUsZC5jbGFyaWZ5VGltZW91dEVycm9yP2wuRVRJTUVET1VUOmwuRUNPTk5BQk9SVEVELEEsbykpLG89bnVsbH0sdy5oYXNTdGFuZGFyZEJyb3dzZXJFbnYmJihzJiZCLmlzRnVuY3Rpb24ocykmJihzPXMoQSkpLHN8fHMhPT0hMSYmVUkoZikpKXtsZXQgYz1BLnhzcmZIZWFkZXJOYW1lJiZBLnhzcmZDb29raWVOYW1lJiZOSS5yZWFkKEEueHNyZkNvb2tpZU5hbWUpO2MmJmkuc2V0KEEueHNyZkhlYWRlck5hbWUsYyl9Zz09PXZvaWQgMCYmaS5zZXRDb250ZW50VHlwZShudWxsKSwic2V0UmVxdWVzdEhlYWRlciJpbiBvJiZCLmZvckVhY2goaS50b0pTT04oKSxmdW5jdGlvbih1LGQpe28uc2V0UmVxdWVzdEhlYWRlcihkLHUpfSksQi5pc1VuZGVmaW5lZChBLndpdGhDcmVkZW50aWFscyl8fChvLndpdGhDcmVkZW50aWFscz0hIUEud2l0aENyZWRlbnRpYWxzKSxyJiZyIT09Impzb24iJiYoby5yZXNwb25zZVR5cGU9QS5yZXNwb25zZVR5cGUpLHR5cGVvZiBBLm9uRG93bmxvYWRQcm9ncmVzcz09ImZ1bmN0aW9uIiYmby5hZGRFdmVudExpc3RlbmVyKCJwcm9ncmVzcyIsa0koQS5vbkRvd25sb2FkUHJvZ3Jlc3MsITApKSx0eXBlb2YgQS5vblVwbG9hZFByb2dyZXNzPT0iZnVuY3Rpb24iJiZvLnVwbG9hZCYmby51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigicHJvZ3Jlc3MiLGtJKEEub25VcGxvYWRQcm9ncmVzcykpLChBLmNhbmNlbFRva2VufHxBLnNpZ25hbCkmJihhPWM9PntvJiYoZSghY3x8Yy50eXBlP25ldyBKKG51bGwsQSxvKTpjKSxvLmFib3J0KCksbz1udWxsKX0sQS5jYW5jZWxUb2tlbiYmQS5jYW5jZWxUb2tlbi5zdWJzY3JpYmUoYSksQS5zaWduYWwmJihBLnNpZ25hbC5hYm9ydGVkP2EoKTpBLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCJhYm9ydCIsYSkpKTtsZXQgRT1LQShmKTtpZihFJiZ3LnByb3RvY29scy5pbmRleE9mKEUpPT09LTEpe2UobmV3IGwoIlVuc3VwcG9ydGVkIHByb3RvY29sICIrRSsiOiIsbC5FUlJfQkFEX1JFUVVFU1QsQSkpO3JldHVybn1vLnNlbmQoZ3x8bnVsbCl9KX07dmFyIE9BPXtodHRwOm5BLHhocjpMSX07Qi5mb3JFYWNoKE9BLChBLEkpPT57aWYoQSl7dHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eShBLCJuYW1lIix7dmFsdWU6SX0pfWNhdGNoe31PYmplY3QuZGVmaW5lUHJvcGVydHkoQSwiYWRhcHRlck5hbWUiLHt2YWx1ZTpJfSl9fSk7dmFyIEpJPUE9PmAtICR7QX1gLEVlPUE9PkIuaXNGdW5jdGlvbihBKXx8QT09PW51bGx8fEE9PT0hMSxsQT17Z2V0QWRhcHRlcjpBPT57QT1CLmlzQXJyYXkoQSk/QTpbQV07bGV0e2xlbmd0aDpJfT1BLHQsZSxnPXt9O2ZvcihsZXQgaT0wO2k8STtpKyspe3Q9QVtpXTtsZXQgcjtpZihlPXQsIUVlKHQpJiYoZT1PQVsocj1TdHJpbmcodCkpLnRvTG93ZXJDYXNlKCldLGU9PT12b2lkIDApKXRocm93IG5ldyBsKGBVbmtub3duIGFkYXB0ZXIgXCcke3J9XCdgKTtpZihlKWJyZWFrO2dbcnx8IiUyMyIraV09ZX1pZighZSl7bGV0IGk9T2JqZWN0LmVudHJpZXMoZykubWFwKChbcyxhXSk9PmBhZGFwdGVyICR7c30gYCsoYT09PSExPyJpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBlbnZpcm9ubWVudCI6ImlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIGJ1aWxkIikpLHI9ST9pLmxlbmd0aD4xP2BzaW5jZSA6JTBBYCtpLm1hcChKSSkuam9pbihgJTBBYCk6IiAiK0pJKGlbMF0pOiJhcyBubyBhZGFwdGVyIHNwZWNpZmllZCI7dGhyb3cgbmV3IGwoIlRoZXJlIGlzIG5vIHN1aXRhYmxlIGFkYXB0ZXIgdG8gZGlzcGF0Y2ggdGhlIHJlcXVlc3QgIityLCJFUlJfTk9UX1NVUFBPUlQiKX1yZXR1cm4gZX0sYWRhcHRlcnM6T0F9O2Z1bmN0aW9uIFRBKEEpe2lmKEEuY2FuY2VsVG9rZW4mJkEuY2FuY2VsVG9rZW4udGhyb3dJZlJlcXVlc3RlZCgpLEEuc2lnbmFsJiZBLnNpZ25hbC5hYm9ydGVkKXRocm93IG5ldyBKKG51bGwsQSl9ZnVuY3Rpb24gREEoQSl7cmV0dXJuIFRBKEEpLEEuaGVhZGVycz1tLmZyb20oQS5oZWFkZXJzKSxBLmRhdGE9Xy5jYWxsKEEsQS50cmFuc2Zvcm1SZXF1ZXN0KSxbInBvc3QiLCJwdXQiLCJwYXRjaCJdLmluZGV4T2YoQS5tZXRob2QpIT09LTEmJkEuaGVhZGVycy5zZXRDb250ZW50VHlwZSgiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwhMSksbEEuZ2V0QWRhcHRlcihBLmFkYXB0ZXJ8fE8uYWRhcHRlcikoQSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gVEEoQSksZS5kYXRhPV8uY2FsbChBLEEudHJhbnNmb3JtUmVzcG9uc2UsZSksZS5oZWFkZXJzPW0uZnJvbShlLmhlYWRlcnMpLGV9LGZ1bmN0aW9uKGUpe3JldHVybiB2KGUpfHwoVEEoQSksZSYmZS5yZXNwb25zZSYmKGUucmVzcG9uc2UuZGF0YT1fLmNhbGwoQSxBLnRyYW5zZm9ybVJlc3BvbnNlLGUucmVzcG9uc2UpLGUucmVzcG9uc2UuaGVhZGVycz1tLmZyb20oZS5yZXNwb25zZS5oZWFkZXJzKSkpLFByb21pc2UucmVqZWN0KGUpfSl9dmFyIEhJPUE9PkEgaW5zdGFuY2VvZiBtP0EudG9KU09OKCk6QTtmdW5jdGlvbiBHKEEsSSl7ST1JfHx7fTtsZXQgdD17fTtmdW5jdGlvbiBlKG4sQyxvKXtyZXR1cm4gQi5pc1BsYWluT2JqZWN0KG4pJiZCLmlzUGxhaW5PYmplY3QoQyk/Qi5tZXJnZS5jYWxsKHtjYXNlbGVzczpvfSxuLEMpOkIuaXNQbGFpbk9iamVjdChDKT9CLm1lcmdlKHt9LEMpOkIuaXNBcnJheShDKT9DLnNsaWNlKCk6Q31mdW5jdGlvbiBnKG4sQyxvKXtpZihCLmlzVW5kZWZpbmVkKEMpKXtpZighQi5pc1VuZGVmaW5lZChuKSlyZXR1cm4gZSh2b2lkIDAsbixvKX1lbHNlIHJldHVybiBlKG4sQyxvKX1mdW5jdGlvbiBpKG4sQyl7aWYoIUIuaXNVbmRlZmluZWQoQykpcmV0dXJuIGUodm9pZCAwLEMpfWZ1bmN0aW9uIHIobixDKXtpZihCLmlzVW5kZWZpbmVkKEMpKXtpZighQi5pc1VuZGVmaW5lZChuKSlyZXR1cm4gZSh2b2lkIDAsbil9ZWxzZSByZXR1cm4gZSh2b2lkIDAsQyl9ZnVuY3Rpb24gcyhuLEMsbyl7aWYobyBpbiBJKXJldHVybiBlKG4sQyk7aWYobyBpbiBBKXJldHVybiBlKHZvaWQgMCxuKX1sZXQgYT17dXJsOmksbWV0aG9kOmksZGF0YTppLGJhc2VVUkw6cix0cmFuc2Zvcm1SZXF1ZXN0OnIsdHJhbnNmb3JtUmVzcG9uc2U6cixwYXJhbXNTZXJpYWxpemVyOnIsdGltZW91dDpyLHRpbWVvdXRNZXNzYWdlOnIsd2l0aENyZWRlbnRpYWxzOnIsd2l0aFhTUkZUb2tlbjpyLGFkYXB0ZXI6cixyZXNwb25zZVR5cGU6cix4c3JmQ29va2llTmFtZTpyLHhzcmZIZWFkZXJOYW1lOnIsb25VcGxvYWRQcm9ncmVzczpyLG9uRG93bmxvYWRQcm9ncmVzczpyLGRlY29tcHJlc3M6cixtYXhDb250ZW50TGVuZ3RoOnIsbWF4Qm9keUxlbmd0aDpyLGJlZm9yZVJlZGlyZWN0OnIsdHJhbnNwb3J0OnIsaHR0cEFnZW50OnIsaHR0cHNBZ2VudDpyLGNhbmNlbFRva2VuOnIsc29ja2V0UGF0aDpyLHJlc3BvbnNlRW5jb2Rpbmc6cix2YWxpZGF0ZVN0YXR1czpzLGhlYWRlcnM6KG4sQyk9PmcoSEkobiksSEkoQyksITApfTtyZXR1cm4gQi5mb3JFYWNoKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sQSxJKSksZnVuY3Rpb24oQyl7bGV0IG89YVtDXXx8ZyxmPW8oQVtDXSxJW0NdLEMpO0IuaXNVbmRlZmluZWQoZikmJm8hPT1zfHwodFtDXT1mKX0pLHR9dmFyIHVBPSIxLjYuMiI7dmFyIHhBPXt9O1sib2JqZWN0IiwiYm9vbGVhbiIsIm51bWJlciIsImZ1bmN0aW9uIiwic3RyaW5nIiwic3ltYm9sIl0uZm9yRWFjaCgoQSxJKT0+e3hBW0FdPWZ1bmN0aW9uKGUpe3JldHVybiB0eXBlb2YgZT09PUF8fCJhIisoSTwxPyJuICI6IiAiKStBfX0pO3ZhciBZST17fTt4QS50cmFuc2l0aW9uYWw9ZnVuY3Rpb24oSSx0LGUpe2Z1bmN0aW9uIGcoaSxyKXtyZXR1cm4iW0F4aW9zIHYiK3VBKyJdIFRyYW5zaXRpb25hbCBvcHRpb24gXCciK2krIlwnIityKyhlPyIuICIrZToiIil9cmV0dXJuKGkscixzKT0+e2lmKEk9PT0hMSl0aHJvdyBuZXcgbChnKHIsIiBoYXMgYmVlbiByZW1vdmVkIisodD8iIGluICIrdDoiIikpLGwuRVJSX0RFUFJFQ0FURUQpO3JldHVybiB0JiYhWUlbcl0mJihZSVtyXT0hMCxjb25zb2xlLndhcm4oZyhyLCIgaGFzIGJlZW4gZGVwcmVjYXRlZCBzaW5jZSB2Iit0KyIgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmVhciBmdXR1cmUiKSkpLEk/SShpLHIscyk6ITB9fTtmdW5jdGlvbiBhZShBLEksdCl7aWYodHlwZW9mIEEhPSJvYmplY3QiKXRocm93IG5ldyBsKCJvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0IixsLkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtsZXQgZT1PYmplY3Qua2V5cyhBKSxnPWUubGVuZ3RoO2Zvcig7Zy0tID4wOyl7bGV0IGk9ZVtnXSxyPUlbaV07aWYocil7bGV0IHM9QVtpXSxhPXM9PT12b2lkIDB8fHIocyxpLEEpO2lmKGEhPT0hMCl0aHJvdyBuZXcgbCgib3B0aW9uICIraSsiIG11c3QgYmUgIithLGwuRVJSX0JBRF9PUFRJT05fVkFMVUUpO2NvbnRpbnVlfWlmKHQhPT0hMCl0aHJvdyBuZXcgbCgiVW5rbm93biBvcHRpb24gIitpLGwuRVJSX0JBRF9PUFRJT04pfX12YXIgaEE9e2Fzc2VydE9wdGlvbnM6YWUsdmFsaWRhdG9yczp4QX07dmFyIEg9aEEudmFsaWRhdG9ycyx4PWNsYXNze2NvbnN0cnVjdG9yKEkpe3RoaXMuZGVmYXVsdHM9SSx0aGlzLmludGVyY2VwdG9ycz17cmVxdWVzdDpuZXcga0EscmVzcG9uc2U6bmV3IGtBfX1yZXF1ZXN0KEksdCl7dHlwZW9mIEk9PSJzdHJpbmciPyh0PXR8fHt9LHQudXJsPUkpOnQ9SXx8e30sdD1HKHRoaXMuZGVmYXVsdHMsdCk7bGV0e3RyYW5zaXRpb25hbDplLHBhcmFtc1NlcmlhbGl6ZXI6ZyxoZWFkZXJzOml9PXQ7ZSE9PXZvaWQgMCYmaEEuYXNzZXJ0T3B0aW9ucyhlLHtzaWxlbnRKU09OUGFyc2luZzpILnRyYW5zaXRpb25hbChILmJvb2xlYW4pLGZvcmNlZEpTT05QYXJzaW5nOkgudHJhbnNpdGlvbmFsKEguYm9vbGVhbiksY2xhcmlmeVRpbWVvdXRFcnJvcjpILnRyYW5zaXRpb25hbChILmJvb2xlYW4pfSwhMSksZyE9bnVsbCYmKEIuaXNGdW5jdGlvbihnKT90LnBhcmFtc1NlcmlhbGl6ZXI9e3NlcmlhbGl6ZTpnfTpoQS5hc3NlcnRPcHRpb25zKGcse2VuY29kZTpILmZ1bmN0aW9uLHNlcmlhbGl6ZTpILmZ1bmN0aW9ufSwhMCkpLHQubWV0aG9kPSh0Lm1ldGhvZHx8dGhpcy5kZWZhdWx0cy5tZXRob2R8fCJnZXQiKS50b0xvd2VyQ2FzZSgpO2xldCByPWkmJkIubWVyZ2UoaS5jb21tb24saVt0Lm1ldGhvZF0pO2kmJkIuZm9yRWFjaChbImRlbGV0ZSIsImdldCIsImhlYWQiLCJwb3N0IiwicHV0IiwicGF0Y2giLCJjb21tb24iXSxFPT57ZGVsZXRlIGlbRV19KSx0LmhlYWRlcnM9bS5jb25jYXQocixpKTtsZXQgcz1bXSxhPSEwO3RoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbihjKXt0eXBlb2YgYy5ydW5XaGVuPT0iZnVuY3Rpb24iJiZjLnJ1bldoZW4odCk9PT0hMXx8KGE9YSYmYy5zeW5jaHJvbm91cyxzLnVuc2hpZnQoYy5mdWxmaWxsZWQsYy5yZWplY3RlZCkpfSk7bGV0IG49W107dGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbihjKXtuLnB1c2goYy5mdWxmaWxsZWQsYy5yZWplY3RlZCl9KTtsZXQgQyxvPTAsZjtpZighYSl7bGV0IEU9W0RBLmJpbmQodGhpcyksdm9pZCAwXTtmb3IoRS51bnNoaWZ0LmFwcGx5KEUscyksRS5wdXNoLmFwcGx5KEUsbiksZj1FLmxlbmd0aCxDPVByb21pc2UucmVzb2x2ZSh0KTtvPGY7KUM9Qy50aGVuKEVbbysrXSxFW28rK10pO3JldHVybiBDfWY9cy5sZW5ndGg7bGV0IFE9dDtmb3Iobz0wO288Zjspe2xldCBFPXNbbysrXSxjPXNbbysrXTt0cnl7UT1FKFEpfWNhdGNoKHUpe2MuY2FsbCh0aGlzLHUpO2JyZWFrfX10cnl7Qz1EQS5jYWxsKHRoaXMsUSl9Y2F0Y2goRSl7cmV0dXJuIFByb21pc2UucmVqZWN0KEUpfWZvcihvPTAsZj1uLmxlbmd0aDtvPGY7KUM9Qy50aGVuKG5bbysrXSxuW28rK10pO3JldHVybiBDfWdldFVyaShJKXtJPUcodGhpcy5kZWZhdWx0cyxJKTtsZXQgdD0kKEkuYmFzZVVSTCxJLnVybCk7cmV0dXJuIFgodCxJLnBhcmFtcyxJLnBhcmFtc1NlcmlhbGl6ZXIpfX07Qi5mb3JFYWNoKFsiZGVsZXRlIiwiZ2V0IiwiaGVhZCIsIm9wdGlvbnMiXSxmdW5jdGlvbihJKXt4LnByb3RvdHlwZVtJXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnJlcXVlc3QoRyhlfHx7fSx7bWV0aG9kOkksdXJsOnQsZGF0YTooZXx8e30pLmRhdGF9KSl9fSk7Qi5mb3JFYWNoKFsicG9zdCIsInB1dCIsInBhdGNoIl0sZnVuY3Rpb24oSSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZnVuY3Rpb24oaSxyLHMpe3JldHVybiB0aGlzLnJlcXVlc3QoRyhzfHx7fSx7bWV0aG9kOkksaGVhZGVyczplP3siQ29udGVudC1UeXBlIjoibXVsdGlwYXJ0L2Zvcm0tZGF0YSJ9Ont9LHVybDppLGRhdGE6cn0pKX19eC5wcm90b3R5cGVbSV09dCgpLHgucHJvdG90eXBlW0krIkZvcm0iXT10KCEwKX0pO3ZhciBBQT14O3ZhciBQQT1jbGFzcyBBe2NvbnN0cnVjdG9yKEkpe2lmKHR5cGVvZiBJIT0iZnVuY3Rpb24iKXRocm93IG5ldyBUeXBlRXJyb3IoImV4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4iKTtsZXQgdDt0aGlzLnByb21pc2U9bmV3IFByb21pc2UoZnVuY3Rpb24oaSl7dD1pfSk7bGV0IGU9dGhpczt0aGlzLnByb21pc2UudGhlbihnPT57aWYoIWUuX2xpc3RlbmVycylyZXR1cm47bGV0IGk9ZS5fbGlzdGVuZXJzLmxlbmd0aDtmb3IoO2ktLSA+MDspZS5fbGlzdGVuZXJzW2ldKGcpO2UuX2xpc3RlbmVycz1udWxsfSksdGhpcy5wcm9taXNlLnRoZW49Zz0+e2xldCBpLHI9bmV3IFByb21pc2Uocz0+e2Uuc3Vic2NyaWJlKHMpLGk9c30pLnRoZW4oZyk7cmV0dXJuIHIuY2FuY2VsPWZ1bmN0aW9uKCl7ZS51bnN1YnNjcmliZShpKX0scn0sSShmdW5jdGlvbihpLHIscyl7ZS5yZWFzb258fChlLnJlYXNvbj1uZXcgSihpLHIscyksdChlLnJlYXNvbikpfSl9dGhyb3dJZlJlcXVlc3RlZCgpe2lmKHRoaXMucmVhc29uKXRocm93IHRoaXMucmVhc29ufXN1YnNjcmliZShJKXtpZih0aGlzLnJlYXNvbil7SSh0aGlzLnJlYXNvbik7cmV0dXJufXRoaXMuX2xpc3RlbmVycz90aGlzLl9saXN0ZW5lcnMucHVzaChJKTp0aGlzLl9saXN0ZW5lcnM9W0ldfXVuc3Vic2NyaWJlKEkpe2lmKCF0aGlzLl9saXN0ZW5lcnMpcmV0dXJuO2xldCB0PXRoaXMuX2xpc3RlbmVycy5pbmRleE9mKEkpO3QhPT0tMSYmdGhpcy5fbGlzdGVuZXJzLnNwbGljZSh0LDEpfXN0YXRpYyBzb3VyY2UoKXtsZXQgSTtyZXR1cm57dG9rZW46bmV3IEEoZnVuY3Rpb24oZyl7ST1nfSksY2FuY2VsOkl9fX0sYkk9UEE7ZnVuY3Rpb24gakEoQSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBBLmFwcGx5KG51bGwsdCl9fWZ1bmN0aW9uIFdBKEEpe3JldHVybiBCLmlzT2JqZWN0KEEpJiZBLmlzQXhpb3NFcnJvcj09PSEwfXZhciBaQT17Q29udGludWU6MTAwLFN3aXRjaGluZ1Byb3RvY29sczoxMDEsUHJvY2Vzc2luZzoxMDIsRWFybHlIaW50czoxMDMsT2s6MjAwLENyZWF0ZWQ6MjAxLEFjY2VwdGVkOjIwMixOb25BdXRob3JpdGF0aXZlSW5mb3JtYXRpb246MjAzLE5vQ29udGVudDoyMDQsUmVzZXRDb250ZW50OjIwNSxQYXJ0aWFsQ29udGVudDoyMDYsTXVsdGlTdGF0dXM6MjA3LEFscmVhZHlSZXBvcnRlZDoyMDgsSW1Vc2VkOjIyNixNdWx0aXBsZUNob2ljZXM6MzAwLE1vdmVkUGVybWFuZW50bHk6MzAxLEZvdW5kOjMwMixTZWVPdGhlcjozMDMsTm90TW9kaWZpZWQ6MzA0LFVzZVByb3h5OjMwNSxVbnVzZWQ6MzA2LFRlbXBvcmFyeVJlZGlyZWN0OjMwNyxQZXJtYW5lbnRSZWRpcmVjdDozMDgsQmFkUmVxdWVzdDo0MDAsVW5hdXRob3JpemVkOjQwMSxQYXltZW50UmVxdWlyZWQ6NDAyLEZvcmJpZGRlbjo0MDMsTm90Rm91bmQ6NDA0LE1ldGhvZE5vdEFsbG93ZWQ6NDA1LE5vdEFjY2VwdGFibGU6NDA2LFByb3h5QXV0aGVudGljYXRpb25SZXF1aXJlZDo0MDcsUmVxdWVzdFRpbWVvdXQ6NDA4LENvbmZsaWN0OjQwOSxHb25lOjQxMCxMZW5ndGhSZXF1aXJlZDo0MTEsUHJlY29uZGl0aW9uRmFpbGVkOjQxMixQYXlsb2FkVG9vTGFyZ2U6NDEzLFVyaVRvb0xvbmc6NDE0LFVuc3VwcG9ydGVkTWVkaWFUeXBlOjQxNSxSYW5nZU5vdFNhdGlzZmlhYmxlOjQxNixFeHBlY3RhdGlvbkZhaWxlZDo0MTcsSW1BVGVhcG90OjQxOCxNaXNkaXJlY3RlZFJlcXVlc3Q6NDIxLFVucHJvY2Vzc2FibGVFbnRpdHk6NDIyLExvY2tlZDo0MjMsRmFpbGVkRGVwZW5kZW5jeTo0MjQsVG9vRWFybHk6NDI1LFVwZ3JhZGVSZXF1aXJlZDo0MjYsUHJlY29uZGl0aW9uUmVxdWlyZWQ6NDI4LFRvb01hbnlSZXF1ZXN0czo0MjksUmVxdWVzdEhlYWRlckZpZWxkc1Rvb0xhcmdlOjQzMSxVbmF2YWlsYWJsZUZvckxlZ2FsUmVhc29uczo0NTEsSW50ZXJuYWxTZXJ2ZXJFcnJvcjo1MDAsTm90SW1wbGVtZW50ZWQ6NTAxLEJhZEdhdGV3YXk6NTAyLFNlcnZpY2VVbmF2YWlsYWJsZTo1MDMsR2F0ZXdheVRpbWVvdXQ6NTA0LEh0dHBWZXJzaW9uTm90U3VwcG9ydGVkOjUwNSxWYXJpYW50QWxzb05lZ290aWF0ZXM6NTA2LEluc3VmZmljaWVudFN0b3JhZ2U6NTA3LExvb3BEZXRlY3RlZDo1MDgsTm90RXh0ZW5kZWQ6NTEwLE5ldHdvcmtBdXRoZW50aWNhdGlvblJlcXVpcmVkOjUxMX07T2JqZWN0LmVudHJpZXMoWkEpLmZvckVhY2goKFtBLEldKT0+e1pBW0ldPUF9KTt2YXIgTUk9WkE7ZnVuY3Rpb24gcUkoQSl7bGV0IEk9bmV3IEFBKEEpLHQ9VyhBQS5wcm90b3R5cGUucmVxdWVzdCxJKTtyZXR1cm4gQi5leHRlbmQodCxBQS5wcm90b3R5cGUsSSx7YWxsT3duS2V5czohMH0pLEIuZXh0ZW5kKHQsSSxudWxsLHthbGxPd25LZXlzOiEwfSksdC5jcmVhdGU9ZnVuY3Rpb24oZyl7cmV0dXJuIHFJKEcoQSxnKSl9LHR9dmFyIGg9cUkoTyk7aC5BeGlvcz1BQTtoLkNhbmNlbGVkRXJyb3I9SjtoLkNhbmNlbFRva2VuPWJJO2guaXNDYW5jZWw9djtoLlZFUlNJT049dUE7aC50b0Zvcm1EYXRhPUw7aC5BeGlvc0Vycm9yPWw7aC5DYW5jZWw9aC5DYW5jZWxlZEVycm9yO2guYWxsPWZ1bmN0aW9uKEkpe3JldHVybiBQcm9taXNlLmFsbChJKX07aC5zcHJlYWQ9akE7aC5pc0F4aW9zRXJyb3I9V0E7aC5tZXJnZUNvbmZpZz1HO2guQXhpb3NIZWFkZXJzPW07aC5mb3JtVG9KU09OPUE9PmNBKEIuaXNIVE1MRm9ybShBKT9uZXcgRm9ybURhdGEoQSk6QSk7aC5nZXRBZGFwdGVyPWxBLmdldEFkYXB0ZXI7aC5IdHRwU3RhdHVzQ29kZT1NSTtoLmRlZmF1bHQ9aDt2YXIgZEE9aDt2YXJ7QXhpb3M6b2ksQXhpb3NFcnJvcjpCaSxDYW5jZWxlZEVycm9yOkNpLGlzQ2FuY2VsOnNpLENhbmNlbFRva2VuOlFpLFZFUlNJT046bmksYWxsOkVpLENhbmNlbDphaSxpc0F4aW9zRXJyb3I6Y2ksc3ByZWFkOmZpLHRvRm9ybURhdGE6bGksQXhpb3NIZWFkZXJzOkRpLEh0dHBTdGF0dXNDb2RlOnVpLGZvcm1Ub0pTT046aGksZ2V0QWRhcHRlcjpkaSxtZXJnZUNvbmZpZzp5aX09ZEE7dmFyIElBLGssWEEsVkE9e2Vudjp7ZW1zY3JpcHRlbl9ub3RpZnlfbWVtb3J5X2dyb3d0aDpmdW5jdGlvbihBKXtYQT1uZXcgVWludDhBcnJheShrLmV4cG9ydHMubWVtb3J5LmJ1ZmZlcil9fX0seUE9Y2xhc3N7aW5pdCgpe3JldHVybiBJQXx8KHR5cGVvZiBmZXRjaDwidSI/SUE9ZmV0Y2goImRhdGE6YXBwbGljYXRpb24vd2FzbTtiYXNlNjQsIitLSSkudGhlbihJPT5JLmFycmF5QnVmZmVyKCkpLnRoZW4oST0+V2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoSSxWQSkpLnRoZW4odGhpcy5faW5pdCk6SUE9V2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoQnVmZmVyLmZyb20oS0ksImJhc2U2NCIpLFZBKS50aGVuKHRoaXMuX2luaXQpLElBKX1faW5pdChJKXtrPUkuaW5zdGFuY2UsVkEuZW52LmVtc2NyaXB0ZW5fbm90aWZ5X21lbW9yeV9ncm93dGgoMCl9ZGVjb2RlKEksdD0wKXtpZighayl0aHJvdyBuZXcgRXJyb3IoIlpTVEREZWNvZGVyOiBBd2FpdCAuaW5pdCgpIGJlZm9yZSBkZWNvZGluZy4iKTtsZXQgZT1JLmJ5dGVMZW5ndGgsZz1rLmV4cG9ydHMubWFsbG9jKGUpO1hBLnNldChJLGcpLHQ9dHx8TnVtYmVyKGsuZXhwb3J0cy5aU1REX2ZpbmREZWNvbXByZXNzZWRTaXplKGcsZSkpO2xldCBpPWsuZXhwb3J0cy5tYWxsb2ModCkscj1rLmV4cG9ydHMuWlNURF9kZWNvbXByZXNzKGksdCxnLGUpLHM9WEEuc2xpY2UoaSxpK3IpO3JldHVybiBrLmV4cG9ydHMuZnJlZShnKSxrLmV4cG9ydHMuZnJlZShpKSxzfX0sS0k9IkFHRnpiUUVBQUFBQmJnNWdBMzkvZndGL1lBRi9BWDlnQW45L0FHQUJmd0JnQlg5L2YzOS9BWDlnQTM5L2Z3QmdCSDkvZjM4QmYyQUFBWDlnQW45L0FYOWdCMzkvZjM5L2YzOEJmMkFDZjM4QmZtQUlmMzkvZjM5L2YzOEJmMkFGZjM5L2YzOEFZQTUvZjM5L2YzOS9mMzkvZjM5L2Z3Ri9BaWNCQTJWdWRoOWxiWE5qY21sd2RHVnVYMjV2ZEdsbWVWOXRaVzF2Y25sZlozSnZkM1JvQUFNREl5SUhBQUFCQVFNSEF3RUFDUVFBQlFFSUNBRUZCZ1FFQkFNR0FBQUtBQVVMREEwR0JBVUJjQUVCQVFVSEFRR0FBb0NBQWdZSUFYOEJRWUNqQkFzSHJnRUxCbTFsYlc5eWVRSUFCbTFoYkd4dll3QUZCR1p5WldVQUJneGFVMVJFWDJselJYSnliM0lBRWhsYVUxUkVYMlpwYm1SRVpXTnZiWEJ5WlhOelpXUlRhWHBsQUJ3UFdsTlVSRjlrWldOdmJYQnlaWE56QUNJWlgxOXBibVJwY21WamRGOW1kVzVqZEdsdmJsOTBZV0pzWlFFQUVGOWZaWEp5Ym05ZmJHOWpZWFJwYjI0QUFRbHpkR0ZqYTFOaGRtVUFCd3h6ZEdGamExSmxjM1J2Y21VQUNBcHpkR0ZqYTBGc2JHOWpBQWtLaS9JQklnVUFRWVFmQ3pNQkFYOGdBZ1JBSUFBaEF3TkFJQU1nQVMwQUFEb0FBQ0FEUVFGcUlRTWdBVUVCYWlFQklBSkJBV3NpQWcwQUN3c2dBQXNwQVFGL0lBSUVRQ0FBSVFNRFFDQURJQUU2QUFBZ0EwRUJhaUVESUFKQkFXc2lBZzBBQ3dzZ0FBdHNBUUovUVlBZktBSUFJZ0VnQUVFSGFrRjRjU0lDYWlFQUFrQWdBa0VBSUFBZ0FVMGJEUUFnQUQ4QVFSQjBTd1JBSUFBL0FFRVFkR3RCLy84RGFrRVFka0FBUVg5R0JIOUJBQVZCQUJBQVFRRUxSUTBCQzBHQUh5QUFOZ0lBSUFFUEMwR0VIMEV3TmdJQVFYOEx1U2NCQzM4akFFRVFheUlLSkFBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBQkI5QUZOQkVCQmlCOG9BZ0FpQmtFUUlBQkJDMnBCZUhFZ0FFRUxTUnNpQlVFRGRpSUFkaUlCUVFOeEJFQUNRQ0FCUVg5elFRRnhJQUJxSWdKQkEzUWlBVUd3SDJvaUFDQUJRYmdmYWlnQ0FDSUJLQUlJSWdSR0JFQkJpQjhnQmtGK0lBSjNjVFlDQUF3QkN5QUVJQUEyQWd3Z0FDQUVOZ0lJQ3lBQlFRaHFJUUFnQVNBQ1FRTjBJZ0pCQTNJMkFnUWdBU0FDYWlJQklBRW9BZ1JCQVhJMkFnUU1Ed3NnQlVHUUh5Z0NBQ0lIVFEwQklBRUVRQUpBUVFJZ0FIUWlBa0VBSUFKcmNpQUJJQUIwY1dnaUFVRURkQ0lBUWJBZmFpSUNJQUJCdUI5cUtBSUFJZ0FvQWdnaUJFWUVRRUdJSHlBR1FYNGdBWGR4SWdZMkFnQU1BUXNnQkNBQ05nSU1JQUlnQkRZQ0NBc2dBQ0FGUVFOeU5nSUVJQUFnQldvaUNDQUJRUU4wSWdFZ0JXc2lCRUVCY2pZQ0JDQUFJQUZxSUFRMkFnQWdCd1JBSUFkQmVIRkJzQjlxSVFGQm5COG9BZ0FoQWdKL0lBWkJBU0FIUVFOMmRDSURjVVVFUUVHSUh5QURJQVp5TmdJQUlBRU1BUXNnQVNnQ0NBc2hBeUFCSUFJMkFnZ2dBeUFDTmdJTUlBSWdBVFlDRENBQ0lBTTJBZ2dMSUFCQkNHb2hBRUdjSHlBSU5nSUFRWkFmSUFRMkFnQU1Ed3RCakI4b0FnQWlDMFVOQVNBTGFFRUNkRUc0SVdvb0FnQWlBaWdDQkVGNGNTQUZheUVESUFJaEFRTkFBa0FnQVNnQ0VDSUFSUVJBSUFFb0FoUWlBRVVOQVFzZ0FDZ0NCRUY0Y1NBRmF5SUJJQU1nQVNBRFNTSUJHeUVESUFBZ0FpQUJHeUVDSUFBaEFRd0JDd3NnQWlnQ0dDRUpJQUlnQWlnQ0RDSUVSd1JBUVpnZktBSUFHaUFDS0FJSUlnQWdCRFlDRENBRUlBQTJBZ2dNRGdzZ0FrRVVhaUlCS0FJQUlnQkZCRUFnQWlnQ0VDSUFSUTBESUFKQkVHb2hBUXNEUUNBQklRZ2dBQ0lFUVJScUlnRW9BZ0FpQUEwQUlBUkJFR29oQVNBRUtBSVFJZ0FOQUFzZ0NFRUFOZ0lBREEwTFFYOGhCU0FBUWI5L1N3MEFJQUJCQzJvaUFFRjRjU0VGUVl3ZktBSUFJZ2hGRFFCQkFDQUZheUVEQWtBQ1FBSkFBbjlCQUNBRlFZQUNTUTBBR2tFZklBVkIvLy8vQjBzTkFCb2dCVUVtSUFCQkNIWm5JZ0JyZGtFQmNTQUFRUUYwYTBFK2Fnc2lCMEVDZEVHNElXb29BZ0FpQVVVRVFFRUFJUUFNQVF0QkFDRUFJQVZCR1NBSFFRRjJhMEVBSUFkQkgwY2JkQ0VDQTBBQ1FDQUJLQUlFUVhoeElBVnJJZ1lnQTA4TkFDQUJJUVFnQmlJRERRQkJBQ0VESUFFaEFBd0RDeUFBSUFFb0FoUWlCaUFHSUFFZ0FrRWRka0VFY1dvb0FoQWlBVVliSUFBZ0Joc2hBQ0FDUVFGMElRSWdBUTBBQ3dzZ0FDQUVja1VFUUVFQUlRUkJBaUFIZENJQVFRQWdBR3R5SUFoeElnQkZEUU1nQUdoQkFuUkJ1Q0ZxS0FJQUlRQUxJQUJGRFFFTEEwQWdBQ2dDQkVGNGNTQUZheUlDSUFOSklRRWdBaUFESUFFYklRTWdBQ0FFSUFFYklRUWdBQ2dDRUNJQkJIOGdBUVVnQUNnQ0ZBc2lBQTBBQ3dzZ0JFVU5BQ0FEUVpBZktBSUFJQVZyVHcwQUlBUW9BaGdoQnlBRUlBUW9BZ3dpQWtjRVFFR1lIeWdDQUJvZ0JDZ0NDQ0lBSUFJMkFnd2dBaUFBTmdJSURBd0xJQVJCRkdvaUFTZ0NBQ0lBUlFSQUlBUW9BaEFpQUVVTkF5QUVRUkJxSVFFTEEwQWdBU0VHSUFBaUFrRVVhaUlCS0FJQUlnQU5BQ0FDUVJCcUlRRWdBaWdDRUNJQURRQUxJQVpCQURZQ0FBd0xDeUFGUVpBZktBSUFJZ1JOQkVCQm5COG9BZ0FoQUFKQUlBUWdCV3NpQVVFUVR3UkFJQUFnQldvaUFpQUJRUUZ5TmdJRUlBQWdCR29nQVRZQ0FDQUFJQVZCQTNJMkFnUU1BUXNnQUNBRVFRTnlOZ0lFSUFBZ0JHb2lBU0FCS0FJRVFRRnlOZ0lFUVFBaEFrRUFJUUVMUVpBZklBRTJBZ0JCbkI4Z0FqWUNBQ0FBUVFocUlRQU1EUXNnQlVHVUh5Z0NBQ0lDU1FSQVFaUWZJQUlnQldzaUFUWUNBRUdnSDBHZ0h5Z0NBQ0lBSUFWcUlnSTJBZ0FnQWlBQlFRRnlOZ0lFSUFBZ0JVRURjallDQkNBQVFRaHFJUUFNRFF0QkFDRUFJQVZCTDJvaUF3Si9RZUFpS0FJQUJFQkI2Q0lvQWdBTUFRdEI3Q0pDZnpjQ0FFSGtJa0tBb0lDQWdJQUVOd0lBUWVBaUlBcEJER3BCY0hGQjJLclZxZ1Z6TmdJQVFmUWlRUUEyQWdCQnhDSkJBRFlDQUVHQUlBc2lBV29pQmtFQUlBRnJJZ2h4SWdFZ0JVME5ERUhBSWlnQ0FDSUVCRUJCdUNJb0FnQWlCeUFCYWlJSklBZE5JQVFnQ1VseURRMExBa0JCeENJdEFBQkJCSEZGQkVBQ1FBSkFBa0FDUUVHZ0h5Z0NBQ0lFQkVCQnlDSWhBQU5BSUFRZ0FDZ0NBQ0lIVHdSQUlBY2dBQ2dDQkdvZ0JFc05Bd3NnQUNnQ0NDSUFEUUFMQzBFQUVBUWlBa0YvUmcwRElBRWhCa0hrSWlnQ0FDSUFRUUZySWdRZ0FuRUVRQ0FCSUFKcklBSWdCR3BCQUNBQWEzRnFJUVlMSUFVZ0JrOE5BMEhBSWlnQ0FDSUFCRUJCdUNJb0FnQWlCQ0FHYWlJSUlBUk5JQUFnQ0VseURRUUxJQVlRQkNJQUlBSkhEUUVNQlFzZ0JpQUNheUFJY1NJR0VBUWlBaUFBS0FJQUlBQW9BZ1JxUmcwQklBSWhBQXNnQUVGL1JnMEJJQVZCTUdvZ0JrMEVRQ0FBSVFJTUJBdEI2Q0lvQWdBaUFpQURJQVpyYWtFQUlBSnJjU0lDRUFSQmYwWU5BU0FDSUFacUlRWWdBQ0VDREFNTElBSkJmMGNOQWd0QnhDSkJ4Q0lvQWdCQkJISTJBZ0FMSUFFUUJDSUNRWDlHUVFBUUJDSUFRWDlHY2lBQUlBSk5jZzBGSUFBZ0Ftc2lCaUFGUVNocVRRMEZDMEc0SWtHNElpZ0NBQ0FHYWlJQU5nSUFRYndpS0FJQUlBQkpCRUJCdkNJZ0FEWUNBQXNDUUVHZ0h5Z0NBQ0lEQkVCQnlDSWhBQU5BSUFJZ0FDZ0NBQ0lCSUFBb0FnUWlCR3BHRFFJZ0FDZ0NDQ0lBRFFBTERBUUxRWmdmS0FJQUlnQkJBQ0FBSUFKTkcwVUVRRUdZSHlBQ05nSUFDMEVBSVFCQnpDSWdCallDQUVISUlpQUNOZ0lBUWFnZlFYODJBZ0JCckI5QjRDSW9BZ0EyQWdCQjFDSkJBRFlDQUFOQUlBQkJBM1FpQVVHNEgyb2dBVUd3SDJvaUJEWUNBQ0FCUWJ3ZmFpQUVOZ0lBSUFCQkFXb2lBRUVnUncwQUMwR1VIeUFHUVNocklnQkJlQ0FDYTBFSGNTSUJheUlFTmdJQVFhQWZJQUVnQW1vaUFUWUNBQ0FCSUFSQkFYSTJBZ1FnQUNBQ2FrRW9OZ0lFUWFRZlFmQWlLQUlBTmdJQURBUUxJQUlnQTAwZ0FTQURTM0lOQWlBQUtBSU1RUWh4RFFJZ0FDQUVJQVpxTmdJRVFhQWZJQU5CZUNBRGEwRUhjU0lBYWlJQk5nSUFRWlFmUVpRZktBSUFJQVpxSWdJZ0FHc2lBRFlDQUNBQklBQkJBWEkyQWdRZ0FpQURha0VvTmdJRVFhUWZRZkFpS0FJQU5nSUFEQU1MUVFBaEJBd0tDMEVBSVFJTUNBdEJtQjhvQWdBZ0Frc0VRRUdZSHlBQ05nSUFDeUFDSUFacUlRRkJ5Q0loQUFKQUFrQUNRQU5BSUFFZ0FDZ0NBRWNFUUNBQUtBSUlJZ0FOQVF3Q0N3c2dBQzBBREVFSWNVVU5BUXRCeUNJaEFBTkFJQU1nQUNnQ0FDSUJUd1JBSUFFZ0FDZ0NCR29pQkNBRFN3MERDeUFBS0FJSUlRQU1BQXNBQ3lBQUlBSTJBZ0FnQUNBQUtBSUVJQVpxTmdJRUlBSkJlQ0FDYTBFSGNXb2lCeUFGUVFOeU5nSUVJQUZCZUNBQmEwRUhjV29pQmlBRklBZHFJZ1ZySVFBZ0F5QUdSZ1JBUWFBZklBVTJBZ0JCbEI5QmxCOG9BZ0FnQUdvaUFEWUNBQ0FGSUFCQkFYSTJBZ1FNQ0F0Qm5COG9BZ0FnQmtZRVFFR2NIeUFGTmdJQVFaQWZRWkFmS0FJQUlBQnFJZ0EyQWdBZ0JTQUFRUUZ5TmdJRUlBQWdCV29nQURZQ0FBd0lDeUFHS0FJRUlnTkJBM0ZCQVVjTkJpQURRWGh4SVFrZ0EwSC9BVTBFUUNBR0tBSU1JZ0VnQmlnQ0NDSUNSZ1JBUVlnZlFZZ2ZLQUlBUVg0Z0EwRURkbmR4TmdJQURBY0xJQUlnQVRZQ0RDQUJJQUkyQWdnTUJnc2dCaWdDR0NFSUlBWWdCaWdDRENJQ1J3UkFJQVlvQWdnaUFTQUNOZ0lNSUFJZ0FUWUNDQXdGQ3lBR1FSUnFJZ0VvQWdBaUEwVUVRQ0FHS0FJUUlnTkZEUVFnQmtFUWFpRUJDd05BSUFFaEJDQURJZ0pCRkdvaUFTZ0NBQ0lERFFBZ0FrRVFhaUVCSUFJb0FoQWlBdzBBQ3lBRVFRQTJBZ0FNQkF0QmxCOGdCa0VvYXlJQVFYZ2dBbXRCQjNFaUFXc2lDRFlDQUVHZ0h5QUJJQUpxSWdFMkFnQWdBU0FJUVFGeU5nSUVJQUFnQW1wQktEWUNCRUdrSDBId0lpZ0NBRFlDQUNBRElBUkJKeUFFYTBFSGNXcEJMMnNpQUNBQUlBTkJFR3BKR3lJQlFSczJBZ1FnQVVIUUlpa0NBRGNDRUNBQlFjZ2lLUUlBTndJSVFkQWlJQUZCQ0dvMkFnQkJ6Q0lnQmpZQ0FFSElJaUFDTmdJQVFkUWlRUUEyQWdBZ0FVRVlhaUVBQTBBZ0FFRUhOZ0lFSUFCQkNHb2dBRUVFYWlFQUlBUkpEUUFMSUFFZ0EwWU5BQ0FCSUFFb0FnUkJmbkUyQWdRZ0F5QUJJQU5ySWdKQkFYSTJBZ1FnQVNBQ05nSUFJQUpCL3dGTkJFQWdBa0Y0Y1VHd0gyb2hBQUovUVlnZktBSUFJZ0ZCQVNBQ1FRTjJkQ0lDY1VVRVFFR0lIeUFCSUFKeU5nSUFJQUFNQVFzZ0FDZ0NDQXNoQVNBQUlBTTJBZ2dnQVNBRE5nSU1JQU1nQURZQ0RDQURJQUUyQWdnTUFRdEJIeUVBSUFKQi8vLy9CMDBFUUNBQ1FTWWdBa0VJZG1jaUFHdDJRUUZ4SUFCQkFYUnJRVDVxSVFBTElBTWdBRFlDSENBRFFnQTNBaEFnQUVFQ2RFRzRJV29oQVFKQUFrQkJqQjhvQWdBaUJFRUJJQUIwSWdaeFJRUkFRWXdmSUFRZ0JuSTJBZ0FnQVNBRE5nSUFEQUVMSUFKQkdTQUFRUUYyYTBFQUlBQkJIMGNiZENFQUlBRW9BZ0FoQkFOQUlBUWlBU2dDQkVGNGNTQUNSZzBDSUFCQkhYWWhCQ0FBUVFGMElRQWdBU0FFUVFSeGFpSUdLQUlRSWdRTkFBc2dCaUFETmdJUUN5QURJQUUyQWhnZ0F5QUROZ0lNSUFNZ0F6WUNDQXdCQ3lBQktBSUlJZ0FnQXpZQ0RDQUJJQU0yQWdnZ0EwRUFOZ0lZSUFNZ0FUWUNEQ0FESUFBMkFnZ0xRWlFmS0FJQUlnQWdCVTBOQUVHVUh5QUFJQVZySWdFMkFnQkJvQjlCb0I4b0FnQWlBQ0FGYWlJQ05nSUFJQUlnQVVFQmNqWUNCQ0FBSUFWQkEzSTJBZ1FnQUVFSWFpRUFEQWdMUVlRZlFUQTJBZ0JCQUNFQURBY0xRUUFoQWdzZ0NFVU5BQUpBSUFZb0Fod2lBVUVDZEVHNElXb2lCQ2dDQUNBR1JnUkFJQVFnQWpZQ0FDQUNEUUZCakI5QmpCOG9BZ0JCZmlBQmQzRTJBZ0FNQWdzZ0NFRVFRUlFnQ0NnQ0VDQUdSaHRxSUFJMkFnQWdBa1VOQVFzZ0FpQUlOZ0lZSUFZb0FoQWlBUVJBSUFJZ0FUWUNFQ0FCSUFJMkFoZ0xJQVlvQWhRaUFVVU5BQ0FDSUFFMkFoUWdBU0FDTmdJWUN5QUFJQWxxSVFBZ0JpQUphaUlHS0FJRUlRTUxJQVlnQTBGK2NUWUNCQ0FGSUFCQkFYSTJBZ1FnQUNBRmFpQUFOZ0lBSUFCQi93Rk5CRUFnQUVGNGNVR3dIMm9oQVFKL1FZZ2ZLQUlBSWdKQkFTQUFRUU4yZENJQWNVVUVRRUdJSHlBQUlBSnlOZ0lBSUFFTUFRc2dBU2dDQ0FzaEFDQUJJQVUyQWdnZ0FDQUZOZ0lNSUFVZ0FUWUNEQ0FGSUFBMkFnZ01BUXRCSHlFRElBQkIvLy8vQjAwRVFDQUFRU1lnQUVFSWRtY2lBV3QyUVFGeElBRkJBWFJyUVQ1cUlRTUxJQVVnQXpZQ0hDQUZRZ0EzQWhBZ0EwRUNkRUc0SVdvaEFRSkFBa0JCakI4b0FnQWlBa0VCSUFOMElnUnhSUVJBUVl3ZklBSWdCSEkyQWdBZ0FTQUZOZ0lBREFFTElBQkJHU0FEUVFGMmEwRUFJQU5CSDBjYmRDRURJQUVvQWdBaEFnTkFJQUlpQVNnQ0JFRjRjU0FBUmcwQ0lBTkJIWFloQWlBRFFRRjBJUU1nQVNBQ1FRUnhhaUlFS0FJUUlnSU5BQXNnQkNBRk5nSVFDeUFGSUFFMkFoZ2dCU0FGTmdJTUlBVWdCVFlDQ0F3QkN5QUJLQUlJSWdBZ0JUWUNEQ0FCSUFVMkFnZ2dCVUVBTmdJWUlBVWdBVFlDRENBRklBQTJBZ2dMSUFkQkNHb2hBQXdDQ3dKQUlBZEZEUUFDUUNBRUtBSWNJZ0JCQW5SQnVDRnFJZ0VvQWdBZ0JFWUVRQ0FCSUFJMkFnQWdBZzBCUVl3ZklBaEJmaUFBZDNFaUNEWUNBQXdDQ3lBSFFSQkJGQ0FIS0FJUUlBUkdHMm9nQWpZQ0FDQUNSUTBCQ3lBQ0lBYzJBaGdnQkNnQ0VDSUFCRUFnQWlBQU5nSVFJQUFnQWpZQ0dBc2dCQ2dDRkNJQVJRMEFJQUlnQURZQ0ZDQUFJQUkyQWhnTEFrQWdBMEVQVFFSQUlBUWdBeUFGYWlJQVFRTnlOZ0lFSUFBZ0JHb2lBQ0FBS0FJRVFRRnlOZ0lFREFFTElBUWdCVUVEY2pZQ0JDQUVJQVZxSWdJZ0EwRUJjallDQkNBQ0lBTnFJQU0yQWdBZ0EwSC9BVTBFUUNBRFFYaHhRYkFmYWlFQUFuOUJpQjhvQWdBaUFVRUJJQU5CQTNaMElnTnhSUVJBUVlnZklBRWdBM0kyQWdBZ0FBd0JDeUFBS0FJSUN5RUJJQUFnQWpZQ0NDQUJJQUkyQWd3Z0FpQUFOZ0lNSUFJZ0FUWUNDQXdCQzBFZklRQWdBMEgvLy84SFRRUkFJQU5CSmlBRFFRaDJaeUlBYTNaQkFYRWdBRUVCZEd0QlBtb2hBQXNnQWlBQU5nSWNJQUpDQURjQ0VDQUFRUUowUWJnaGFpRUJBa0FDUUNBSVFRRWdBSFFpQm5GRkJFQkJqQjhnQmlBSWNqWUNBQ0FCSUFJMkFnQU1BUXNnQTBFWklBQkJBWFpyUVFBZ0FFRWZSeHQwSVFBZ0FTZ0NBQ0VGQTBBZ0JTSUJLQUlFUVhoeElBTkdEUUlnQUVFZGRpRUdJQUJCQVhRaEFDQUJJQVpCQkhGcUlnWW9BaEFpQlEwQUN5QUdJQUkyQWhBTElBSWdBVFlDR0NBQ0lBSTJBZ3dnQWlBQ05nSUlEQUVMSUFFb0FnZ2lBQ0FDTmdJTUlBRWdBallDQ0NBQ1FRQTJBaGdnQWlBQk5nSU1JQUlnQURZQ0NBc2dCRUVJYWlFQURBRUxBa0FnQ1VVTkFBSkFJQUlvQWh3aUFFRUNkRUc0SVdvaUFTZ0NBQ0FDUmdSQUlBRWdCRFlDQUNBRURRRkJqQjhnQzBGK0lBQjNjVFlDQUF3Q0N5QUpRUkJCRkNBSktBSVFJQUpHRzJvZ0JEWUNBQ0FFUlEwQkN5QUVJQWsyQWhnZ0FpZ0NFQ0lBQkVBZ0JDQUFOZ0lRSUFBZ0JEWUNHQXNnQWlnQ0ZDSUFSUTBBSUFRZ0FEWUNGQ0FBSUFRMkFoZ0xBa0FnQTBFUFRRUkFJQUlnQXlBRmFpSUFRUU55TmdJRUlBQWdBbW9pQUNBQUtBSUVRUUZ5TmdJRURBRUxJQUlnQlVFRGNqWUNCQ0FDSUFWcUlnUWdBMEVCY2pZQ0JDQURJQVJxSUFNMkFnQWdCd1JBSUFkQmVIRkJzQjlxSVFCQm5COG9BZ0FoQVFKL1FRRWdCMEVEZG5RaUJTQUdjVVVFUUVHSUh5QUZJQVp5TmdJQUlBQU1BUXNnQUNnQ0NBc2hCaUFBSUFFMkFnZ2dCaUFCTmdJTUlBRWdBRFlDRENBQklBWTJBZ2dMUVp3ZklBUTJBZ0JCa0I4Z0F6WUNBQXNnQWtFSWFpRUFDeUFLUVJCcUpBQWdBQXZTQ3dFSGZ3SkFJQUJGRFFBZ0FFRUlheUlDSUFCQkJHc29BZ0FpQVVGNGNTSUFhaUVGQWtBZ0FVRUJjUTBBSUFGQkEzRkZEUUVnQWlBQ0tBSUFJZ0ZySWdKQm1COG9BZ0JKRFFFZ0FDQUJhaUVBQWtBQ1FFR2NIeWdDQUNBQ1J3UkFJQUZCL3dGTkJFQWdBVUVEZGlFRUlBSW9BZ3dpQVNBQ0tBSUlJZ05HQkVCQmlCOUJpQjhvQWdCQmZpQUVkM0UyQWdBTUJRc2dBeUFCTmdJTUlBRWdBellDQ0F3RUN5QUNLQUlZSVFZZ0FpQUNLQUlNSWdGSEJFQWdBaWdDQ0NJRElBRTJBZ3dnQVNBRE5nSUlEQU1MSUFKQkZHb2lCQ2dDQUNJRFJRUkFJQUlvQWhBaUEwVU5BaUFDUVJCcUlRUUxBMEFnQkNFSElBTWlBVUVVYWlJRUtBSUFJZ01OQUNBQlFSQnFJUVFnQVNnQ0VDSUREUUFMSUFkQkFEWUNBQXdDQ3lBRktBSUVJZ0ZCQTNGQkEwY05Ba0dRSHlBQU5nSUFJQVVnQVVGK2NUWUNCQ0FDSUFCQkFYSTJBZ1FnQlNBQU5nSUFEd3RCQUNFQkN5QUdSUTBBQWtBZ0FpZ0NIQ0lEUVFKMFFiZ2hhaUlFS0FJQUlBSkdCRUFnQkNBQk5nSUFJQUVOQVVHTUgwR01IeWdDQUVGK0lBTjNjVFlDQUF3Q0N5QUdRUkJCRkNBR0tBSVFJQUpHRzJvZ0FUWUNBQ0FCUlEwQkN5QUJJQVkyQWhnZ0FpZ0NFQ0lEQkVBZ0FTQUROZ0lRSUFNZ0FUWUNHQXNnQWlnQ0ZDSURSUTBBSUFFZ0F6WUNGQ0FESUFFMkFoZ0xJQUlnQlU4TkFDQUZLQUlFSWdGQkFYRkZEUUFDUUFKQUFrQUNRQ0FCUVFKeFJRUkFRYUFmS0FJQUlBVkdCRUJCb0I4Z0FqWUNBRUdVSDBHVUh5Z0NBQ0FBYWlJQU5nSUFJQUlnQUVFQmNqWUNCQ0FDUVp3ZktBSUFSdzBHUVpBZlFRQTJBZ0JCbkI5QkFEWUNBQThMUVp3ZktBSUFJQVZHQkVCQm5COGdBallDQUVHUUgwR1FIeWdDQUNBQWFpSUFOZ0lBSUFJZ0FFRUJjallDQkNBQUlBSnFJQUEyQWdBUEN5QUJRWGh4SUFCcUlRQWdBVUgvQVUwRVFDQUJRUU4ySVFRZ0JTZ0NEQ0lCSUFVb0FnZ2lBMFlFUUVHSUgwR0lIeWdDQUVGK0lBUjNjVFlDQUF3RkN5QURJQUUyQWd3Z0FTQUROZ0lJREFRTElBVW9BaGdoQmlBRklBVW9BZ3dpQVVjRVFFR1lIeWdDQUJvZ0JTZ0NDQ0lESUFFMkFnd2dBU0FETmdJSURBTUxJQVZCRkdvaUJDZ0NBQ0lEUlFSQUlBVW9BaEFpQTBVTkFpQUZRUkJxSVFRTEEwQWdCQ0VISUFNaUFVRVVhaUlFS0FJQUlnTU5BQ0FCUVJCcUlRUWdBU2dDRUNJRERRQUxJQWRCQURZQ0FBd0NDeUFGSUFGQmZuRTJBZ1FnQWlBQVFRRnlOZ0lFSUFBZ0Ftb2dBRFlDQUF3REMwRUFJUUVMSUFaRkRRQUNRQ0FGS0FJY0lnTkJBblJCdUNGcUlnUW9BZ0FnQlVZRVFDQUVJQUUyQWdBZ0FRMEJRWXdmUVl3ZktBSUFRWDRnQTNkeE5nSUFEQUlMSUFaQkVFRVVJQVlvQWhBZ0JVWWJhaUFCTmdJQUlBRkZEUUVMSUFFZ0JqWUNHQ0FGS0FJUUlnTUVRQ0FCSUFNMkFoQWdBeUFCTmdJWUN5QUZLQUlVSWdORkRRQWdBU0FETmdJVUlBTWdBVFlDR0FzZ0FpQUFRUUZ5TmdJRUlBQWdBbW9nQURZQ0FDQUNRWndmS0FJQVJ3MEFRWkFmSUFBMkFnQVBDeUFBUWY4QlRRUkFJQUJCZUhGQnNCOXFJUUVDZjBHSUh5Z0NBQ0lEUVFFZ0FFRURkblFpQUhGRkJFQkJpQjhnQUNBRGNqWUNBQ0FCREFFTElBRW9BZ2dMSVFBZ0FTQUNOZ0lJSUFBZ0FqWUNEQ0FDSUFFMkFnd2dBaUFBTmdJSUR3dEJIeUVESUFCQi8vLy9CMDBFUUNBQVFTWWdBRUVJZG1jaUFXdDJRUUZ4SUFGQkFYUnJRVDVxSVFNTElBSWdBellDSENBQ1FnQTNBaEFnQTBFQ2RFRzRJV29oQVFKQUFrQUNRRUdNSHlnQ0FDSUVRUUVnQTNRaUIzRkZCRUJCakI4Z0JDQUhjallDQUNBQklBSTJBZ0FnQWlBQk5nSVlEQUVMSUFCQkdTQURRUUYyYTBFQUlBTkJIMGNiZENFRElBRW9BZ0FoQVFOQUlBRWlCQ2dDQkVGNGNTQUFSZzBDSUFOQkhYWWhBU0FEUVFGMElRTWdCQ0FCUVFSeGFpSUhRUkJxS0FJQUlnRU5BQXNnQnlBQ05nSVFJQUlnQkRZQ0dBc2dBaUFDTmdJTUlBSWdBallDQ0F3QkN5QUVLQUlJSWdBZ0FqWUNEQ0FFSUFJMkFnZ2dBa0VBTmdJWUlBSWdCRFlDRENBQ0lBQTJBZ2dMUWFnZlFhZ2ZLQUlBUVFGcklnQkJmeUFBR3pZQ0FBc0xCQUFqQUFzR0FDQUFKQUFMRUFBakFDQUFhMEZ3Y1NJQUpBQWdBQXRLQVFGL0lBQWdBVWtFUUNBQUlBRWdBaEFDRHdzZ0FnUkFJQUFnQW1vaEF5QUJJQUpxSVFFRFFDQURRUUZySWdNZ0FVRUJheUlCTFFBQU9nQUFJQUpCQVdzaUFnMEFDd3NnQUF2OURnSVJmd0YrSXdCQk1Hc2lCeVFBUWJoL0lRZ0NRQ0FGUlEwQUlBUXNBQUFpQ1VIL0FYRWhDd0pBSUFsQkFFZ0VRQ0FMUWY0QWEwRUJkaUlHSUFWUERRSkJiQ0VJSUF0Qi93QnJJZ3RCL3dGTERRSWdCRUVCYWlFSVFRQWhCUU5BSUFVZ0MwOEVRQ0FMSVFnZ0JpRUxEQU1GSUFBZ0JXb2dDQ0FGUVFGMmFpSUVMUUFBUVFSMk9nQUFJQUFnQlVFQmNtb2dCQzBBQUVFUGNUb0FBQ0FGUVFKcUlRVU1BUXNBQ3dBTElBVWdDMDBOQVNBSFFmOEJOZ0lFSUFZZ0IwRUVhaUFIUVFocUlBUkJBV29pRGlBTEVBd2lCRUdJZjBzRVFDQUVJUWdNQWd0QlZDRUlJQWNvQWdnaUVFRUdTdzBCSUFjb0FnUWlFVUVCZENJSlFRSnFyVUlCSUJDdGhpSVlRUUVnRUhRaURVRUJhaUlGclVJQ2hueDhRZ3Q4UXZ6Ly8vLy8vLy8vL3dDRFF1UUNWZzBCUVZJaENDQVJRZjhCU3cwQklBMUJmM05CQW5SQjVBSnFyU0FSUVFGcUloVkJBWFN0SUJoOFFnaDhWQTBCSUFzZ0JHc2hGaUFFSUE1cUlSY2dCa0dBQkdvaUVpQUZRUUowYWlJUklBbHFRUUpxSVE0Z0JrR0VCR29oRTBHQWdBSWdFSFJCRUhZaENVRUFJUVZCQVNFUElBMUJBV3NpRkNFS0EwQWdCU0FWUmtVRVFBSkFJQVlnQlVFQmRDSUlhaThCQUNJRVFmLy9BMFlFUUNBVElBcEJBblJxSUFVNkFBSWdDa0VCYXlFS1FRRWhCQXdCQ3lBUFFRQWdDU0FFd1VvYklROExJQWdnRVdvZ0JEc0JBQ0FGUVFGcUlRVU1BUXNMSUFZZ0R6c0JnZ1FnQmlBUU93R0FCQUpBSUFvZ0ZFWUVRQ0FOUVFOMklRaENBQ0VZUVFBaER3TkFJQXdnRlVZRVFDQUlJQTFCQVhacVFRTnFJZ2xCQVhRaENFRUFJUVJCQUNFS0EwQkJBQ0VGSUFvZ0RVOE5CQU5BSUFWQkFrWkZCRUFnRXlBRklBbHNJQVJxSUJSeFFRSjBhaUFPSUFVZ0NtcHFMUUFBT2dBQ0lBVkJBV29oQlF3QkN3c2dDa0VDYWlFS0lBUWdDR29nRkhFaEJBd0FDd0FGSUFZZ0RFRUJkR291QVFBaENTQU9JQTlxSWdRZ0dEY0FBRUVJSVFVRFFDQUZJQWxPUlFSQUlBUWdCV29nR0RjQUFDQUZRUWhxSVFVTUFRc0xJQmhDZ1lLRWlKQ2d3SUFCZkNFWUlBeEJBV29oRENBSklBOXFJUThNQVFzQUN3QUxJQTFCQTNZZ0RVRUJkbXBCQTJvaENFRUFJUVVEUUNBTUlCVkdSUVJBUVFBaENTQUdJQXhCQVhScUxnRUFJZ1JCQUNBRVFRQktHeUVFQTBBZ0JDQUpSa1VFUUNBVElBVkJBblJxSUF3NkFBSURRQ0FGSUFocUlCUnhJZ1VnQ2tzTkFBc2dDVUVCYWlFSkRBRUxDeUFNUVFGcUlRd01BUXNMUVg4aENDQUZEUUlMSUJCQkFXb2hDRUVBSVFVRFFDQUZJQTFHUlFSQUlCRWdFeUFGUVFKMGFpSU9MUUFDUVFGMGFpSUVJQVF2QVFBaUNVRUJhanNCQUNBT0lBZ2dDV2RCWUhOcUlnUTZBQU1nRGlBSklBUjBJQTFyT3dFQUlBVkJBV29oQlF3QkN3c0NRQUpBSUFZdkFZSUVCRUFnQjBFY2FpSUVJQmNnRmhBTklnaEJpSDlMRFFJZ0IwRVVhaUFFSUJJUURpQUhRUXhxSUFRZ0VoQU9RUUFoQlFOQUlBZEJIR29pQkJBUElBVkIrd0ZMY2cwQ0lBQWdCV29pQmlBSFFSUnFJQVFRRURvQUFDQUdJQWRCREdvZ0JCQVFPZ0FCSUFWQkFuSWhCQ0FIUVJ4cUVBOEVRQ0FFSVFVTUF3VWdBQ0FFYWlBSFFSUnFJQWRCSEdvaUJCQVFPZ0FBSUFZZ0IwRU1haUFFRUJBNkFBTWdCVUVFYWlFRkRBRUxBQXNBQ3lBSFFSeHFJZ1FnRnlBV0VBMGlDRUdJZjBzTkFTQUhRUlJxSUFRZ0VoQU9JQWRCREdvZ0JDQVNFQTVCQUNFRkEwQWdCMEVjYWlJRUVBOGdCVUg3QVV0eVJRUkFJQUFnQldvaUJpQUhRUlJxSUFRUUVUb0FBQ0FHSUFkQkRHb2dCQkFST2dBQklBVkJBbkloQkNBSFFSeHFFQThFUUNBRUlRVUZJQUFnQkdvZ0IwRVVhaUFIUVJ4cUlnUVFFVG9BQUNBR0lBZEJER29nQkJBUk9nQURJQVZCQkdvaEJRd0NDd3NMQW44RFFFRzZmeUVJSUFWQi9RRkxEUU1nQUNBRmFpSUdJQWRCRkdvZ0IwRWNhaUlKRUJFNkFBQWdCa0VCYWlFRUlBa1FEMEVEUmdSQUlBZEJER29oQ0VFQ0RBSUxJQVZCL0FGTERRTWdCaUFIUVF4cUlBZEJIR29pQkJBUk9nQUJJQVZCQW1vaEJTQUVFQTlCQTBjTkFBc2dBQ0FGYWlFRUlBZEJGR29oQ0VFREN5QUVJQWdnQjBFY2FoQVJPZ0FBSUFacUlBQnJJUWdNQVFzQ2Z3TkFRYnAvSVFnZ0JVSDlBVXNOQWlBQUlBVnFJZ1lnQjBFVWFpQUhRUnhxSWdrUUVEb0FBQ0FHUVFGcUlRUWdDUkFQUVFOR0JFQWdCMEVNYWlFSVFRSU1BZ3NnQlVIOEFVc05BaUFHSUFkQkRHb2dCMEVjYWlJRUVCQTZBQUVnQlVFQ2FpRUZJQVFRRDBFRFJ3MEFDeUFBSUFWcUlRUWdCMEVVYWlFSVFRTUxJQVFnQ0NBSFFSeHFFQkE2QUFBZ0Jtb2dBR3NoQ0FzZ0NFR0lmMHNOQVFzZ0NDRUVRUUFoQlNBQlFRQkJOQkFESVFsQkFDRUtBMEFnQkNBRlJ3UkFJQUFnQldvaUJpMEFBQ0lCUVF0TEJFQkJiQ0VJREFNRklBa2dBVUVDZEdvaUFTQUJLQUlBUVFGcU5nSUFJQVZCQVdvaEJVRUJJQVl0QUFCMFFRRjFJQXBxSVFvTUFnc0FDd3RCYkNFSUlBcEZEUUFnQ21jaUJVRWZjeUlCUVF0TERRQWdBMEVnSUFWck5nSUFRUUZCQWlBQmRDQUtheUlEWjBFZmN5SUJkQ0FEUncwQUlBQWdCR29nQVVFQmFpSUFPZ0FBSUFrZ0FFRUNkR29pQUNBQUtBSUFRUUZxTmdJQUlBa29BZ1FpQUVFQ1NTQUFRUUZ4Y2cwQUlBSWdCRUVCYWpZQ0FDQUxRUUZxSVFnTElBZEJNR29rQUNBSUM2QUZBUXgvSXdCQkVHc2lEQ1FBQW44Z0JFRUhUUVJBSUF4Q0FEY0RDQ0FNUVFocUlnVWdBeUFFRUFJYVFXd2dBQ0FCSUFJZ0JVRUlFQXdpQUNBQUlBUkxHeUFBSUFCQmlYOUpHd3dCQ3lBQVFRQWdBU2dDQUVFQmFpSU5RUUYwRUFNaEQwRlVJQU1vQUFBaUJrRVBjU0lBUVFwTERRQWFJQUlnQUVFRmFqWUNBQ0FESUFScUlnSkJCR3NoQnlBQ1FRZHJJUXNnQUVFR2FpRU9RUVFoQWlBR1FRUjJJUVZCSUNBQWRDSUlRUUZ5SVFsQkFDRUFRUUVoQmlBRElRUURRQUpBSUFaQkFYRkZCRUFEUUNBRlFYOXpRWUNBZ0lCNGNtZ2lCa0VZU1VVRVFDQUFRU1JxSVFBZ0JDQUxUUVIvSUFSQkEyb0ZJQVFnQzJ0QkEzUWdBbXBCSDNFaEFpQUhDeUlFS0FBQUlBSjJJUVVNQVFzTElBSWdCa0VlY1NJS2FrRUNhaUVDSUFaQkFYWkJBMndnQUdvZ0JTQUtka0VEY1dvaUFDQU5UdzBCQW44Z0JDQUxTeUFDUVFOMklBUnFJZ1VnQjB0eFJRUkFJQUpCQjNFaEFpQUZEQUVMSUFRZ0IydEJBM1FnQW1wQkgzRWhBaUFIQ3lJRUtBQUFJQUoySVFVTElBVWdDRUVCYTNFaUJpQUlRUUYwUVFGcklnb2dDV3NpRUVrRWZ5QU9RUUZyQlNBRklBcHhJZ1VnRUVFQUlBVWdDRTRiYXlFR0lBNExJUVVnRHlBQVFRRjBhaUFHUVFGcklnbzdBUUFnQUVFQmFpRUFJQUlnQldvaEFpQUlRUUVnQm1zZ0NpQUdRUUJLR3lBSmFpSUpTZ1JBSUFsQkFrZ05BVUVnSUFsbklnVnJJUTVCQVNBRlFSOXpkQ0VJQ3lBQUlBMVBEUUFnQ2tFQVJ5RUdBbjhnQkNBTFN5QUNRUU4xSUFScUlnVWdCMHR4UlFSQUlBSkJCM0VoQWlBRkRBRUxJQUlnQkNBSGEwRURkR3BCSDNFaEFpQUhDeUlFS0FBQUlBSjJJUVVNQVFzTFFXd2dDVUVCUncwQUdrRlFJQUFnRFVzTkFCcEJiQ0FDUVNCS0RRQWFJQUVnQUVFQmF6WUNBQ0FFSUFKQkIycEJBM1ZxSUFOckN5QU1RUkJxSkFBTDhnRUJBWDhnQWtVRVFDQUFRZ0EzQWdBZ0FFRUFOZ0lRSUFCQ0FEY0NDRUc0Znc4TElBQWdBVFlDRENBQUlBRkJCR28yQWhBZ0FrRUVUd1JBSUFBZ0FTQUNhaUlCUVFScklnTTJBZ2dnQUNBREtBQUFOZ0lBSUFGQkFXc3RBQUFpQVFSQUlBQWdBV2RCRjJzMkFnUWdBZzhMSUFCQkFEWUNCRUYvRHdzZ0FDQUJOZ0lJSUFBZ0FTMEFBQ0lETmdJQUFrQUNRQUpBSUFKQkFtc09BZ0VBQWdzZ0FDQUJMUUFDUVJCMElBTnlJZ00yQWdBTElBQWdBUzBBQVVFSWRDQURhallDQUFzZ0FTQUNha0VCYXkwQUFDSUJSUVJBSUFCQkFEWUNCRUZzRHdzZ0FDQUJaeUFDUVFOMGEwRUphallDQkNBQ0MwUUJBbjhnQVNBQ0x3RUFJZ01nQVNnQ0JHb2lCRFlDQkNBQUlBTkJBblJCb0IxcUtBSUFJQUVvQWdCQkFDQUVhM1p4TmdJQUlBRVFEeG9nQUNBQ1FRUnFOZ0lFQzU4QkFRUi9RUU1oQVNBQUtBSUVJZ0pCSUUwRVFDQUFLQUlJSWdFZ0FDZ0NFRThFUUNBQUlBSkJCM0UyQWdRZ0FDQUJJQUpCQTNacklnSTJBZ2dnQUNBQ0tBQUFOZ0lBUVFBUEN5QUFLQUlNSWdNZ0FVWUVRRUVCUVFJZ0FrRWdTUnNQQ3lBQUlBRWdBU0FEYXlBQ1FRTjJJZ1FnQVNBRWF5QURTU0lCR3lJRGF5SUVOZ0lJSUFBZ0FpQURRUU4wYXpZQ0JDQUFJQVFvQUFBMkFnQUxJQUVMU0FFRWZ5QUFLQUlFSUFBb0FnQkJBblJxSWdJdEFBSWdBaThCQUNFRUlBRWdBU2dDQkNJRklBSXRBQU1pQW1vMkFnUWdBQ0FFSUFFb0FnQWdCWFJCQUNBQ2EzWnFOZ0lBQzFJQkJIOGdBQ2dDQkNBQUtBSUFRUUowYWlJQ0xRQUNJQUl2QVFBaEJDQUJJQUl0QUFNaUFpQUJLQUlFYWlJRk5nSUVJQUFnQkNBQ1FRSjBRYUFkYWlnQ0FDQUJLQUlBUVFBZ0JXdDJjV28yQWdBTENBQWdBRUdJZjBzTEdnQWdBQVJBSUFFRVFDQUNJQUFnQVJFQ0FBOExJQUFRQmdzTHBnZ0NEWDhCZmlNQVFSQnJJZ2trQUNBSlFRQTJBZ3dnQ1VFQU5nSUlBbjhDUUNBRFFlZ0phaUFESUFsQkNHb2dDVUVNYWlBQklBSWdBMEdBQVdvUUN5SVBRWWgvU3cwQVFWUWdDU2dDRENJRUlBQW9BZ0FpQVVIL0FYRkJBV3BMRFFFYUlBQkJCR29oQ3lBQUlBRkIvNEdBZUhFZ0JFRVFkRUdBZ1B3SGNYSTJBZ0JCZnlBRUlBUkJBRWdiUVFGcUlRQkJBQ0VCSUFrb0FnZ2hCVUVBSVFJRFFDQUFJQUpHQkVBZ0JVRURheUVCUVFBaEFBTkFBa0JCQUNFQ0lBQWdBVTRFUUFOQUlBQWdCVTROQWlBRElBQWdBMnBCNkFscUxRQUFRUUowYWtGQWF5SUJJQUVvQWdBaUFVRUJhallDQUNBQklBTnFJQUE2QU9nSElBQkJBV29oQUF3QUN3QUZBMEFnQWtFRVJrVUVRQ0FESUFNZ0FDQUNhaUlIYWtIb0NXb3RBQUJCQW5ScVFVQnJJZ2dnQ0NnQ0FDSUlRUUZxTmdJQUlBTWdDR29nQnpvQTZBY2dBa0VCYWlFQ0RBRUxDeUFBUVFScUlRQU1BZ3NBQ3dzZ0JFRUJhaUVPSUFNb0FnQWhCMEVBSVFCQkFTRUlBMEFnQ0NBT1JnMERJQTRnQ0dzaEJDQURJQWhCQW5ScUtBSUFJUVVDUUFKQUFrQUNRQUpBQWtCQkFTQUlkRUVCZFNJTlFRRnJEZ2dBQVFRQ0JBUUVBd1FMUVFBaEFpQUZRUUFnQlVFQVNoc2hCaUFBSVFFRFFDQUNJQVpHRFFVZ0F5QUNJQWRxYWkwQTZBY2hDaUFMSUFGQkFYUnFJZ3dnQkRvQUFTQU1JQW82QUFBZ0FrRUJhaUVDSUFGQkFXb2hBUXdBQ3dBTFFRQWhBaUFGUVFBZ0JVRUFTaHNoQ2lBQUlRRURRQ0FDSUFwR0RRUWdDeUFCUVFGMGFpSUdJQU1nQWlBSGFtb3RBT2dISWd3NkFBSWdCaUFFT2dBQklBWWdERG9BQUNBR0lBUTZBQU1nQWtFQmFpRUNJQUZCQW1vaEFRd0FDd0FMUVFBaEFpQUZRUUFnQlVFQVNoc2hCaUFFUVFoMFFZRCtBM0VoQkNBQUlRRURRQ0FDSUFaR0RRTWdDeUFCUVFGMGFpQUVJQU1nQWlBSGFtb3RBT2dIY3ExQ2dZQ0VnSkNBd0FCK053QUFJQUpCQVdvaEFpQUJRUVJxSVFFTUFBc0FDMEVBSVFJZ0JVRUFJQVZCQUVvYklRWWdCRUVJZEVHQS9nTnhJUVFnQUNFQkEwQWdBaUFHUmcwQ0lBc2dBVUVCZEdvaUNpQUVJQU1nQWlBSGFtb3RBT2dIY3ExQ2dZQ0VnSkNBd0FCK0loRTNBQWdnQ2lBUk53QUFJQUpCQVdvaEFpQUJRUWhxSVFFTUFBc0FDMEVBSVFFZ0JVRUFJQVZCQUVvYklRb2dCRUVJZEVHQS9nTnhJUXdnQUNFRUEwQWdBU0FLUmcwQklBc2dCRUVCZEdvaEVDQU1JQU1nQVNBSGFtb3RBT2dIY3ExQ2dZQ0VnSkNBd0FCK0lSRkJBQ0VDQTBBZ0FpQU5Ua1VFUUNBUUlBSkJBWFJxSWdZZ0VUY0FHQ0FHSUJFM0FCQWdCaUFSTndBSUlBWWdFVGNBQUNBQ1FSQnFJUUlNQVFzTElBRkJBV29oQVNBRUlBMXFJUVFNQUFzQUN5QUlRUUZxSVFnZ0JTQUhhaUVISUFVZ0RXd2dBR29oQUF3QUN3QUZJQU1nQWtFQ2RHb2lCMEZBYXlBQk5nSUFJQUpCQVdvaEFpQUhLQUlBSUFGcUlRRU1BUXNBQ3dBTElBOExJQWxCRUdva0FBdnlBZ0VHZnlNQVFTQnJJZ1VrQUNBRUtBSUFJUVlnQlVFTWFpQUNJQU1RRFNJRFFZaC9UUVJBSUFSQkJHb2hBaUFBSUFGcUlnbEJBMnNoQkVFQUlBWkJFSFpyUVI5eElRTURRQ0FGUVF4cUVBOGdBQ0FFVDNKRkJFQWdBaUFGS0FJTUlnWWdCU2dDRUNJSGRDQURka0VCZEdvaUNDMEFBU0VLSUFBZ0NDMEFBRG9BQUNBQ0lBWWdCeUFLYWlJR2RDQURka0VCZEdvaUJ5MEFBQ0VJSUFVZ0JpQUhMUUFCYWpZQ0VDQUFJQWc2QUFFZ0FFRUNhaUVBREFFTEN3TkFJQVZCREdvUUR5RUhJQVVvQWd3aEJpQUZLQUlRSVFRZ0FDQUpUeUFIY2tVRVFDQUNJQVlnQkhRZ0EzWkJBWFJxSWdZdEFBQWhCeUFGSUFRZ0JpMEFBV28yQWhBZ0FDQUhPZ0FBSUFCQkFXb2hBQXdCQ3dzRFFDQUFJQWxQUlFSQUlBSWdCaUFFZENBRGRrRUJkR29pQnkwQUFTRUlJQUFnQnkwQUFEb0FBQ0FBUVFGcUlRQWdCQ0FJYWlFRURBRUxDMEZzUVd3Z0FTQUZLQUlVSUFVb0FoaEhHeUFFUVNCSEd5RURDeUFGUVNCcUpBQWdBd3ZQRkFFamZ5TUFRZEFBYXlJRkpBQkJiQ0VKQWtBZ0EwRUtTUTBBQWtBZ0F5QUNMd0FFSWdjZ0FpOEFBQ0lJSUFJdkFBSWlEV3BxUVFacUlneEpEUUFnQkM4QkFpRUdJQVZCUEdvZ0FrRUdhaUlDSUFnUURTSUpRWWgvU3cwQklBVkJLR29nQWlBSWFpSUNJQTBRRFNJSlFZaC9TdzBCSUFWQkZHb2dBaUFOYWlJQ0lBY1FEU0lKUVloL1N3MEJJQVVnQWlBSGFpQURJQXhyRUEwaUNVR0lmMHNOQVNBRVFRUnFJUW9nQUNBQmFpSWZRUU5ySVNCQkFDQUdhMEVmY1NFTElBVW9BZ2doRVNBRktBSWNJUklnQlNnQ01DRVRJQVVvQWtRaEZDQUZLQUlFSVFrZ0JTZ0NHQ0VOSUFVb0Fpd2hEQ0FGS0FKQUlRWWdCU2dDRUNFaElBVW9BaVFoSWlBRktBSTRJU01nQlNnQ1RDRWtJQVVvQWdBaEZTQUZLQUlVSVJZZ0JTZ0NLQ0VYSUFVb0Fqd2hHRUVCSVE4Z0FDQUJRUU5xUVFKMklnUnFJZ01nQkdvaUFpQUVhaUlaSVFRZ0FpRUlJQU1oQndOQUlBOUJBWEZGSUFRZ0lFOXlSUVJBSUFBZ0NpQVlJQVowSUF0MlFRSjBhaUlPTHdFQU93QUFJQTR0QUFJaEdpQU9MUUFESVJBZ0J5QUtJQmNnREhRZ0MzWkJBblJxSWc0dkFRQTdBQUFnRGkwQUFpRWJJQTR0QUFNaER5QUlJQW9nRmlBTmRDQUxka0VDZEdvaURpOEJBRHNBQUNBT0xRQUNJUndnRGkwQUF5RWRJQVFnQ2lBVklBbDBJQXQyUVFKMGFpSU9Md0VBT3dBQUlBNHRBQUloSGlBT0xRQURJUTRnQUNBUWFpSWxJQW9nR0NBR0lCcHFJZ1owSUF0MlFRSjBhaUlRTHdFQU93QUFJQkF0QUFJZ0VDMEFBeUVtSUFjZ0Qyb2lKeUFLSUJjZ0RDQWJhaUlhZENBTGRrRUNkR29pQnk4QkFEc0FBQ0FITFFBQ0lRd2dCeTBBQXlFUUlBZ2dIV29pR3lBS0lCWWdEU0FjYWlJUGRDQUxka0VDZEdvaUNDOEJBRHNBQUNBSUxRQUNJUTBnQ0MwQUF5RWNJQVFnRG1vaUhTQUtJQlVnQ1NBZWFpSU9kQ0FMZGtFQ2RHb2lDUzhCQURzQUFDQUdhaUVBUVFNaEJ3Si9JQlFnSkVrRVFDQUFJUVpCQXd3QkN5QUFRUWR4SVFZZ0ZDQUFRUU4yYXlJVUtBQUFJUmhCQUFzZ0NTMEFBeUVlSUFrdEFBSWhDQ0FNSUJwcUlRQWdFeUFqU1FSL0lBQUZJQk1nQUVFRGRtc2lFeWdBQUNFWFFRQWhCeUFBUVFkeEN5RU1JQTBnRDJvaEFDQUhjaUVKUVFNaER3Si9JQklnSWtrRVFDQUFJUTFCQXd3QkN5QUFRUWR4SVEwZ0VpQUFRUU4yYXlJU0tBQUFJUlpCQUFzZ0NDQU9haUVBSUFseUlCRWdJVWtFZnlBQUJTQVJJQUJCQTNackloRW9BQUFoRlVFQUlROGdBRUVIY1FzaENTQWxJQ1pxSVFBZ0VDQW5haUVISUJzZ0hHb2hDQ0FkSUI1cUlRUWdEM0pGSVE4TUFRc0xJQVVnRERZQ0xDQUZJQVkyQWtBZ0JTQU5OZ0lZSUFVZ0NUWUNCQ0FGSUJRMkFrUWdCU0FUTmdJd0lBVWdFallDSENBRklCRTJBZ2dnQlNBWU5nSThJQVVnRnpZQ0tDQUZJQlkyQWhRZ0JTQVZOZ0lBSUFJZ0Iwa2dBQ0FEUzNJTkFFRnNJUWtnQ0NBWlN3MEJJQU5CQTJzaENRTkFJQVZCUEdvUUQwVWdBQ0FKU1hFRVFDQUFJQW9nQlNnQ1BDSU5JQVVvQWtBaURIUWdDM1pCQW5ScUlnNHZBUUE3QUFBZ0FDQU9MUUFEYWlJR0lBb2dEU0FNSUE0dEFBSnFJZ0IwSUF0MlFRSjBhaUlNTHdFQU93QUFJQVVnQUNBTUxRQUNhallDUUNBR0lBd3RBQU5xSVFBTUFRVWdBMEVDYXlFTUEwQWdCVUU4YWhBUElRWWdCU2dDUENFTklBVW9Ba0FoQ1NBQUlBeExJQVp5UlFSQUlBQWdDaUFOSUFsMElBdDJRUUowYWlJR0x3RUFPd0FBSUFVZ0NTQUdMUUFDYWpZQ1FDQUFJQVl0QUFOcUlRQU1BUXNMQTBBZ0FDQU1TMFVFUUNBQUlBb2dEU0FKZENBTGRrRUNkR29pQmk4QkFEc0FBQ0FBSUFZdEFBTnFJUUFnQ1NBR0xRQUNhaUVKREFFTEN3SkFJQUFnQTA4TkFDQUFJQW9nRFNBSmRDQUxkaUlBUVFKMGFpSURMUUFBT2dBQUlBTXRBQU5CQVVZRVFDQUpJQU10QUFKcUlRa01BUXNnQ1VFZlN3MEFRU0FnQ1NBS0lBQkJBblJxTFFBQ2FpSUFJQUJCSUU4YklRa0xJQUpCQTJzaERBTkFJQVZCS0dvUUQwVWdCeUFNU1hFRVFDQUhJQW9nQlNnQ0tDSUdJQVVvQWl3aUFIUWdDM1pCQW5ScUlnMHZBUUE3QUFBZ0J5QU5MUUFEYWlJRElBb2dCaUFBSUEwdEFBSnFJZ0IwSUF0MlFRSjBhaUlHTHdFQU93QUFJQVVnQUNBR0xRQUNhallDTENBRElBWXRBQU5xSVFjTUFRVWdBa0VDYXlFR0EwQWdCVUVvYWhBUElRTWdCU2dDS0NFTUlBVW9BaXdoQUNBR0lBZEpJQU55UlFSQUlBY2dDaUFNSUFCMElBdDJRUUowYWlJREx3RUFPd0FBSUFVZ0FDQURMUUFDYWpZQ0xDQUhJQU10QUFOcUlRY01BUXNMQTBBZ0JpQUhTVVVFUUNBSElBb2dEQ0FBZENBTGRrRUNkR29pQXk4QkFEc0FBQ0FISUFNdEFBTnFJUWNnQUNBRExRQUNhaUVBREFFTEN3SkFJQUlnQjAwTkFDQUhJQW9nRENBQWRDQUxkaUlDUVFKMGFpSURMUUFBT2dBQUlBTXRBQU5CQVVZRVFDQUFJQU10QUFKcUlRQU1BUXNnQUVFZlN3MEFRU0FnQUNBS0lBSkJBblJxTFFBQ2FpSUFJQUJCSUU4YklRQUxJQmxCQTJzaERBTkFJQVZCRkdvUUQwVWdDQ0FNU1hFRVFDQUlJQW9nQlNnQ0ZDSUdJQVVvQWhnaUFuUWdDM1pCQW5ScUlnMHZBUUE3QUFBZ0NDQU5MUUFEYWlJRElBb2dCaUFDSUEwdEFBSnFJZ0owSUF0MlFRSjBhaUlHTHdFQU93QUFJQVVnQWlBR0xRQUNhallDR0NBRElBWXRBQU5xSVFnTUFRVWdHVUVDYXlFREEwQWdCVUVVYWhBUElRSWdCU2dDRkNFR0lBVW9BaGdoQnlBRElBaEpJQUp5UlFSQUlBZ2dDaUFHSUFkMElBdDJRUUowYWlJQ0x3RUFPd0FBSUFVZ0J5QUNMUUFDYWpZQ0dDQUlJQUl0QUFOcUlRZ01BUXNMQTBBZ0F5QUlTVVVFUUNBSUlBb2dCaUFIZENBTGRrRUNkR29pQWk4QkFEc0FBQ0FJSUFJdEFBTnFJUWdnQnlBQ0xRQUNhaUVIREFFTEN3SkFJQWdnR1U4TkFDQUlJQW9nQmlBSGRDQUxkaUlDUVFKMGFpSURMUUFBT2dBQUlBTXRBQU5CQVVZRVFDQUhJQU10QUFKcUlRY01BUXNnQjBFZlN3MEFRU0FnQnlBS0lBSkJBblJxTFFBQ2FpSUNJQUpCSUU4YklRY0xBMEFnQlJBUFJTQUVJQ0JKY1FSQUlBUWdDaUFGS0FJQUlnWWdCU2dDQkNJQ2RDQUxka0VDZEdvaURDOEJBRHNBQUNBRUlBd3RBQU5xSWdNZ0NpQUdJQUlnREMwQUFtb2lBblFnQzNaQkFuUnFJZ1F2QVFBN0FBQWdCU0FDSUFRdEFBSnFOZ0lFSUFNZ0JDMEFBMm9oQkF3QkJTQWZRUUpySVFNRFFDQUZFQThoQWlBRktBSUFJUVlnQlNnQ0JDRUlJQU1nQkVrZ0FuSkZCRUFnQkNBS0lBWWdDSFFnQzNaQkFuUnFJZ0l2QVFBN0FBQWdCU0FJSUFJdEFBSnFOZ0lFSUFRZ0FpMEFBMm9oQkF3QkN3c0RRQ0FESUFSSlJRUkFJQVFnQ2lBR0lBaDBJQXQyUVFKMGFpSUNMd0VBT3dBQUlBUWdBaTBBQTJvaEJDQUlJQUl0QUFKcUlRZ01BUXNMQWtBZ0JDQWZUdzBBSUFRZ0NpQUdJQWgwSUF0MklnSkJBblJxSWdNdEFBQTZBQUFnQXkwQUEwRUJSZ1JBSUFnZ0F5MEFBbW9oQ0F3QkN5QUlRUjlMRFFCQklDQUlJQW9nQWtFQ2RHb3RBQUpxSWdJZ0FrRWdUeHNoQ0F0QmJFRnNRV3hCYkVGc1FXeEJiRUZzSUFFZ0NFRWdSeHNnQlNnQ0NDQUZLQUlNUnhzZ0IwRWdSeHNnQlNnQ0hDQUZLQUlnUnhzZ0FFRWdSeHNnQlNnQ01DQUZLQUkwUnhzZ0NVRWdSeHNnQlNnQ1JDQUZLQUpJUnhzaENRd0pDd0FMQUFzQUN3QUxBQXNBQ3dBTEFBdEJiQ0VKQ3lBRlFkQUFhaVFBSUFrTDdCQUJIbjhqQUVIUUFHc2lCU1FBUVd3aENRSkFJQU5CQ2trTkFBSkFJQU1nQWk4QUJDSUdJQUl2QUFBaUJ5QUNMd0FDSWdocWFrRUdhaUlPU1EwQUlBUXZBUUloRHlBRlFUeHFJQUpCQm1vaUFpQUhFQTBpQ1VHSWYwc05BU0FGUVNocUlBSWdCMm9pQWlBSUVBMGlDVUdJZjBzTkFTQUZRUlJxSUFJZ0NHb2lBaUFHRUEwaUNVR0lmMHNOQVNBRklBSWdCbW9nQXlBT2F4QU5JZ2xCaUg5TERRRWdCRUVFYWlFS0lBQWdBV29pSEVFRGF5RWRRUUFnRDJ0QkgzRWhDeUFGS0FJSUlSRWdCU2dDSENFU0lBVW9BakFoRXlBRktBSkVJUlFnQlNnQ0JDRUpJQVVvQWhnaEJpQUZLQUlzSVFjZ0JTZ0NRQ0VJSUFVb0FoQWhIaUFGS0FJa0lSOGdCU2dDT0NFZ0lBVW9Ba3doSVNBRktBSUFJUlVnQlNnQ0ZDRVdJQVVvQWlnaEZ5QUZLQUk4SVJoQkFTRU5JQUFnQVVFRGFrRUNkaUlDYWlJT0lBSnFJZzhnQW1vaUdTRUVJQThoQWlBT0lRTURRQ0FOUlNBRUlCMVBja1VFUUNBS0lCZ2dDSFFnQzNaQkFYUnFJZ3d0QUFFaERTQUFJQXd0QUFBNkFBQWdDaUFYSUFkMElBdDJRUUYwYWlJTUxRQUJJUkFnQXlBTUxRQUFPZ0FBSUFvZ0ZpQUdkQ0FMZGtFQmRHb2lEQzBBQVNFYUlBSWdEQzBBQURvQUFDQUtJQlVnQ1hRZ0MzWkJBWFJxSWd3dEFBRWhHeUFFSUF3dEFBQTZBQUFnQ2lBWUlBZ2dEV29pQ0hRZ0MzWkJBWFJxSWd3dEFBRWhEU0FBSUF3dEFBQTZBQUVnQ2lBWElBY2dFR29pQjNRZ0MzWkJBWFJxSWd3dEFBRWhFQ0FESUF3dEFBQTZBQUVnQ2lBV0lBWWdHbW9pREhRZ0MzWkJBWFJxSWdZdEFBRWhHaUFDSUFZdEFBQTZBQUVnQ2lBVklBa2dHMm9pRzNRZ0MzWkJBWFJxSWdrdEFBRWhJaUFFSUFrdEFBQTZBQUVnQ0NBTmFpRUdRUU1oQ1FKL0lCUWdJVWtFUUVFRElRMGdCZ3dCQ3lBVUlBWkJBM1pySWhRb0FBQWhHRUVBSVEwZ0JrRUhjUXNoQ0NBSElCQnFJUVlnRXlBZ1NRUi9JQVlGSUJNZ0JrRURkbXNpRXlnQUFDRVhRUUFoQ1NBR1FRZHhDeUVISUF3Z0dtb2hEQ0FKSUExeUlSQkJBeUVOQW44Z0VpQWZTUVJBSUF3aEJrRUREQUVMSUF4QkIzRWhCaUFTSUF4QkEzWnJJaElvQUFBaEZrRUFDeUFiSUNKcUlRd2dFSEloRUNBUklCNUpCSDhnREFVZ0VTQU1RUU4yYXlJUktBQUFJUlZCQUNFTklBeEJCM0VMSVFrZ0JFRUNhaUVFSUFKQkFtb2hBaUFEUVFKcUlRTWdBRUVDYWlFQUlBMGdFSEpGSVEwTUFRc0xJQVVnQnpZQ0xDQUZJQWcyQWtBZ0JTQUdOZ0lZSUFVZ0NUWUNCQ0FGSUJRMkFrUWdCU0FUTmdJd0lBVWdFallDSENBRklCRTJBZ2dnQlNBWU5nSThJQVVnRnpZQ0tDQUZJQlkyQWhRZ0JTQVZOZ0lBSUFBZ0Rrc2dBeUFQUzNJTkFFRnNJUWtnQWlBWlN3MEJJQTVCQTJzaENRTkFJQVZCUEdvUUR5QUFJQWxQY2tVRVFDQUtJQVVvQWp3aUJpQUZLQUpBSWdkMElBdDJRUUYwYWlJSUxRQUJJUXdnQUNBSUxRQUFPZ0FBSUFvZ0JpQUhJQXhxSWdaMElBdDJRUUYwYWlJSExRQUFJUWdnQlNBR0lBY3RBQUZxTmdKQUlBQWdDRG9BQVNBQVFRSnFJUUFNQVFzTEEwQWdCVUU4YWhBUElRY2dCU2dDUENFR0lBVW9Ba0FoQ1NBQUlBNVBJQWR5UlFSQUlBb2dCaUFKZENBTGRrRUJkR29pQmkwQUFDRUhJQVVnQ1NBR0xRQUJhallDUUNBQUlBYzZBQUFnQUVFQmFpRUFEQUVMQ3dOQUlBQWdEazlGQkVBZ0NpQUdJQWwwSUF0MlFRRjBhaUlITFFBQklBQWdCeTBBQURvQUFDQUFRUUZxSVFBZ0NXb2hDUXdCQ3dzZ0QwRURheUVBQTBBZ0JVRW9haEFQSUFBZ0EwMXlSUVJBSUFvZ0JTZ0NLQ0lHSUFVb0Fpd2lCM1FnQzNaQkFYUnFJZ2d0QUFFaERpQURJQWd0QUFBNkFBQWdDaUFHSUFjZ0Rtb2lCblFnQzNaQkFYUnFJZ2N0QUFBaENDQUZJQVlnQnkwQUFXbzJBaXdnQXlBSU9nQUJJQU5CQW1vaEF3d0JDd3NEUUNBRlFTaHFFQThoQnlBRktBSW9JUVlnQlNnQ0xDRUFJQU1nRDA4Z0IzSkZCRUFnQ2lBR0lBQjBJQXQyUVFGMGFpSUdMUUFBSVFjZ0JTQUFJQVl0QUFGcU5nSXNJQU1nQnpvQUFDQURRUUZxSVFNTUFRc0xBMEFnQXlBUFQwVUVRQ0FLSUFZZ0FIUWdDM1pCQVhScUlnY3RBQUVoQ0NBRElBY3RBQUE2QUFBZ0EwRUJhaUVESUFBZ0NHb2hBQXdCQ3dzZ0dVRURheUVEQTBBZ0JVRVVhaEFQSUFJZ0EwOXlSUVJBSUFvZ0JTZ0NGQ0lHSUFVb0FoZ2lCM1FnQzNaQkFYUnFJZ2d0QUFFaERpQUNJQWd0QUFBNkFBQWdDaUFHSUFjZ0Rtb2lCblFnQzNaQkFYUnFJZ2N0QUFBaENDQUZJQVlnQnkwQUFXbzJBaGdnQWlBSU9nQUJJQUpCQW1vaEFnd0JDd3NEUUNBRlFSUnFFQThoQnlBRktBSVVJUVlnQlNnQ0dDRURJQUlnR1U4Z0IzSkZCRUFnQ2lBR0lBTjBJQXQyUVFGMGFpSUdMUUFBSVFjZ0JTQURJQVl0QUFGcU5nSVlJQUlnQnpvQUFDQUNRUUZxSVFJTUFRc0xBMEFnQWlBWlQwVUVRQ0FLSUFZZ0EzUWdDM1pCQVhScUlnY3RBQUVoQ0NBQ0lBY3RBQUE2QUFBZ0FrRUJhaUVDSUFNZ0NHb2hBd3dCQ3dzRFFDQUZFQThnQkNBZFQzSkZCRUFnQ2lBRktBSUFJZ0lnQlNnQ0JDSUdkQ0FMZGtFQmRHb2lCeTBBQVNFSUlBUWdCeTBBQURvQUFDQUtJQUlnQmlBSWFpSUNkQ0FMZGtFQmRHb2lCaTBBQUNFSElBVWdBaUFHTFFBQmFqWUNCQ0FFSUFjNkFBRWdCRUVDYWlFRURBRUxDd05BSUFVUUR5RUhJQVVvQWdBaEJpQUZLQUlFSVFJZ0JDQWNUeUFIY2tVRVFDQUtJQVlnQW5RZ0MzWkJBWFJxSWdZdEFBQWhCeUFGSUFJZ0JpMEFBV28yQWdRZ0JDQUhPZ0FBSUFSQkFXb2hCQXdCQ3dzRFFDQUVJQnhQUlFSQUlBb2dCaUFDZENBTGRrRUJkR29pQnkwQUFTRUlJQVFnQnkwQUFEb0FBQ0FFUVFGcUlRUWdBaUFJYWlFQ0RBRUxDMEZzUVd4QmJFRnNRV3hCYkVGc1FXd2dBU0FDUVNCSEd5QUZLQUlJSUFVb0FneEhHeUFEUVNCSEd5QUZLQUljSUFVb0FpQkhHeUFBUVNCSEd5QUZLQUl3SUFVb0FqUkhHeUFKUVNCSEd5QUZLQUpFSUFVb0FraEhHeUVKREFFTFFXd2hDUXNnQlVIUUFHb2tBQ0FKQzFnQkEzOENRQ0FBS0FLUTZ3RWlBVVVOQUNBQktBSUFJQUZCdE5VQmFpZ0NBQ0lDSUFGQnVOVUJhaWdDQUNJREVCTWdBZ1JBSUFNZ0FTQUNFUUlBREFFTElBRVFCZ3NnQUVFQU5nS2c2d0VnQUVJQU53T1E2d0VMNlFNQ0JIOENmaUFBUVFCQktCQURJUVFnQWtFQlFRVWdBeHNpQUVrRVFDQUFEd3NnQVVVRVFFRi9Ed3RCQVNFR0FrQUNRQ0FEUVFGR0RRQWdBeUVHSUFFb0FBQWlCVUdvNnI1cFJnMEFRWFloQXlBRlFYQnhRZERVdE1JQlJ3MEJRUWdoQXlBQ1FRaEpEUUVnQVRVQUJDRUlJQVJCQVRZQ0ZDQUVJQWczQXdCQkFBOExJQUVnQWlBR0VCb2lBeUFDU3cwQUlBUWdBellDR0VGeUlRTWdBQ0FCYWlJRlFRRnJMUUFBSWdKQkNIRU5BQ0FDUVNCeElnWkZCRUJCY0NFRElBVXRBQUFpQlVHbkFVc05BU0FGUVFkeHJVSUJJQVZCQTNaQkNtcXRoaUlJUWdPSWZpQUlmQ0VKSUFCQkFXb2hBQXNnQWtFR2RpRUZJQUpCQW5aQkFDRURBa0FDUUFKQUFrQWdBa0VEY1VFQmF3NERBQUVDQXdzZ0FDQUJhaTBBQUNFRElBQkJBV29oQUF3Q0N5QUFJQUZxTHdBQUlRTWdBRUVDYWlFQURBRUxJQUFnQVdvb0FBQWhBeUFBUVFScUlRQUxRUUZ4SVFJQ2ZnSkFBa0FDUUFKQUlBVkJBV3NPQXdFQ0F3QUxRbjhnQmtVTkF4b2dBQ0FCYWpFQUFBd0RDeUFBSUFGcU13QUFRb0FDZkF3Q0N5QUFJQUZxTlFBQURBRUxJQUFnQVdvcEFBQUxJUWdnQkNBQ05nSWdJQVFnQXpZQ0hDQUVJQWczQXdCQkFDRURJQVJCQURZQ0ZDQUVJQWdnQ1NBR0d5SUlOd01JSUFSQ2dJQUlJQWdnQ0VLQWdBaGFHejRDRUFzZ0F3dGZBUUYvUWJoL0lRTWdBVUVCUVFVZ0Foc2lBazhFZnlBQUlBSnFRUUZyTFFBQUlnQkJBM0ZCQW5SQm9CNXFLQUlBSUFKcUlBQkJCSFpCREhGQnNCNXFLQUlBYWlBQVFTQnhJZ0ZGYWlBQlFRVjJJQUJCd0FCSmNXb0ZRYmgvQ3dzTUFDQUFJQUVnQWtFQUVCa0xsd01DQlg4Q2ZpTUFRVUJxSWdRa0FBSkFBMEFnQVVFRlR3UkFBa0FnQUNnQUFFRndjVUhRMUxUQ0FVWUVRRUorSVFjZ0FVRUlTUTBFSUFBb0FBUWlBa0YzU3cwRUlBSkJDR29pQXlBQlN3MEVJQUpCZ1g5SkRRRU1CQXNnQkVFWWFpQUFJQUVRR3lFQ1FuNGdCQ2tER0VJQUlBUW9BaXhCQVVjYklBSWJJZ2RDZlZZTkF5QUhJQWg4SWdnZ0IxUkNmaUVIRFFNQ1FBSkFJQUZCQ0VrTkFDQUFLQUFBUVhCeFFkRFV0TUlCUncwQUlBQW9BQVFpQWtGM1N3MEZRYmgvSUFKQkNHb2lBaUFCSUFKSkd5RUREQUVMSUFSQkdHb2dBQ0FCRUJzaUFrR0lmMHNFUUNBQ0lRTU1BUXRCdUg4aEF5QUNEUUFnQVNBRUtBSXdJZ0pySVFVZ0FDQUNhaUVHQTBBZ0JpQUZJQVJCREdvUUhTSURRWWgvU3cwQklBTkJBMm9pQWlBRlN3UkFRYmgvSVFNTUFnc2dCU0FDYXlFRklBSWdCbW9oQmlBRUtBSVFSUTBBQ3lBRUtBSTRCSDlCdUg4aEF5QUZRUVJKRFFFZ0JrRUVhZ1VnQmdzZ0FHc2hBd3NnQTBHSWYwc05Bd3NnQVNBRGF5RUJJQUFnQTJvaEFBd0JDd3RDZmlBSUlBRWJJUWNMSUFSQlFHc2tBQ0FIQzJRQkFYOUJ1SDhoQXdKQUlBRkJBMGtOQUNBQUxRQUNJUUVnQWlBQUx3QUFJZ0JCQVhFMkFnUWdBaUFBUVFGMlFRTnhJZ00yQWdBZ0FpQUFJQUZCRUhSeVFRTjJJZ0EyQWdnQ1FBSkFJQU5CQVdzT0F3SUJBQUVMUVd3UEN5QUFJUU1MSUFNTFJBRUNmeUFCSUFJb0FnUWlBeUFCS0FJRWFpSUVOZ0lFSUFBZ0EwRUNkRUdnSFdvb0FnQWdBU2dDQUVFQUlBUnJkbkUyQWdBZ0FSQVBHaUFBSUFKQkNHbzJBZ1FMemdFQkJuOUJ1bjhoQ2dKQUlBSW9BZ1FpQ0NBQ0tBSUFJZ2xxSWcwZ0FTQUFhMHNOQUVGc0lRb2dDU0FFSUFNb0FnQWlDMnRMRFFBZ0FDQUphaUlFSUFJb0FnZ2lER3NoQWlBQUlBRkJJR3NpQUNBTElBbEJBQkFnSUFNZ0NTQUxhallDQUFKQUFrQWdCQ0FGYXlBTVR3UkFJQUloQlF3QkN5QU1JQVFnQm10TERRSWdCeUFISUFJZ0JXc2lBbW9pQVNBSWFrOEVRQ0FFSUFFZ0NCQUtHZ3dDQ3lBQ0lBaHFJUWdnQkNBQlFRQWdBbXNRQ2lBQ2F5RUVDeUFFSUFBZ0JTQUlRUUVRSUFzZ0RTRUtDeUFLQzhjRUFRSi9JQUFnQTJvaEJnSkFJQU5CQjB3RVFBTkFJQUFnQms4TkFpQUFJQUl0QUFBNkFBQWdBRUVCYWlFQUlBSkJBV29oQWd3QUN3QUxJQVJCQVVZRVFBSkFJQUFnQW1zaUJVRUhUUVJBSUFBZ0FpMEFBRG9BQUNBQUlBSXRBQUU2QUFFZ0FDQUNMUUFDT2dBQ0lBQWdBaTBBQXpvQUF5QUFJQUlnQlVFQ2RDSUZRY0FlYWlnQ0FHb2lBaWdBQURZQUJDQUNJQVZCNEI1cUtBSUFheUVDREFFTElBQWdBaWtBQURjQUFBc2dBa0VJYWlFQ0lBQkJDR29oQUFzZ0FTQUdUd1JBSUFBZ0Eyb2hBU0FFUVFGSElBQWdBbXRCRDBweVJRUkFBMEFnQUNBQ0tRQUFOd0FBSUFKQkNHb2hBaUFBUVFocUlnQWdBVWtOQUF3REN3QUxJQUFnQWlrQUFEY0FBQ0FBSUFJcEFBZzNBQWdnQTBFUlNRMEJJQUJCRUdvaEFBTkFJQUFnQWlrQUVEY0FBQ0FBSUFJcEFCZzNBQWdnQUNBQ0tRQWdOd0FRSUFBZ0Fpa0FLRGNBR0NBQ1FTQnFJUUlnQUVFZ2FpSUFJQUZKRFFBTERBRUxBa0FnQUNBQlN3UkFJQUFoQVF3QkN5QUJJQUJySVFVQ1FDQUVRUUZISUFBZ0FtdEJEMHB5UlFSQUlBSWhBd05BSUFBZ0F5a0FBRGNBQUNBRFFRaHFJUU1nQUVFSWFpSUFJQUZKRFFBTERBRUxJQUFnQWlrQUFEY0FBQ0FBSUFJcEFBZzNBQWdnQlVFUlNBMEFJQUJCRUdvaEFDQUNJUU1EUUNBQUlBTXBBQkEzQUFBZ0FDQURLUUFZTndBSUlBQWdBeWtBSURjQUVDQUFJQU1wQUNnM0FCZ2dBMEVnYWlFRElBQkJJR29pQUNBQlNRMEFDd3NnQWlBRmFpRUNDd05BSUFFZ0JrOE5BU0FCSUFJdEFBQTZBQUFnQVVFQmFpRUJJQUpCQVdvaEFnd0FDd0FMQzY0SEFnVi9BWDRqQUVHQUFXc2lFU1FBSUJFZ0F6WUNmRUYvSVE4Q1FBSkFBa0FDUUFKQUlBSU9CQUVBQXdJRUN5QUdSUVJBUWJoL0lROE1CQXRCYkNFUElBVXRBQUFpQWlBRFN3MERJQWdnQWtFQ2RDSUNhaWdDQUNFRElBSWdCMm9vQWdBaEFpQUFRUUE2QUFzZ0FFSUFOd0lBSUFBZ0FqWUNEQ0FBSUFNNkFBb2dBRUVBT3dFSUlBRWdBRFlDQUVFQklROE1Bd3NnQVNBSk5nSUFRUUFoRHd3Q0N5QUtSUVJBUVd3aER3d0NDMEVBSVE4Z0MwVWdERUVaU0hJTkFVRUlJQVIwUVFocUlRQkJBQ0VEQTBBZ0FDQURUUTBDSUFOQlFHc2hBd3dBQ3dBTFFXd2hEeUFSSUJGQi9BQnFJQkZCK0FCcUlBVWdCaEFNSWdOQmlIOUxEUUFnRVNnQ2VDSUNJQVJMRFFBZ0VTZ0NmRUVCYWlFSklBQkJDR29oQzBHQWdBSWdBblJCRUhVaEJVRUJJUkJCQVNBQ2RDSVBRUUZySWdvaEVnTkFJQWtnRGtjRVFBSkFJQkVnRGtFQmRDSUVhaThCQUNJTVFmLy9BMFlFUUNBTElCSkJBM1JxSUE0MkFnUWdFa0VCYXlFU1FRRWhEQXdCQ3lBUVFRQWdCU0FNd1VvYklSQUxJQVFnRFdvZ0REc0JBQ0FPUVFGcUlRNE1BUXNMSUFBZ0FqWUNCQ0FBSUJBMkFnQUNRQ0FLSUJKR0JFQWdEVUhxQUdvaEJrRUFJUkJCQUNFTUEwQWdDU0FRUmdSQUlBOUJBM1lnRDBFQmRtcEJBMm9pQlVFQmRDRUVRUUFoREVFQUlSSURRRUVBSVE0Z0R5QVNUUTBFQTBBZ0RrRUNSd1JBSUFzZ0JTQU9iQ0FNYWlBS2NVRURkR29nQmlBT0lCSnFhaTBBQURZQ0JDQU9RUUZxSVE0TUFRc0xJQkpCQW1vaEVpQUVJQXhxSUFweElRd01BQXNBQlNBUklCQkJBWFJxTGdFQUlRVWdCaUFNYWlJRUlCTTNBQUJCQ0NFT0EwQWdCU0FPU2dSQUlBUWdEbW9nRXpjQUFDQU9RUWhxSVE0TUFRc0xJQk5DZ1lLRWlKQ2d3SUFCZkNFVElCQkJBV29oRUNBRklBeHFJUXdNQVFzQUN3QUxJQTlCQTNZZ0QwRUJkbXBCQTJvaEJVRUFJUkJCQUNFT0EwQWdDU0FRUmcwQlFRQWhEQ0FSSUJCQkFYUnFMZ0VBSWdSQkFDQUVRUUJLR3lFRUEwQWdCQ0FNUndSQUlBc2dEa0VEZEdvZ0VEWUNCQU5BSUFVZ0Rtb2dDbkVpRGlBU1N3MEFDeUFNUVFGcUlRd01BUXNMSUJCQkFXb2hFQXdBQ3dBTElBSkJBV29oQlVFQUlRd0RRQ0FNSUE5SEJFQWdEU0FMSUF4QkEzUnFJZ2tvQWdRaUJFRUJkR29pQWlBQ0x3RUFJZ1pCQVdvN0FRQWdDU0FGSUFablFXQnphaUlDT2dBRElBa2dCaUFDZENBUGF6c0JBQ0FKSUFnZ0JFRUNkQ0lDYWlnQ0FEb0FBaUFKSUFJZ0Iyb29BZ0EyQWdRZ0RFRUJhaUVNREFFTEN5QUJJQUEyQWdBZ0F5RVBDeUFSUVlBQmFpUUFJQThMN1ZvQ08zOEdmaU1BUWVBQmF5SUVKQUFDUUVHdzdBa1FCU0lGUlFSQVFVQWhCd3dCQ3lBRlFnQTNBdlRxQVNBRlFRQTJBc1RyQVNBRlFRQTJBclRyQVNBRlFnQTNBcHpyQVNBRlFRQTJBcmpwQVNBRlFRQTJBcXpzQ1NBRlFnQTNBdFRyQVNBRlFnQTNBcXpyQVNBRlFnQTNBNGpyQVNBRlFnQTNBdVRxQVNBRlFnQTNBdVRyQVNBRlFZR0FnTUFBTmdLODZ3RWdCVUlBTndLazZ3RWdCVUg4NmdGcVFRQTJBZ0FnQlVHUTZ3RnFRZ0EzQXdBZ0JSQVlJQVZCck5VQmFpRVVJQVZCK09zQmFpRWNJQVZCc09vQmFpRWlJQVZCb0RCcUlTb2dCVUdZSUdvaEt5QUZRYWpRQUdvaEhpQUZRUkJxSVN3Z0JVRUlhaUVvSUFWQkJHb2hMU0FGUWNEcEFXb2hLU0FGUVlqckFXb2dCRUdVQVdvaEx5QUVRWXdCYWlFd0lBUkJoQUZxSVRFZ0JFSGNBR29oTWlBRVFkUUFhaUV6SUFSQnpBQnFJVFFnQUNFZEFrQUNRQUpBQWtBQ1FBTkFRUUZCQlNBRktBTGs2Z0ViSVFZQ1FBTkFJQU1nQmtrTkFTQUNLQUFBUVhCeFFkRFV0TUlCUmdSQVFiaC9JUWNnQTBFSVNRMElJQUlvQUFRaURrRjNTd1JBUVhJaEJ3d0pDeUFESUE1QkNHb2lDVWtOQ0NBT1FZQi9Td1JBSUFraEJ3d0pDeUFESUFscklRTWdBaUFKYWlFQ0RBRUxDeUFGUWdBM0FxenBBU0FGUWdBM0EranBBU0FGUVFBMkFwanJBU0FGUWdBM0E0RHFBU0FGUWdNM0EvanBBU0FGUWJUcEFXcENBRGNDQUNBRlFmRHBBV3BDQURjREFDQUZRYWpRQUdvaUNVR01nSURnQURZQ0FDQUZRYXpRQVdwQjRCSXBBZ0EzQWdBZ0JVRzAwQUZxUWVnU0tBSUFOZ0lBSUFVZ0JVRVFhallDQUNBRklBVkJvREJxTmdJRUlBVWdCVUdZSUdvMkFnZ2dCU0FKTmdJTUlBVkJBVUVGSUFVb0F1VHFBUnMyQXJ6cEFRSkFJQUZGRFFBZ0JTZ0NyT2tCSWdrZ0hVWU5BQ0FGSUFrMkFyanBBU0FGSUIwMkFxenBBU0FGS0FLdzZRRWhEaUFGSUIwMkFyRHBBU0FGSUIwZ0RpQUphMm8yQXJUcEFRdEJ1SDhoQ1NBRFFRVkJDU0FGS0FMazZnRWlCaHRKRFFVZ0FrRUJRUVVnQmhzZ0JoQWFJZzVCaUg5TEJFQWdEaUVKREFVTElBTWdEa0VEYWtrTkJTQXBJQUlnRGlBR0VCa2lCa0dJZjBzRVFDQUdJUWtNQlFzZ0JnMEZBa0FDUUNBRktBS282d0ZCQVVjTkFDQUZLQUtrNndFaUNVVU5BQ0FGS0FLVTZ3RkZEUUFnQ1NnQ0JFRUJheUlISUFVb0F0enBBU0lLclVLSGxhK3ZtTGJlbTU1L2ZrTEp6OW15OGVXNjZpZUZRaGVKUXMvVzA3N1N4NnZaUW41QytmUGQ4Wm4ybWFzV2ZDSS9RaUdJSUQrRlFzL1cwNzdTeDZ2WlFuNGlQMElkaUNBL2hVTDU4OTN4bWZhWnF4WitJajlDSUlnZ1A0V25jU0VHSUFrb0FnQWhGUU5BUVFBaENBSkFJQlVnQmtFQ2RHb29BZ0FpQ1VVTkFDQUpLQUlJUVFoSkRRQWdDU2dDQkNJU0tBQUFRYmZJd3VGK1J3MEFJQklvQUFRaENBc2dDQ0FLUndSQUlBWWdCM0ZCQVdvaEJpQUlEUUVMQ3lBSlJRMEFJQVVRR0NBRlFYODJBcURyQVNBRklBazJBcFRyQVNBRklBVW9BdHpwQVNJSU5nS1k2d0VNQVFzZ0JTZ0MzT2tCSVFnTEFrQWdDRVVOQUNBRktBS1k2d0VnQ0VZTkFFRmdJUWtNQmdzQ1FDQUZLQUxnNlFFRVFDQUZJQVVvQXVqcUFTSUpSVFlDN09vQklBa05BU0FGUXZucTBORG55YUhrNFFBM0E2anFBU0FGUWdBM0E2RHFBU0FGUXMvVzA3N1N4NnZaUWpjRG1Pb0JJQVZDMXV1Qzd1cjlpZlhnQURjRGtPb0JJQVZDQURjRGlPb0JJQ0pCQUVFb0VBTWFEQUVMSUFWQkFEWUM3T29CQ3lBQklCMXFJU1VnQlNBRktRUG82UUVnRHExOE53UG82UUVnQXlBT2F5RURJQUlnRG1vaEFpQWRJUTREUUNBQ0lBTWdCRUVzYWhBZEloVkJpSDlMQkVBZ0ZTRUpEQVlMSUFOQkEyc2lOU0FWU1EwRUlBSkJBMm9oRzBGc0lRa0NRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBRUtBSXNEZ01DQVFBVkN5QVZRZi8vQjBzTkV5QVZRUU5KRFJJZ0JTa0R5T2tCSVQ4Q1FBSkFJQnN0QUFBaUNVRURjU0lhUVFGckRnTUdBUUFIQ3lBRktBS0E2Z0VOQUVGaUlRa01GUXNnRlVFRlNRMFNJQnNvQUFBaEF3Si9Ba0FDUUFKQUlBbEJBblpCQTNFaUNVRUNhdzRDQVFJQUN5QUpRUUJISVFjZ0EwRUVka0gvQjNFaEMwRURJUVlnQTBFT2RrSC9CM0VNQWd0QkJDRUdJQU5CQkhaQi8vOEFjU0VMUVFFaEJ5QURRUkoyREFFTElBTkJCSFpCLy84UGNTSUxRWUNBQ0VzTkUwRUJJUWRCQlNFR0lBSXRBQWRCQ25RZ0EwRVdkbklMSWdnZ0Jtb2lDU0FWU3cwU0FrQWdDMEdCQmtrTkFDQUZLQUtjNndGRkRRQkJBQ0VEQTBBZ0EwR0RnQUZMRFFFZ0EwRkFheUVEREFBTEFBc2dCaUFiYWlFUElCcEJBMGNOQmlBRktBSU1JZ0l0QUFGQkNIUWhBeUFIRFFjZ0EwVU5DQ0FFUWZBQWFpQVBJQWdRRFNJRFFZaC9TdzBKSUFKQkJHb2hCaUFMSUJ4cUloSkJBMnNoQ2tFQUlBSXZBUUpyUVI5eElRY2dIQ0VEQTBBZ0JFSHdBR29RRDBVZ0F5QUtTWEVFUUNBRElBWWdCQ2dDY0NJSUlBUW9BblFpRDNRZ0IzWkJBblJxSWdJdkFRQTdBQUFnQXlBQ0xRQURhaUlESUFZZ0NDQVBJQUl0QUFKcUlnaDBJQWQyUVFKMGFpSUNMd0VBT3dBQUlBUWdDQ0FDTFFBQ2FqWUNkQ0FESUFJdEFBTnFJUU1NQVFVZ0VrRUNheUVJQTBBZ0JFSHdBR29RRHlFUElBUW9BbkFoQ2lBRUtBSjBJUUlnQXlBSVN5QVBja1VFUUNBRElBWWdDaUFDZENBSGRrRUNkR29pQ2k4QkFEc0FBQ0FFSUFJZ0NpMEFBbW8yQW5RZ0F5QUtMUUFEYWlFRERBRUxDd05BSUFNZ0NFMEVRQ0FESUFZZ0NpQUNkQ0FIZGtFQ2RHb2lEeThCQURzQUFDQURJQTh0QUFOcUlRTWdBaUFQTFFBQ2FpRUNEQUVMQ3dKQUlBTWdFazhOQUNBRElBWWdDaUFDZENBSGRrRUNkR29pQXkwQUFEb0FBQ0FETFFBRFFRRkdCRUFnQWlBRExRQUNhaUVDREFFTElBSkJIMHNOQUVFZ0lBSWdBeTBBQW1vaUFpQUNRU0JQR3lFQ0MwRnNRV3dnQ3lBRUtBSjRJQVFvQW54SEd5QUNRU0JIR3lFRERBc0xBQXNBQ3lBRUtBSTBJZ0lnSlNBT2Ewc05DaUFPUlFSQVFRQWhDU0FDRFFJTURnc2dEaUFiTFFBQUlBSVFBeG9nQWlFSkRBd0xJQlVnSlNBT2Ewc05DU0FPRFFGQkFDRUpJQlZGRFF3TFFiWi9JUWtNRVFzZ0RpQWJJQlVRQWhvZ0ZTRUpEQW9MSUJ3Z0d3Si9Ba0FDUUFKQUlBbEJBblpCQTNGQkFXc09Bd0VBQWdBTElBbEJBM1loQTBFQkRBSUxJQnN2QUFCQkJIWWhBMEVDREFFTElCVkJCRWtORGlBQ0x3QURJQUl0QUFWQkVIUnlJZ0pCajRDQUFVc05EaUFDUVFSMklRTkJBd3NpQW1vdEFBQWdBMEVnYWhBRElRa2dCU0FETmdLQTZ3RWdCU0FKTmdMdzZnRWdBa0VCYWlFSkRBVUxJQlVDZndKQUFrQUNRQ0FKUVFKMlFRTnhRUUZyRGdNQkFBSUFDeUFKUVFOMklRTkJBUXdDQ3lBYkx3QUFRUVIySVFOQkFnd0JDeUFDTHdBRElBSXRBQVZCRUhSeVFRUjJJUU5CQXdzaUFpQURhaUlKUVNCcVNRUkFJQWtnRlVzTkRTQWNJQUlnRzJvZ0F4QUNJUUlnQlNBRE5nS0E2d0VnQlNBQ05nTHc2Z0VnQWlBRGFpSUNRZ0EzQUJnZ0FrSUFOd0FRSUFKQ0FEY0FDQ0FDUWdBM0FBQU1CUXNnQlNBRE5nS0E2d0VnQlNBQ0lCdHFOZ0x3NmdFTUJBc2dCMFVFUUNBZUlBOGdDQ0FVRUJRaUFrR0lmMHNnQWlBSVQzSU5EQ0FjSUFzZ0FpQVBhaUFJSUFKcklCNFFGU0VEREFNTElBdEZJQWhGY2cwTElBdEJDSFlpQXlBSUlBdEpCSDhnQ0VFRWRDQUxiZ1ZCRHd0QkdHd2lBa0dNQ0dvb0FnQnNJQUpCaUFocUtBSUFhaUlHUVFOMklBWnFJQUpCZ0FocUtBSUFJQUpCaEFocUtBSUFJQU5zYWtrRVFDTUFRUkJySWhBa0FDQWVLQUlBSVFNZ0ZFSHdCR3BCQUVIc0FCQURJUVpCVkNFQ0FrQWdBMEgvQVhFaURFRU1TdzBBQWtBZ0ZFSGNDV29nQmlBUVFRaHFJQkJCREdvZ0R5QUlJQlJCM0F0cUloY1FDeUlTUVloL1N3MEFJQkFvQWd3aUJpQU1TdzBCSUJSQnFBVnFJUTBnRkVHa0JXb2hOaUFlUVFScUlSRWdBMEdBZ0lCNGNTRTNJQVpCQVdvaUV5RUNJQVloQXdOQUlBSWlCMEVCYXlFQ0lBTWlDa0VCYXlFRElCUWdDa0VDZEdvb0F2QUVSUTBBQzBFQklBY2dCMEVCVFJzaEZrRUFJUWRCQVNFQ0EwQWdBaUFXUndSQUlCUWdBa0VDZENJRGFpZ0M4QVFoR0NBRElBMXFJQWMyQWdBZ0FrRUJhaUVDSUFjZ0dHb2hCd3dCQ3dzZ0RTQUhOZ0lBUVFBaEFpQVFLQUlJSVFNRFFDQUNJQU5IQkVBZ0RTQUNJQlJxUWR3SmFpMEFBQ0lZUVFKMGFpSVpJQmtvQWdBaUdVRUJhallDQUNBVUlCbEJBWFJxSWhrZ0dEb0EzUVVnR1NBQ09nRGNCU0FDUVFGcUlRSU1BUXNMUVFBaEF5QU5RUUEyQWdBZ0RDQUdRWDl6YWlFR1FRRWhBZ05BSUFJZ0ZrY0VRQ0FVSUFKQkFuUnFJZzBnQXpZQ0FDQU5LQUx3QkNBQ0lBWnFkQ0FEYWlFRElBSkJBV29oQWd3QkN3c2dEQ0FUSUFwcklnWnJRUUZxSVFvZ0JpRURBMEFnQXlBS1NRUkFJQlFnQTBFMGJHb2hEVUVCSVFJRFFDQUNJQlpIQkVBZ0RTQUNRUUowSWhocUlCUWdHR29vQWdBZ0EzWTJBZ0FnQWtFQmFpRUNEQUVMQ3lBRFFRRnFJUU1NQVFzTElCY2dGRUUwRUFJaE9DQVVRWkFNYWlFNUlCTWdER3NoT2lBVVFkd0ZhaUVYUVFBaENnTkFBa0FDUUNBSElBcEhCRUJCQVNBTUlCTWdGeUFLUVFGMGFpSUNMUUFCSWcxcklnTnJJaGgwSVJrZ0FpMEFBQ0VXSURnZ0RVRUNkR29pSHlnQ0FDRUNJQVlnR0UwRVFDQTJRUUVnQXlBNmFpSU5JQTFCQVV3YklpQkJBblFpSkdvb0FnQWhEU0E1SUJRZ0EwRTBiR3BCTkJBQ0lTRWdEVUVCZENFbUlCRWdBa0VDZEdvaEl5QWdRUUZORFFJZ0EwRVFkRUdBZ1B3SGNTQVdja0dBZ0lBSWNpRWdJQ0VnSkdvb0FnQWhKRUVBSVFJRFFDQUNJQ1JHRFFNZ0l5QUNRUUowYWlBZ05nRUFJQUpCQVdvaEFnd0FDd0FMSUFJZ0FpQVphaUlOSUFJZ0RVc2JJUTBnQTBFUWRFR0FnUHdIY1NBV2NrR0FnSUFJY2lFREEwQWdBaUFOUmcwRElCRWdBa0VDZEdvZ0F6WUJBQ0FDUVFGcUlRSU1BQXNBQ3lBZUlBeEJFSFFnTjNJZ0RISkJnQUp5TmdJQURBTUxJQWNnRFdzaEpDQVhJQ1pxSVNaQkFDRU5BMEFnRFNBa1JnMEJRUUVnR0NBVElDWWdEVUVCZEdvaUp5MEFBU0lDYXlJN2EzUWlQQ0FoSUFKQkFuUnFJaUFvQWdBaUFtb2hQU0FESUR0cVFSQjBRWUNBL0FkeElDY3RBQUJCQ0hSeUlCWnlRWUNBZ0JCeUlTY0RRQ0FqSUFKQkFuUnFJQ2MyQVFBZ0FrRUJhaUlDSUQxSkRRQUxJQ0FnSUNnQ0FDQThhallDQUNBTlFRRnFJUTBNQUFzQUN5QWZJQjhvQWdBZ0dXbzJBZ0FnQ2tFQmFpRUtEQUFMQUFzZ0VpRUNDeUFRUVJCcUpBQWdBa0dJZjBzZ0FpQUlUM0lORENBY0lBc2dBaUFQYWlBSUlBSnJJQjRRRmlFRERBTUxJQjRnRHlBSUlCUVFGQ0lDUVloL1N5QUNJQWhQY2cwTElCd2dDeUFDSUE5cUlBZ2dBbXNnSGhBWElRTU1BZ3NnQXdSQUlCd2dDeUFQSUFnZ0FoQVdJUU1NQWdzZ0hDQUxJQThnQ0NBQ0VCY2hBd3dCQ3lBY0lBc2dEeUFJSUFJUUZTRURDeUFEUVloL1N3MElJQVVnQ3pZQ2dPc0JJQVVnSERZQzhPb0JJQVZCQVRZQ2dPb0JJQnBCQWtZRVFDQUZJQjQyQWd3TElBc2dIR29pQWtJQU53QUFJQUpDQURjQUdDQUNRZ0EzQUJBZ0FrSUFOd0FJSUFsQmlIOUxEUW9MSUFrZ0ZVWU5DQ0FWSUFscklRWWdCU2dDbk9zQklRb0NRQ0FKSUJ0cUlnTXRBQUFpRDBVRVFFRUJJUUpCQUNFUFFiaC9JUWtnQmtFQlJnMEJEQXNMQW44Z0EwRUJhaUFQd0NJQ1FRQk9EUUFhSUFKQmYwWUVRQ0FHUVFOSURRc2dBeThBQVVHQS9nRnFJUThnQTBFRGFnd0JDeUFHUVFKSURRb2dBeTBBQVNBUFFRaDBja0dBZ0FKcklROGdBMEVDYWdzaEVrRzRmeUVKSUJKQkFXb2lBaUFWSUJ0cUlnZExEUW9nTENBRklCSXRBQUFpRWtFR2RrRWpRUWtnQWlBSElBSnJRY0FRUWRBUlFmQVNJQVVvQW9UcUFTQUtJQThnRkJBaElnbEJpSDlMRFFnZ0t5QW9JQkpCQkhaQkEzRkJIMEVJSUFJZ0NXb2lBaUFISUFKclFZQUxRWUFNUVlBWElBVW9Bb1RxQVNBRktBS2M2d0VnRHlBVUVDRWlDRUdJZjBzTkNFRnNJUWtnS2lBdElCSkJBblpCQTNGQk5FRUpJQUlnQ0dvaUFpQUhJQUpyUVlBTlFlQU9RWkFaSUFVb0FvVHFBU0FGS0FLYzZ3RWdEeUFVRUNFaUIwR0lmMHNOQ2lBQ0lBZHFJQU5ySWdJaENTQUNRWWgvU3cwS0N5QU9JQTlCQUV4eURRRUxRYnAvSVFrTUNBc2dKU0FPYXlFSklBWWdBbXNoQmlBQ0lBTnFJUWNDUUFKQUFrQWdDa1VFUUNBUFFRbElJQVVwQThqcEFVS0JnSUFJVkhJTkFpQW9LQUlBSWdKQkNHb2hFaUFDS0FJRUlRcEJBQ0VEUVFBaEFnTkFJQU1nQ25aRkJFQWdBaUFTSUFOQkEzUnFMUUFDUVJaTGFpRUNJQU5CQVdvaEF3d0JDd3NnQlVFQU5nS2M2d0VnQWtFSUlBcHJkRUVVVHcwQkRBTUxJQVZCQURZQ25Pc0JDeUFFSUFVb0F2RHFBU0lETmdMY0FTQUpJQTVxSVJZZ0F5QUZLQUtBNndGcUlSY0NRQ0FQUlFSQUlBNGhCd3dCQ3lBRktBSzQ2UUVoR2lBRktBSzA2UUVoR0NBRktBS3c2UUVoRWlBRlFRRTJBb1RxQVVFQUlRTURRQ0FEUVFOSEJFQWdCQ0FEUVFKMElnSnFJQUlnQldwQnJOQUJhaWdDQURZQ1pDQURRUUZxSVFNTUFRc0xRV3doQ1NBRVFUaHFJZ0lnQnlBR0VBMUJpSDlMRFFOQkNDQVBJQTlCQ0U0YklSOGdOQ0FDSUFVb0FnQVFIaUF6SUFJZ0JTZ0NDQkFlSURJZ0FpQUZLQUlFRUI0Z0RpQVNheUVaUVFBaENBTkFJQVJCT0dvUUQwRURSaUFJSUI5T2NrVUVRQ0FFS0FKUUlBUW9Ba3hCQTNScUtRSUFJa0NuSWdkQkVIWWlFVUgvQVhFaEN5QUVLQUpnSUFRb0FseEJBM1JxS1FJQUlrR25JZ3hCRUhZaUlVSC9BWEVoRUNBRUtBSllJQVFvQWxSQkEzUnFLUUlBSWtKQ0lJaW5JUVlnUVVJZ2lDQkFRaUNJcHlFREFrQWdRa0lRaUtjaUNrSC9BWEVpQWtFQ1R3UkFBa0FnQWtFWlNTQS9Rb0dBZ0JCVWNrVUVRQ0FFUVNBZ0JDZ0NQQ0lLYXlJTklBSWdBaUFOU3hzaUV5QUthallDUENBR0lBUW9BamdnQ25SQkFDQVRhM1lnQWlBVGF5SVRkR29oQ2lBRVFUaHFFQThhSUFJZ0RVME5BU0FFSUFRb0Fqd2lBaUFUYWpZQ1BDQUVLQUk0SUFKMFFRQWdFMnQySUFwcUlRb01BUXNnQkNBQ0lBUW9BandpRFdvMkFqd2dCQ2dDT0NBTmRFRUFJQXByZGlBR2FpRUtJQVJCT0dvUUR4b0xJQVFwQW1RaFJDQUVJQW8yQW1RZ0JDQkVOd0pvREFFTEFrQWdBa1VFUUNBREJFQWdCQ2dDWkNFS0RBTUxJQVFvQW1naENnd0JDeUFFSUFRb0Fqd2lBa0VCYWpZQ1BBSi9JQVlnQTBWcUlBUW9BamdnQW5SQkgzWnFJZ0pCQTBZRVFDQUVLQUprUVFGckRBRUxJQUpCQW5RZ0JHb29BbVFMSWdaRklBWnFJUW9nQWtFQlJ3UkFJQVFnQkNnQ2FEWUNiQXNMSUFRZ0JDZ0NaRFlDYUNBRUlBbzJBbVFMcHlFQ0lFRkNnSUQ4QjROUVJRUkFJQVFnQkNnQ1BDSUdJQkJxTmdJOElBUW9BamdnQm5SQkFDQWhhM1lnQW1vaEFnc2dDeUFRYWtFVVR3UkFJQVJCT0dvUUR4b0xJRUJDZ0lEOEI0TlFSUVJBSUFRZ0JDZ0NQQ0lHSUF0cU5nSThJQVFvQWpnZ0JuUkJBQ0FSYTNZZ0Eyb2hBd3NnQkVFNGFoQVBHaUFFSUFRb0FqZ2lCa0VBSUFkQkdIWWlDeUFFS0FJOGFpSVFhM1lnQzBFQ2RFR2dIV29vQWdCeElBZEIvLzhEY1dvMkFrd2dCQ0FRSUF4QkdIWWlCMm9pQ3pZQ1BDQUVJQWRCQW5SQm9CMXFLQUlBSUFaQkFDQUxhM1p4SUF4Qi8vOERjV28yQWx3Z0JFRTRhaEFQR2lBRUlFS25JZ1pCR0hZaUJ5QUVLQUk4YWlJTE5nSThJQVFnQjBFQ2RFR2dIV29vQWdBZ0JDZ0NPRUVBSUF0cmRuRWdCa0gvL3dOeGFqWUNWQ0FFUWZBQWFpQUlRUXhzYWlJR0lBbzJBZ2dnQmlBQ05nSUVJQVlnQXpZQ0FDQUlRUUZxSVFnZ0F5QVphaUFDYWlFWkRBRUxDeUFJSUI5SURRTWdGa0VnYXlFaElBNGhCd05BSUFSQk9Hb1FEMEVEUmlBSUlBOU9ja1VFUUNBRUtBSlFJQVFvQWt4QkEzUnFLUUlBSWtDbklnWkJFSFlpSTBIL0FYRWhDaUFFS0FKZ0lBUW9BbHhCQTNScUtRSUFJa0duSWcxQkVIWWlJRUgvQVhFaEV5QUVLQUpZSUFRb0FsUkJBM1JxS1FJQUlrSkNJSWluSVFNZ1FVSWdpQ0JBUWlDSXB5RUxBa0FnUWtJUWlLY2lERUgvQVhFaUFrRUNUd1JBQWtBZ0FrRVpTU0EvUW9HQWdCQlVja1VFUUNBRVFTQWdCQ2dDUENJTWF5SVJJQUlnQWlBUlN4c2lFQ0FNYWpZQ1BDQURJQVFvQWpnZ0RIUkJBQ0FRYTNZZ0FpQVFheUlNZEdvaEVDQUVRVGhxRUE4YUlBSWdFVTBOQVNBRUlBUW9BandpQWlBTWFqWUNQQ0FFS0FJNElBSjBRUUFnREd0MklCQnFJUkFNQVFzZ0JDQUNJQVFvQWp3aUVHbzJBandnQkNnQ09DQVFkRUVBSUF4cmRpQURhaUVRSUFSQk9Hb1FEeG9MSUFRcEFtUWhSQ0FFSUJBMkFtUWdCQ0JFTndKb0RBRUxBa0FnQWtVRVFDQUxCRUFnQkNnQ1pDRVFEQU1MSUFRb0FtZ2hFQXdCQ3lBRUlBUW9BandpQWtFQmFqWUNQQUovSUFNZ0MwVnFJQVFvQWpnZ0FuUkJIM1pxSWdKQkEwWUVRQ0FFS0FKa1FRRnJEQUVMSUFKQkFuUWdCR29vQW1RTElnTkZJQU5xSVJBZ0FrRUJSd1JBSUFRZ0JDZ0NhRFlDYkFzTElBUWdCQ2dDWkRZQ2FDQUVJQkEyQW1RTHB5RU1JRUZDZ0lEOEI0TlFSUVJBSUFRZ0JDZ0NQQ0lDSUJOcU5nSThJQVFvQWpnZ0FuUkJBQ0FnYTNZZ0RHb2hEQXNnQ2lBVGFrRVVUd1JBSUFSQk9Hb1FEeG9MSUVCQ2dJRDhCNE5RUlFSQUlBUWdCQ2dDUENJQ0lBcHFOZ0k4SUFRb0FqZ2dBblJCQUNBamEzWWdDMm9oQ3dzZ0JFRTRhaEFQR2lBRUlBUW9BamdpQWtFQUlBWkJHSFlpQXlBRUtBSThhaUlLYTNZZ0EwRUNkRUdnSFdvb0FnQnhJQVpCLy84RGNXbzJBa3dnQkNBS0lBMUJHSFlpQTJvaUJqWUNQQ0FFSUFOQkFuUkJvQjFxS0FJQUlBSkJBQ0FHYTNaeElBMUIvLzhEY1dvMkFsd2dCRUU0YWhBUEdpQUVJRUtuSWdKQkdIWWlBeUFFS0FJOGFpSUdOZ0k4SUFRZ0EwRUNkRUdnSFdvb0FnQWdCQ2dDT0VFQUlBWnJkbkVnQWtILy93TnhhallDVkFKQUFrQUNRQ0FFS0FMY0FTSURJQVJCOEFCcUlBaEJCM0ZCREd4cUloTW9BZ0FpRVdvaUl5QVhTdzBBSUFjZ0V5Z0NCQ0lOSUJGcUlncHFJQ0ZMRFFBZ0NrRWdhaUFXSUFkclRRMEJDeUFFSUJNb0FnZzJBaGdnQkNBVEtRSUFOd01RSUFjZ0ZpQUVRUkJxSUFSQjNBRnFJQmNnRWlBWUlCb1FIeUVLREFFTElBY2dFV29oQWlBVEtBSUlJUVlnQnlBREtRQUFOd0FBSUFjZ0F5a0FDRGNBQ0FKQUlCRkJFVWtOQUNBSElBTXBBQkEzQUJBZ0J5QURLUUFZTndBWUlCRkJFR3RCRVVnTkFDQURRUkJxSVFNZ0IwRWdhaUVSQTBBZ0VTQURLUUFRTndBQUlCRWdBeWtBR0RjQUNDQVJJQU1wQUNBM0FCQWdFU0FES1FBb053QVlJQU5CSUdvaEF5QVJRU0JxSWhFZ0Fra05BQXNMSUFJZ0Jtc2hBeUFFSUNNMkF0d0JJQUlnRW1zZ0Jra0VRQ0FHSUFJZ0dHdExEUWNnR2lBYUlBTWdFbXNpQTJvaUVTQU5hazhFUUNBQ0lCRWdEUkFLR2d3Q0N5QURJQTFxSVEwZ0FpQVJRUUFnQTJzUUNpQURheUVDSUJJaEF3c2dCa0VRVHdSQUlBSWdBeWtBQURjQUFDQUNJQU1wQUFnM0FBZ2dEVUVSU0EwQklBSWdEV29oQmlBQ1FSQnFJUUlEUUNBQ0lBTXBBQkEzQUFBZ0FpQURLUUFZTndBSUlBSWdBeWtBSURjQUVDQUNJQU1wQUNnM0FCZ2dBMEVnYWlFRElBSkJJR29pQWlBR1NRMEFDd3dCQ3dKQUlBWkJCMDBFUUNBQ0lBTXRBQUE2QUFBZ0FpQURMUUFCT2dBQklBSWdBeTBBQWpvQUFpQUNJQU10QUFNNkFBTWdBaUFESUFaQkFuUWlCa0hBSG1vb0FnQnFJZ01vQUFBMkFBUWdBeUFHUWVBZWFpZ0NBR3NoQXd3QkN5QUNJQU1wQUFBM0FBQUxJQTFCQ1VrTkFDQUNJQTFxSVJFZ0FrRUlhaUlHSUFOQkNHb2lBMnRCRDB3RVFBTkFJQVlnQXlrQUFEY0FBQ0FEUVFocUlRTWdCa0VJYWlJR0lCRkpEUUFNQWdzQUN5QUdJQU1wQUFBM0FBQWdCaUFES1FBSU53QUlJQTFCR1VnTkFDQUNRUmhxSVFJRFFDQUNJQU1wQUJBM0FBQWdBaUFES1FBWU53QUlJQUlnQXlrQUlEY0FFQ0FDSUFNcEFDZzNBQmdnQTBFZ2FpRURJQUpCSUdvaUFpQVJTUTBBQ3dzZ0NrR0lmMHNFUUNBS0lRa01CZ1VnRXlBUU5nSUlJQk1nRERZQ0JDQVRJQXMyQWdBZ0NFRUJhaUVJSUFjZ0Ntb2hCeUFMSUJscUlBeHFJUmtNQWdzQUN3c2dDQ0FQU0EwRElBZ2dIMnNoQmdOQUFrQWdCaUFQVGdSQVFRQWhBd05BSUFOQkEwWU5BaUFGSUFOQkFuUWlBbXBCck5BQmFpQUNJQVJxS0FKa05nSUFJQU5CQVdvaEF3d0FDd0FMQWtBQ1FBSkFJQVFvQXR3QklnTWdCRUh3QUdvZ0JrRUhjVUVNYkdvaUNDZ0NBQ0lNYWlJUUlCZExEUUFnQnlBSUtBSUVJZ3NnREdvaUNtb2dJVXNOQUNBS1FTQnFJQllnQjJ0TkRRRUxJQVFnQ0NnQ0NEWUNLQ0FFSUFncEFnQTNBeUFnQnlBV0lBUkJJR29nQkVIY0FXb2dGeUFTSUJnZ0doQWZJUW9NQVFzZ0J5QU1haUVDSUFnb0FnZ2hDQ0FISUFNcEFBQTNBQUFnQnlBREtRQUlOd0FJQWtBZ0RFRVJTUTBBSUFjZ0F5a0FFRGNBRUNBSElBTXBBQmczQUJnZ0RFRVFhMEVSU0EwQUlBTkJFR29oQXlBSFFTQnFJUXdEUUNBTUlBTXBBQkEzQUFBZ0RDQURLUUFZTndBSUlBd2dBeWtBSURjQUVDQU1JQU1wQUNnM0FCZ2dBMEVnYWlFRElBeEJJR29pRENBQ1NRMEFDd3NnQWlBSWF5RURJQVFnRURZQzNBRWdBaUFTYXlBSVNRUkFJQWdnQWlBWWEwc05CeUFhSUJvZ0F5QVNheUlEYWlJTUlBdHFUd1JBSUFJZ0RDQUxFQW9hREFJTElBTWdDMm9oQ3lBQ0lBeEJBQ0FEYXhBS0lBTnJJUUlnRWlFREN5QUlRUkJQQkVBZ0FpQURLUUFBTndBQUlBSWdBeWtBQ0RjQUNDQUxRUkZJRFFFZ0FpQUxhaUVJSUFKQkVHb2hBZ05BSUFJZ0F5a0FFRGNBQUNBQ0lBTXBBQmczQUFnZ0FpQURLUUFnTndBUUlBSWdBeWtBS0RjQUdDQURRU0JxSVFNZ0FrRWdhaUlDSUFoSkRRQUxEQUVMQWtBZ0NFRUhUUVJBSUFJZ0F5MEFBRG9BQUNBQ0lBTXRBQUU2QUFFZ0FpQURMUUFDT2dBQ0lBSWdBeTBBQXpvQUF5QUNJQU1nQ0VFQ2RDSUlRY0FlYWlnQ0FHb2lBeWdBQURZQUJDQURJQWhCNEI1cUtBSUFheUVEREFFTElBSWdBeWtBQURjQUFBc2dDMEVKU1EwQUlBSWdDMm9oRENBQ1FRaHFJZ2dnQTBFSWFpSURhMEVQVEFSQUEwQWdDQ0FES1FBQU53QUFJQU5CQ0dvaEF5QUlRUWhxSWdnZ0RFa05BQXdDQ3dBTElBZ2dBeWtBQURjQUFDQUlJQU1wQUFnM0FBZ2dDMEVaU0EwQUlBSkJHR29oQWdOQUlBSWdBeWtBRURjQUFDQUNJQU1wQUJnM0FBZ2dBaUFES1FBZ053QVFJQUlnQXlrQUtEY0FHQ0FEUVNCcUlRTWdBa0VnYWlJQ0lBeEpEUUFMQ3lBS1FZaC9Td1JBSUFvaENRd0dCU0FHUVFGcUlRWWdCeUFLYWlFSERBSUxBQXNMSUFRb0F0d0JJUU1MUWJwL0lRa2dGeUFEYXlJQ0lCWWdCMnRMRFFJZ0J3Ui9JQWNnQXlBQ0VBSWdBbW9GUVFBTElBNXJJUWtNQWdzZ0JVRUFOZ0tjNndFTElBUWdCU2dDOE9vQklnTTJBdHdCSUFrZ0Rtb2hEQ0FESUFVb0FvRHJBV29oRUFKQUlBOUZCRUFnRGlFR0RBRUxJQVVvQXJqcEFTRU5JQVVvQXJUcEFTRVRJQVVvQXJEcEFTRVNJQVZCQVRZQ2hPb0JRUUFoQXdOQUlBTkJBMGNFUUNBRUlBTkJBblFpQW1vZ0FpQUZha0dzMEFGcUtBSUFOZ0tjQVNBRFFRRnFJUU1NQVFzTFFXd2hDU0FFUWZBQWFpSUNJQWNnQmhBTlFZaC9TdzBCSURFZ0FpQUZLQUlBRUI0Z01DQUNJQVVvQWdnUUhpQXZJQUlnQlNnQ0JCQWVJQXhCSUdzaEdDQU9JUVlEUUNBRUtBS0lBU0FFS0FLRUFVRURkR29wQWdBaVFLY2lDa0VRZGlJWlFmOEJjU0VMSUFRb0FwZ0JJQVFvQXBRQlFRTjBhaWtDQUNKQnB5SVdRUkIySWg5Qi93RnhJUm9nQkNnQ2tBRWdCQ2dDakFGQkEzUnFLUUlBSWtKQ0lJaW5JUWNnUVVJZ2lDQkFRaUNJcHlFREFrQWdRa0lRaUtjaUNFSC9BWEVpQWtFQ1R3UkFBa0FnQWtFWlNTQS9Rb0dBZ0JCVWNrVUVRQ0FFUVNBZ0JDZ0NkQ0lJYXlJUklBSWdBaUFSU3hzaUZ5QUlhallDZENBSElBUW9BbkFnQ0hSQkFDQVhhM1lnQWlBWGF5SVhkR29oQ0NBRVFmQUFhaEFQR2lBQ0lCRk5EUUVnQkNBRUtBSjBJZ0lnRjJvMkFuUWdCQ2dDY0NBQ2RFRUFJQmRyZGlBSWFpRUlEQUVMSUFRZ0FpQUVLQUowSWhGcU5nSjBJQVFvQW5BZ0VYUkJBQ0FJYTNZZ0Iyb2hDQ0FFUWZBQWFoQVBHZ3NnQkNrQ25BRWhSQ0FFSUFnMkFwd0JJQVFnUkRjQ29BRU1BUXNDUUNBQ1JRUkFJQU1FUUNBRUtBS2NBU0VJREFNTElBUW9BcUFCSVFnTUFRc2dCQ0FFS0FKMElnSkJBV28yQW5RQ2Z5QUhJQU5GYWlBRUtBSndJQUowUVI5MmFpSUNRUU5HQkVBZ0JDZ0NuQUZCQVdzTUFRc2dBa0VDZENBRWFpZ0NuQUVMSWdkRklBZHFJUWdnQWtFQlJ3UkFJQVFnQkNnQ29BRTJBcVFCQ3dzZ0JDQUVLQUtjQVRZQ29BRWdCQ0FJTmdLY0FRdW5JUUlnUVVLQWdQd0hnMUJGQkVBZ0JDQUVLQUowSWdjZ0dtbzJBblFnQkNnQ2NDQUhkRUVBSUI5cmRpQUNhaUVDQ3lBTElCcHFRUlJQQkVBZ0JFSHdBR29RRHhvTElFQkNnSUQ4QjROUVJRUkFJQVFnQkNnQ2RDSUhJQXRxTmdKMElBUW9BbkFnQjNSQkFDQVphM1lnQTJvaEF3c2dCRUh3QUdvUUR4b2dCQ0FFS0FKd0lnZEJBQ0FLUVJoMklnc2dCQ2dDZEdvaUdtdDJJQXRCQW5SQm9CMXFLQUlBY1NBS1FmLy9BM0ZxTmdLRUFTQUVJQm9nRmtFWWRpSUthaUlMTmdKMElBUWdDa0VDZEVHZ0hXb29BZ0FnQjBFQUlBdHJkbkVnRmtILy93TnhhallDbEFFZ0JFSHdBR29RRHhvZ0JDQkNweUlIUVJoMklnb2dCQ2dDZEdvaUN6WUNkQ0FFSUFwQkFuUkJvQjFxS0FJQUlBUW9BbkJCQUNBTGEzWnhJQWRCLy84RGNXbzJBb3dCSUFRZ0F6WUNPQ0FFSUFJMkFqd2dCQ0FJTmdKQUFrQUNRQUpBSUFRb0F0d0JJZ3NnQTJvaUZpQVFTdzBBSUFZZ0FpQURhaUlLYWlBWVN3MEFJQXBCSUdvZ0RDQUdhMDBOQVFzZ0JDQUVRVUJyS0FJQU5nSUlJQVFnQkNrRE9EY0RBQ0FHSUF3Z0JDQUVRZHdCYWlBUUlCSWdFeUFORUI4aENnd0JDeUFESUFacUlRY2dCaUFMS1FBQU53QUFJQVlnQ3lrQUNEY0FDQUpBSUFOQkVVa05BQ0FHSUFzcEFCQTNBQkFnQmlBTEtRQVlOd0FZSUFOQkVHdEJFVWdOQUNBTFFSQnFJUU1nQmtFZ2FpRUxBMEFnQ3lBREtRQVFOd0FBSUFzZ0F5a0FHRGNBQ0NBTElBTXBBQ0EzQUJBZ0N5QURLUUFvTndBWUlBTkJJR29oQXlBTFFTQnFJZ3NnQjBrTkFBc0xJQWNnQ0dzaEF5QUVJQlkyQXR3QklBY2dFbXNnQ0VrRVFDQUlJQWNnRTJ0TERRUWdEU0FOSUFNZ0Vtc2lBMm9pQ3lBQ2FrOEVRQ0FISUFzZ0FoQUtHZ3dDQ3lBSElBdEJBQ0FEYXhBS0lBUWdBaUFEYWlJQ05nSThJQU5ySVFjZ0VpRURDeUFJUVJCUEJFQWdCeUFES1FBQU53QUFJQWNnQXlrQUNEY0FDQ0FDUVJGSURRRWdBaUFIYWlFSUlBZEJFR29oQWdOQUlBSWdBeWtBRURjQUFDQUNJQU1wQUJnM0FBZ2dBaUFES1FBZ053QVFJQUlnQXlrQUtEY0FHQ0FEUVNCcUlRTWdBa0VnYWlJQ0lBaEpEUUFMREFFTEFrQWdDRUVIVFFSQUlBY2dBeTBBQURvQUFDQUhJQU10QUFFNkFBRWdCeUFETFFBQ09nQUNJQWNnQXkwQUF6b0FBeUFISUFNZ0NFRUNkQ0lJUWNBZWFpZ0NBR29pQXlnQUFEWUFCQ0FESUFoQjRCNXFLQUlBYXlFRERBRUxJQWNnQXlrQUFEY0FBQXNnQWtFSlNRMEFJQUlnQjJvaEN5QUhRUWhxSWdnZ0EwRUlhaUlEYTBFUFRBUkFBMEFnQ0NBREtRQUFOd0FBSUFOQkNHb2hBeUFJUVFocUlnZ2dDMGtOQUF3Q0N3QUxJQWdnQXlrQUFEY0FBQ0FJSUFNcEFBZzNBQWdnQWtFWlNBMEFJQWRCR0dvaEFnTkFJQUlnQXlrQUVEY0FBQ0FDSUFNcEFCZzNBQWdnQWlBREtRQWdOd0FRSUFJZ0F5a0FLRGNBR0NBRFFTQnFJUU1nQWtFZ2FpSUNJQXRKRFFBTEN5QUtRWWgvU3dSQUlBb2hDUXdEQ3lBR0lBcHFJUVlnQkVId0FHb1FEeUVESUE5QkFXc2lEdzBBQzBFQUlRSWdBMEVDU1EwQkEwQWdBa0VEUndSQUlBVWdBa0VDZENJRGFrR3MwQUZxSUFNZ0JHb29BcHdCTmdJQUlBSkJBV29oQWd3QkN3c2dCQ2dDM0FFaEF3dEJ1bjhoQ1NBUUlBTnJJZ0lnRENBR2Ewc05BQ0FHQkg4Z0JpQURJQUlRQWlBQ2FnVkJBQXNnRG1zaENRc2dDVUdJZjBzTkJnc0NRQ0FGS0FMczZnRkZEUUFnQlNBRktRT0k2Z0VnQ2ExOE53T0k2Z0VDUUNBRktBTFE2Z0VpQWlBSmFpSUlRUjlOQkVBZ0RrVU5BU0FDSUNKcUlBNGdDUkFDR2lBRktBTFE2Z0VnQ1dvaENBd0JDeUFPSVFNZ0FnUkFJQUlnSW1vZ0EwRWdJQUpyRUFJYUlBVW9BdERxQVNFQ0lBVkJBRFlDME9vQklBVWdCU2tEa09vQklBVXBBTERxQVVMUDF0Tyswc2VyMlVKK2ZFSWZpVUtIbGErdm1MYmVtNTUvZmpjRGtPb0JJQVVnQlNrRG1Pb0JJQVVwQUxqcUFVTFAxdE8rMHNlcjJVSitmRUlmaVVLSGxhK3ZtTGJlbTU1L2ZqY0RtT29CSUFVZ0JTa0RvT29CSUFVcEFNRHFBVUxQMXRPKzBzZXIyVUorZkVJZmlVS0hsYSt2bUxiZW01NS9mamNEb09vQklBVWdCU2tEcU9vQklBVXBBTWpxQVVMUDF0Tyswc2VyMlVKK2ZFSWZpVUtIbGErdm1MYmVtNTUvZmpjRHFPb0JJQU1nQW10QklHb2hBd3NnQ1NBT2FpSUNJQU5CSUdwUEJFQWdBa0VnYXlFR0lBVXBBNmpxQVNFL0lBVXBBNkRxQVNGQUlBVXBBNWpxQVNGQklBVXBBNURxQVNGQ0EwQWdBeWtBR0VMUDF0Tyswc2VyMlVKK0lEOThRaCtKUW9lVnI2K1l0dDZibm45K0lUOGdBeWtBRUVMUDF0Tyswc2VyMlVKK0lFQjhRaCtKUW9lVnI2K1l0dDZibm45K0lVQWdBeWtBQ0VMUDF0Tyswc2VyMlVKK0lFRjhRaCtKUW9lVnI2K1l0dDZibm45K0lVRWdBeWtBQUVMUDF0Tyswc2VyMlVKK0lFSjhRaCtKUW9lVnI2K1l0dDZibm45K0lVSWdBMEVnYWlJRElBWk5EUUFMSUFVZ1B6Y0RxT29CSUFVZ1FEY0RvT29CSUFVZ1FUY0RtT29CSUFVZ1FqY0RrT29CQ3lBQ0lBTk5EUUVnSWlBRElBSWdBMnNpQ0JBQ0dnc2dCU0FJTmdMUTZnRUxJRFVnRldzaEF5QVZJQnRxSVFJZ0NTQU9haUVPSUFRb0FqQkZEUUFMSUNrcEF3QWlQMEovVVNBL0lBNGdIV3VzVVhKRkJFQkJiQ0VKREFZTElBVW9BdURwQVFSQVFXb2hDU0FEUVFSSkRRWWdCU2dDNk9vQlJRUkFJQ0lnQlNnQzBPb0JhaUVLQW40Z0JTa0RpT29CSWo5Q0lGb0VRQ0FGS1FPWTZnRWlRRUlIaVNBRktRT1E2Z0VpUVVJQmlYd2dCU2tEb09vQklrSkNESWw4SUFVcEE2anFBU0pEUWhLSmZDQkJRcy9XMDc3U3g2dlpRbjVDSDRsQ2g1V3ZyNWkyM3B1ZWYzNkZRb2VWcjYrWXR0NmJubjkrUXAyanRlcURzWTJLK2dCOUlFQkN6OWJUdnRMSHE5bENma0lmaVVLSGxhK3ZtTGJlbTU1L2ZvVkNoNVd2cjVpMjNwdWVmMzVDbmFPMTZvT3hqWXI2QUgwZ1FrTFAxdE8rMHNlcjJVSitRaCtKUW9lVnI2K1l0dDZibm45K2hVS0hsYSt2bUxiZW01NS9ma0tkbzdYcWc3R05pdm9BZlNCRFFzL1cwNzdTeDZ2WlFuNUNINGxDaDVXdnI1aTIzcHVlZjM2RlFvZVZyNitZdHQ2Ym5uOStRcDJqdGVxRHNZMksrZ0I5REFFTElBVXBBNkRxQVVMRno5bXk4ZVc2NmlkOEN5QS9mQ0UvSUNJaEJnTkFJQW9nQmtFSWFpSUhUd1JBSUFZcEFBQkN6OWJUdnRMSHE5bENma0lmaVVLSGxhK3ZtTGJlbTU1L2ZpQS9oVUliaVVLSGxhK3ZtTGJlbTU1L2ZrS2RvN1hxZzdHTml2b0FmU0UvSUFjaEJnd0JDd3NDUUNBS0lBWkJCR29pQ0VrRVFDQUdJUWdNQVFzZ0JqVUFBRUtIbGErdm1MYmVtNTUvZmlBL2hVSVhpVUxQMXRPKzBzZXIyVUorUXZuejNmR1o5cG1yRm53aFB3c0RRQ0FJSUFwSkJFQWdDREVBQUVMRno5bXk4ZVc2NmlkK0lEK0ZRZ3VKUW9lVnI2K1l0dDZibm45K0lUOGdDRUVCYWlFSURBRUxDeUFDS0FBQUlEOUNJWWdnUDRWQ3o5YlR2dExIcTlsQ2ZpSS9RaDJJSUQrRlF2bnozZkdaOXBtckZuNGlQMElnaUNBL2hhZEhEUWNMSUFOQkJHc2hBeUFDUVFScUlRSUxJQTRnSFdzaUNVR0pmMDhOQkNBQklBbHJJUUVnQ1NBZGFpRWRRUUVoUGd3QkN3dEJ1SDhoQnlBRERRUWdIU0FBYXlFSERBUUxRV3doQ1F3QkMwRzRmeUVKQzBHNGZ5RUhJQWxCZGtZZ1BuRU5BUXNnQ1NFSEN5Z0NBQTBBSUFWQi9Pb0JhaWdDQUNFQklBVkIrT29CYWlnQ0FDRUFJQVVRR0NBRktBS3c2d0VnQUNBQkVCTWdCVUVBTmdLdzZ3RWdCU2dDcE9zQklnSUVRQUpBQWtBQ1FBSkFJQUlvQWdBaUF3UkFJQUJGRFFJZ0FTQURJQUFSQWdBTUFRc2dBRVVOQWdzZ0FTQUNJQUFSQWdBTUFnc2dBeEFHQ3lBQ0VBWUxJQVZCQURZQ3BPc0JDeUFBQkVBZ0FTQUZJQUFSQWdBTUFRc2dCUkFHQ3lBRVFlQUJhaVFBSUFjTEM2Z1ZDUUJCaUFnTERRRUFBQUFCQUFBQUFnQUFBQUlBUWFBSUM3TUdBUUFBQUFFQUFBQUNBQUFBQWdBQUFDWUFBQUNDQUFBQUlRVUFBRW9BQUFCbkNBQUFKZ0FBQU1BQkFBQ0FBQUFBU1FVQUFFb0FBQUMrQ0FBQUtRQUFBQ3dDQUFDQUFBQUFTUVVBQUVvQUFBQytDQUFBTHdBQUFNb0NBQUNBQUFBQWlnVUFBRW9BQUFDRUNRQUFOUUFBQUhNREFBQ0FBQUFBblFVQUFFb0FBQUNnQ1FBQVBRQUFBSUVEQUFDQUFBQUE2d1VBQUVzQUFBQStDZ0FBUkFBQUFKNERBQUNBQUFBQVRRWUFBRXNBQUFDcUNnQUFTd0FBQUxNREFBQ0FBQUFBd1FZQUFFMEFBQUFmRFFBQVRRQUFBRk1FQUFDQUFBQUFJd2dBQUZFQUFBQ21Ed0FBVkFBQUFKa0VBQUNBQUFBQVN3a0FBRmNBQUFDeEVnQUFXQUFBQU5vRUFBQ0FBQUFBYndrQUFGMEFBQUFqRkFBQVZBQUFBRVVGQUFDQUFBQUFWQW9BQUdvQUFBQ01GQUFBYWdBQUFLOEZBQUNBQUFBQWRna0FBSHdBQUFCT0VBQUFmQUFBQU5JQ0FBQ0FBQUFBWXdjQUFKRUFBQUNRQndBQWtnQUFBQUFBQUFBQkFBQUFBUUFBQUFVQUFBQU5BQUFBSFFBQUFEMEFBQUI5QUFBQS9RQUFBUDBCQUFEOUF3QUEvUWNBQVAwUEFBRDlId0FBL1Q4QUFQMS9BQUQ5L3dBQS9mOEJBUDMvQXdEOS93Y0EvZjhQQVAzL0h3RDkvejhBL2Y5L0FQMy8vd0Q5Ly84Qi9mLy9BLzMvL3dmOS8vOFAvZi8vSC8zLy96LzkvLzkvQUFBQUFBRUFBQUFDQUFBQUF3QUFBQVFBQUFBRkFBQUFCZ0FBQUFjQUFBQUlBQUFBQ1FBQUFBb0FBQUFMQUFBQURBQUFBQTBBQUFBT0FBQUFEd0FBQUJBQUFBQVJBQUFBRWdBQUFCTUFBQUFVQUFBQUZRQUFBQllBQUFBWEFBQUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFCd0FBQUFkQUFBQUhnQUFBQjhBQUFBREFBQUFCQUFBQUFVQUFBQUdBQUFBQndBQUFBZ0FBQUFKQUFBQUNnQUFBQXNBQUFBTUFBQUFEUUFBQUE0QUFBQVBBQUFBRUFBQUFCRUFBQUFTQUFBQUV3QUFBQlFBQUFBVkFBQUFGZ0FBQUJjQUFBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQUhBQUFBQjBBQUFBZUFBQUFId0FBQUNBQUFBQWhBQUFBSWdBQUFDTUFBQUFsQUFBQUp3QUFBQ2tBQUFBckFBQUFMd0FBQURNQUFBQTdBQUFBUXdBQUFGTUFBQUJqQUFBQWd3QUFBQU1CQUFBREFnQUFBd1FBQUFNSUFBQURFQUFBQXlBQUFBTkFBQUFEZ0FBQUF3QUJBRUhnRHd0UkFRQUFBQUVBQUFBQkFBQUFBUUFBQUFJQUFBQUNBQUFBQXdBQUFBTUFBQUFFQUFBQUJBQUFBQVVBQUFBSEFBQUFDQUFBQUFrQUFBQUtBQUFBQ3dBQUFBd0FBQUFOQUFBQURnQUFBQThBQUFBUUFFSEVFQXVMQVFFQUFBQUNBQUFBQXdBQUFBUUFBQUFGQUFBQUJnQUFBQWNBQUFBSUFBQUFDUUFBQUFvQUFBQUxBQUFBREFBQUFBMEFBQUFPQUFBQUR3QUFBQkFBQUFBU0FBQUFGQUFBQUJZQUFBQVlBQUFBSEFBQUFDQUFBQUFvQUFBQU1BQUFBRUFBQUFDQUFBQUFBQUVBQUFBQ0FBQUFCQUFBQUFnQUFBQVFBQUFBSUFBQUFFQUFBQUNBQUFBQUFBRUFRWkFTQytZRUFRQUFBQUVBQUFBQkFBQUFBUUFBQUFJQUFBQUNBQUFBQXdBQUFBTUFBQUFFQUFBQUJnQUFBQWNBQUFBSUFBQUFDUUFBQUFvQUFBQUxBQUFBREFBQUFBMEFBQUFPQUFBQUR3QUFBQkFBQUFBQkFBQUFCQUFBQUFnQUFBQUFBQUFBQVFBQkFRWUFBQUFBQUFBRUFBQUFBQkFBQUFRQUFBQUFJQUFBQlFFQUFBQUFBQUFGQXdBQUFBQUFBQVVFQUFBQUFBQUFCUVlBQUFBQUFBQUZCd0FBQUFBQUFBVUpBQUFBQUFBQUJRb0FBQUFBQUFBRkRBQUFBQUFBQUFZT0FBQUFBQUFCQlJBQUFBQUFBQUVGRkFBQUFBQUFBUVVXQUFBQUFBQUNCUndBQUFBQUFBTUZJQUFBQUFBQUJBVXdBQUFBSUFBR0JVQUFBQUFBQUFjRmdBQUFBQUFBQ0FZQUFRQUFBQUFLQmdBRUFBQUFBQXdHQUJBQUFDQUFBQVFBQUFBQUFBQUFCQUVBQUFBQUFBQUZBZ0FBQUNBQUFBVUVBQUFBQUFBQUJRVUFBQUFnQUFBRkJ3QUFBQUFBQUFVSUFBQUFJQUFBQlFvQUFBQUFBQUFGQ3dBQUFBQUFBQVlOQUFBQUlBQUJCUkFBQUFBQUFBRUZFZ0FBQUNBQUFRVVdBQUFBQUFBQ0JSZ0FBQUFnQUFNRklBQUFBQUFBQXdVb0FBQUFBQUFHQkVBQUFBQVFBQVlFUUFBQUFDQUFCd1dBQUFBQUFBQUpCZ0FDQUFBQUFBc0dBQWdBQURBQUFBUUFBQUFBRUFBQUJBRUFBQUFnQUFBRkFnQUFBQ0FBQUFVREFBQUFJQUFBQlFVQUFBQWdBQUFGQmdBQUFDQUFBQVVJQUFBQUlBQUFCUWtBQUFBZ0FBQUZDd0FBQUNBQUFBVU1BQUFBQUFBQUJnOEFBQUFnQUFFRkVnQUFBQ0FBQVFVVUFBQUFJQUFDQlJnQUFBQWdBQUlGSEFBQUFDQUFBd1VvQUFBQUlBQUVCVEFBQUFBQUFCQUdBQUFCQUFBQUR3WUFnQUFBQUFBT0JnQkFBQUFBQUEwR0FDQUFRWUFYQzRjQ0FRQUJBUVVBQUFBQUFBQUZBQUFBQUFBQUJnUTlBQUFBQUFBSkJmMEJBQUFBQUE4Ri9YOEFBQUFBRlFYOS94OEFBQUFEQlFVQUFBQUFBQWNFZlFBQUFBQUFEQVg5RHdBQUFBQVNCZjMvQXdBQUFCY0YvZjkvQUFBQUJRVWRBQUFBQUFBSUJQMEFBQUFBQUE0Ri9UOEFBQUFBRkFYOS93OEFBQUFDQlFFQUFBQVFBQWNFZlFBQUFBQUFDd1g5QndBQUFBQVJCZjMvQVFBQUFCWUYvZjgvQUFBQUJBVU5BQUFBRUFBSUJQMEFBQUFBQUEwRi9SOEFBQUFBRXdYOS93Y0FBQUFCQlFFQUFBQVFBQVlFUFFBQUFBQUFDZ1g5QXdBQUFBQVFCZjMvQUFBQUFCd0YvZi8vRHdBQUd3WDkvLzhIQUFBYUJmMy8vd01BQUJrRi9mLy9BUUFBR0FYOS8vOEFRWkFaQzRZRUFRQUJBUVlBQUFBQUFBQUdBd0FBQUFBQUFBUUVBQUFBSUFBQUJRVUFBQUFBQUFBRkJnQUFBQUFBQUFVSUFBQUFBQUFBQlFrQUFBQUFBQUFGQ3dBQUFBQUFBQVlOQUFBQUFBQUFCaEFBQUFBQUFBQUdFd0FBQUFBQUFBWVdBQUFBQUFBQUJoa0FBQUFBQUFBR0hBQUFBQUFBQUFZZkFBQUFBQUFBQmlJQUFBQUFBQUVHSlFBQUFBQUFBUVlwQUFBQUFBQUNCaThBQUFBQUFBTUdPd0FBQUFBQUJBWlRBQUFBQUFBSEJvTUFBQUFBQUFrR0F3SUFBQkFBQUFRRUFBQUFBQUFBQkFVQUFBQWdBQUFGQmdBQUFBQUFBQVVIQUFBQUlBQUFCUWtBQUFBQUFBQUZDZ0FBQUFBQUFBWU1BQUFBQUFBQUJnOEFBQUFBQUFBR0VnQUFBQUFBQUFZVkFBQUFBQUFBQmhnQUFBQUFBQUFHR3dBQUFBQUFBQVllQUFBQUFBQUFCaUVBQUFBQUFBRUdJd0FBQUFBQUFRWW5BQUFBQUFBQ0Jpc0FBQUFBQUFNR013QUFBQUFBQkFaREFBQUFBQUFGQm1NQUFBQUFBQWdHQXdFQUFDQUFBQVFFQUFBQU1BQUFCQVFBQUFBUUFBQUVCUUFBQUNBQUFBVUhBQUFBSUFBQUJRZ0FBQUFnQUFBRkNnQUFBQ0FBQUFVTEFBQUFBQUFBQmc0QUFBQUFBQUFHRVFBQUFBQUFBQVlVQUFBQUFBQUFCaGNBQUFBQUFBQUdHZ0FBQUFBQUFBWWRBQUFBQUFBQUJpQUFBQUFBQUJBR0F3QUJBQUFBRHdZRGdBQUFBQUFPQmdOQUFBQUFBQTBHQXlBQUFBQUFEQVlERUFBQUFBQUxCZ01JQUFBQUFBb0dBd1FBUWFRZEM5a0JBUUFBQUFNQUFBQUhBQUFBRHdBQUFCOEFBQUEvQUFBQWZ3QUFBUDhBQUFEL0FRQUEvd01BQVA4SEFBRC9Ed0FBL3g4QUFQOC9BQUQvZndBQS8vOEFBUC8vQVFELy93TUEvLzhIQVAvL0R3RC8veDhBLy84L0FQLy9md0QvLy84QS8vLy9BZi8vL3dQLy8vOEgvLy8vRC8vLy94Ly8vLzgvLy8vL2Z3QUFBQUFCQUFBQUFnQUFBQVFBQUFBQUFBQUFBZ0FBQUFRQUFBQUlBQUFBQUFBQUFBRUFBQUFDQUFBQUFRQUFBQVFBQUFBRUFBQUFCQUFBQUFRQUFBQUlBQUFBQ0FBQUFBZ0FBQUFIQUFBQUNBQUFBQWtBQUFBS0FBQUFDd0JCZ0I4TEE0QVJBUT09Ijt2YXIgT0k9bmV3IHlBLFRJPSExO2FzeW5jIGZ1bmN0aW9uIGNlKEEsSSl7bGV0IHQ9bnVsbDt0eXBlb2YgQSE9InN0cmluZyI/dD1BLmhyZWY6QS5zdGFydHNXaXRoKCJodHRwIik/dD1BOnQ9YCR7SX0vJHtBfWAsdC5lbmRzV2l0aCgiLmpzIikmJih0PXQuc3Vic3RyaW5nKDAsdC5sZW5ndGgtMykpLHQuZW5kc1dpdGgoIi53YXNtIikmJih0PXQuc3Vic3RyaW5nKDAsdC5sZW5ndGgtNSkpO2xldCBlPWAke3R9Lndhc21gLGc9YXdhaXQgZEEuZ2V0KGAke2V9LnpzdGAse3Jlc3BvbnNlVHlwZToiYXJyYXlidWZmZXIifSk7VEl8fChhd2FpdCBPSS5pbml0KCksVEk9ITApO2xldCByPU9JLmRlY29kZShuZXcgVWludDhBcnJheShnLmRhdGEpKS5idWZmZXI7cmV0dXJuKGF3YWl0IGltcG9ydChgJHt0fS5qc2ApKS5kZWZhdWx0KHt3YXNtQmluYXJ5OnJ9KX12YXIgeEk9Y2U7dmFyIHdBPW5ldyBNYXA7YXN5bmMgZnVuY3Rpb24gZmUoQSxJKXtsZXQgdD1BLGU9QSxnPW51bGw7cmV0dXJuIHR5cGVvZiBBIT0ic3RyaW5nIiYmKHQ9bmV3IFVSTChBLmhyZWYpLGU9dC5ocmVmKSx3QS5oYXMoZSl8fHdBLnNldChlLGF3YWl0IHhJKHQsSSkpLGc9d0EuZ2V0KGUpLGd9dmFyIFBJPWZlO3ZhciBsZT17VGV4dEZpbGU6IlRleHRGaWxlIixCaW5hcnlGaWxlOiJCaW5hcnlGaWxlIixUZXh0U3RyZWFtOiJUZXh0U3RyZWFtIixCaW5hcnlTdHJlYW06IkJpbmFyeVN0cmVhbSIsSW1hZ2U6IkltYWdlIixNZXNoOiJNZXNoIixQb2x5RGF0YToiUG9seURhdGEiLEpzb25Db21wYXRpYmxlOiJKc29uQ29tcGF0aWJsZSJ9LEQ9bGU7dmFyIERlPXtJbnQ4OiJpbnQ4IixVSW50ODoidWludDgiLEludDE2OiJpbnQxNiIsVUludDE2OiJ1aW50MTYiLEludDMyOiJpbnQzMiIsVUludDMyOiJ1aW50MzIiLEludDY0OiJpbnQ2NCIsVUludDY0OiJ1aW50NjQiLFNpemVWYWx1ZVR5cGU6InVpbnQ2NCIsSWRlbnRpZmllclR5cGU6InVpbnQ2NCIsSW5kZXhWYWx1ZVR5cGU6ImludDY0IixPZmZzZXRWYWx1ZVR5cGU6ImludDY0In0scD1EZTt2YXIgdWU9e0Zsb2F0MzI6ImZsb2F0MzIiLEZsb2F0NjQ6ImZsb2F0NjQiLFNwYWNlUHJlY2lzaW9uVHlwZToiZmxvYXQ2NCJ9LFA9dWU7ZnVuY3Rpb24gaGUoQSxJKXtsZXQgdD1udWxsO3N3aXRjaChBKXtjYXNlIHAuVUludDg6e3Q9bmV3IFVpbnQ4QXJyYXkoSSk7YnJlYWt9Y2FzZSBwLkludDg6e3Q9bmV3IEludDhBcnJheShJKTticmVha31jYXNlIHAuVUludDE2Ont0PW5ldyBVaW50MTZBcnJheShJKTticmVha31jYXNlIHAuSW50MTY6e3Q9bmV3IEludDE2QXJyYXkoSSk7YnJlYWt9Y2FzZSBwLlVJbnQzMjp7dD1uZXcgVWludDMyQXJyYXkoSSk7YnJlYWt9Y2FzZSBwLkludDMyOnt0PW5ldyBJbnQzMkFycmF5KEkpO2JyZWFrfWNhc2UgcC5VSW50NjQ6e3R5cGVvZiBnbG9iYWxUaGlzLkJpZ1VpbnQ2NEFycmF5PT0iZnVuY3Rpb24iP3Q9bmV3IEJpZ1VpbnQ2NEFycmF5KEkpOnQ9bmV3IFVpbnQ4QXJyYXkoSSk7YnJlYWt9Y2FzZSBwLkludDY0Ont0eXBlb2YgZ2xvYmFsVGhpcy5CaWdJbnQ2NEFycmF5PT0iZnVuY3Rpb24iP3Q9bmV3IEJpZ0ludDY0QXJyYXkoSSk6dD1uZXcgVWludDhBcnJheShJKTticmVha31jYXNlIFAuRmxvYXQzMjp7dD1uZXcgRmxvYXQzMkFycmF5KEkpO2JyZWFrfWNhc2UgUC5GbG9hdDY0Ont0PW5ldyBGbG9hdDY0QXJyYXkoSSk7YnJlYWt9Y2FzZSJudWxsIjp7dD1udWxsO2JyZWFrfWNhc2UgbnVsbDp7dD1udWxsO2JyZWFrfWRlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJUeXBlIGlzIG5vdCBzdXBwb3J0ZWQgYXMgYSBUeXBlZEFycmF5Iil9cmV0dXJuIHR9dmFyIFk9aGU7dmFyIFpJPXR5cGVvZiBnbG9iYWxUaGlzLlNoYXJlZEFycmF5QnVmZmVyPT0iZnVuY3Rpb24iLGpJPW5ldyBUZXh0RW5jb2RlcixXST1uZXcgVGV4dERlY29kZXIoInV0Zi04Iik7ZnVuY3Rpb24gZGUoQSxJKXtsZXQgdD17ZmxhZ3M6InIiLGVuY29kaW5nOiJiaW5hcnkifSxlPUEuZnNfb3BlbihJLHQuZmxhZ3MpLGk9QS5mc19zdGF0KEkpLnNpemUscj1udWxsO1pJP3I9bmV3IFNoYXJlZEFycmF5QnVmZmVyKGkpOnI9bmV3IEFycmF5QnVmZmVyKGkpO2xldCBzPW5ldyBVaW50OEFycmF5KHIpO3JldHVybiBBLmZzX3JlYWQoZSxzLDAsaSwwKSxBLmZzX2Nsb3NlKGUpLHN9ZnVuY3Rpb24gVkkoQSxJLHQpe2xldCBlPW51bGw7Wkk/ZT1uZXcgU2hhcmVkQXJyYXlCdWZmZXIodCk6ZT1uZXcgQXJyYXlCdWZmZXIodCk7bGV0IGc9bmV3IFVpbnQ4QXJyYXkoZSksaT1uZXcgVWludDhBcnJheShBLkhFQVBVOC5idWZmZXIsSSx0KTtyZXR1cm4gZy5zZXQoaSksZ31mdW5jdGlvbiB5KEEsSSx0LGUpe2xldCBnPTA7cmV0dXJuIEkhPT1udWxsJiYoZz1BLmNjYWxsKCJpdGtfd2FzbV9pbnB1dF9hcnJheV9hbGxvYyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCx0LGUsSS5idWZmZXIuYnl0ZUxlbmd0aF0pLEEuSEVBUFU4LnNldChuZXcgVWludDhBcnJheShJLmJ1ZmZlciksZykpLGd9ZnVuY3Rpb24gaihBLEksdCl7bGV0IGU9SlNPTi5zdHJpbmdpZnkoSSksZz1BLmNjYWxsKCJpdGtfd2FzbV9pbnB1dF9qc29uX2FsbG9jIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLHQsZS5sZW5ndGhdKTtBLndyaXRlQXNjaWlUb01lbW9yeShlLGcsITEpfWZ1bmN0aW9uIFMoQSxJLHQsZSl7bGV0IGc9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsSSx0XSksaT1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfc2l6ZSIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxJLHRdKSxyPVZJKEEsZyxpKTtyZXR1cm4gWShlLHIuYnVmZmVyKX1mdW5jdGlvbiB6QShBLEkpe2xldCB0PUEuY2NhbGwoIml0a193YXNtX291dHB1dF9qc29uX2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIl0sWzAsSV0pLGU9QS5Bc2NpaVRvU3RyaW5nKHQpO3JldHVybiBKU09OLnBhcnNlKGUpfWZ1bmN0aW9uIHllKEEsSSx0LGUpe2UhPW51bGwmJmUubGVuZ3RoPjAmJmUuZm9yRWFjaChmdW5jdGlvbihuLEMpe3N3aXRjaChuLnR5cGUpe2Nhc2UgRC5UZXh0U3RyZWFtOntsZXQgbz1qSS5lbmNvZGUobi5kYXRhLmRhdGEpLGY9eShBLG8sQywwKSxRPXtzaXplOm8uYnVmZmVyLmJ5dGVMZW5ndGgsZGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2Z9YH07aihBLFEsQyk7YnJlYWt9Y2FzZSBELkpzb25Db21wYXRpYmxlOntsZXQgbz1qSS5lbmNvZGUoSlNPTi5zdHJpbmdpZnkobi5kYXRhKSksZj15KEEsbyxDLDApLFE9e3NpemU6by5idWZmZXIuYnl0ZUxlbmd0aCxkYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Zn1gfTtqKEEsUSxDKTticmVha31jYXNlIEQuQmluYXJ5U3RyZWFtOntsZXQgbz1uLmRhdGEuZGF0YSxmPXkoQSxvLEMsMCksUT17c2l6ZTpvLmJ1ZmZlci5ieXRlTGVuZ3RoLGRhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtmfWB9O2ooQSxRLEMpO2JyZWFrfWNhc2UgRC5UZXh0RmlsZTp7QS5mc193cml0ZUZpbGUobi5kYXRhLnBhdGgsbi5kYXRhLmRhdGEpO2JyZWFrfWNhc2UgRC5CaW5hcnlGaWxlOntBLmZzX3dyaXRlRmlsZShuLmRhdGEucGF0aCxuLmRhdGEuZGF0YSk7YnJlYWt9Y2FzZSBELkltYWdlOntsZXQgbz1uLmRhdGEsZj15KEEsby5kYXRhLEMsMCksUT15KEEsby5kaXJlY3Rpb24sQywxKSxFPXR5cGVvZiBvLm1ldGFkYXRhPy5lbnRyaWVzPCJ1Ij9KU09OLnN0cmluZ2lmeShBcnJheS5mcm9tKG8ubWV0YWRhdGEuZW50cmllcygpKSk6IltdIixjPXtpbWFnZVR5cGU6by5pbWFnZVR5cGUsbmFtZTpvLm5hbWUsb3JpZ2luOm8ub3JpZ2luLHNwYWNpbmc6by5zcGFjaW5nLGRpcmVjdGlvbjpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke1F9YCxzaXplOm8uc2l6ZSxkYXRhOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7Zn1gLG1ldGFkYXRhOkV9O2ooQSxjLEMpO2JyZWFrfWNhc2UgRC5NZXNoOntsZXQgbz1uLmRhdGEsZj15KEEsby5wb2ludHMsQywwKSxRPXkoQSxvLmNlbGxzLEMsMSksRT15KEEsby5wb2ludERhdGEsQywyKSxjPXkoQSxvLmNlbGxEYXRhLEMsMyksdT17bWVzaFR5cGU6by5tZXNoVHlwZSxuYW1lOm8ubmFtZSxudW1iZXJPZlBvaW50czpvLm51bWJlck9mUG9pbnRzLHBvaW50czpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2Z9YCxudW1iZXJPZkNlbGxzOm8ubnVtYmVyT2ZDZWxscyxjZWxsczpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke1F9YCxjZWxsQnVmZmVyU2l6ZTpvLmNlbGxCdWZmZXJTaXplLG51bWJlck9mUG9pbnRQaXhlbHM6by5udW1iZXJPZlBvaW50UGl4ZWxzLHBvaW50RGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke0V9YCxudW1iZXJPZkNlbGxQaXhlbHM6by5udW1iZXJPZkNlbGxQaXhlbHMsY2VsbERhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtjfWB9O2ooQSx1LEMpO2JyZWFrfWNhc2UgRC5Qb2x5RGF0YTp7bGV0IG89bi5kYXRhLGY9eShBLG8ucG9pbnRzLEMsMCksUT15KEEsby52ZXJ0aWNlcyxDLDEpLEU9eShBLG8ubGluZXMsQywyKSxjPXkoQSxvLnBvbHlnb25zLEMsMyksdT15KEEsby50cmlhbmdsZVN0cmlwcyxDLDQpLGQ9eShBLG8ucG9pbnREYXRhLEMsNSksUj15KEEsby5wb2ludERhdGEsQyw2KSxOPXtwb2x5RGF0YVR5cGU6by5wb2x5RGF0YVR5cGUsbmFtZTpvLm5hbWUsbnVtYmVyT2ZQb2ludHM6by5udW1iZXJPZlBvaW50cyxwb2ludHM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtmfWAsdmVydGljZXNCdWZmZXJTaXplOm8udmVydGljZXNCdWZmZXJTaXplLHZlcnRpY2VzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7UX1gLGxpbmVzQnVmZmVyU2l6ZTpvLmxpbmVzQnVmZmVyU2l6ZSxsaW5lczpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke0V9YCxwb2x5Z29uc0J1ZmZlclNpemU6by5wb2x5Z29uc0J1ZmZlclNpemUscG9seWdvbnM6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtjfWAsdHJpYW5nbGVTdHJpcHNCdWZmZXJTaXplOm8udHJpYW5nbGVTdHJpcHNCdWZmZXJTaXplLHRyaWFuZ2xlU3RyaXBzOmBkYXRhOmFwcGxpY2F0aW9uL3ZuZC5pdGsuYWRkcmVzcywwOiR7dX1gLG51bWJlck9mUG9pbnRQaXhlbHM6by5udW1iZXJPZlBvaW50UGl4ZWxzLHBvaW50RGF0YTpgZGF0YTphcHBsaWNhdGlvbi92bmQuaXRrLmFkZHJlc3MsMDoke2R9YCxudW1iZXJPZkNlbGxQaXhlbHM6by5udW1iZXJPZkNlbGxQaXhlbHMsY2VsbERhdGE6YGRhdGE6YXBwbGljYXRpb24vdm5kLml0ay5hZGRyZXNzLDA6JHtSfWB9O2ooQSxOLEMpO2JyZWFrfWRlZmF1bHQ6dGhyb3cgRXJyb3IoIlVuc3VwcG9ydGVkIGlucHV0IEludGVyZmFjZVR5cGUiKX19KSxBLnJlc2V0TW9kdWxlU3Rkb3V0KCksQS5yZXNldE1vZHVsZVN0ZGVycigpO2xldCBnPUEuc3RhY2tTYXZlKCksaT0wO3RyeXtpPUEuY2FsbE1haW4oSS5zbGljZSgpKX1jYXRjaChuKXt0aHJvdyB0eXBlb2Ygbj09Im51bWJlciImJihjb25zb2xlLmxvZygiRXhjZXB0aW9uIHdoaWxlIHJ1bm5pbmcgcGlwZWxpbmU6IiksY29uc29sZS5sb2coInN0ZG91dDoiLEEuZ2V0TW9kdWxlU3Rkb3V0KCkpLGNvbnNvbGUuZXJyb3IoInN0ZGVycjoiLEEuZ2V0TW9kdWxlU3RkZXJyKCkpLHR5cGVvZiBBLmdldEV4Y2VwdGlvbk1lc3NhZ2U8InUiP2NvbnNvbGUuZXJyb3IoImV4Y2VwdGlvbjoiLEEuZ2V0RXhjZXB0aW9uTWVzc2FnZShuKSk6Y29uc29sZS5lcnJvcigiQnVpbGQgbW9kdWxlIGluIERlYnVnIG1vZGUgZm9yIGV4Y2VwdGlvbiBtZXNzYWdlIGluZm9ybWF0aW9uLiIpKSxufWZpbmFsbHl7QS5zdGFja1Jlc3RvcmUoZyl9bGV0IHI9QS5nZXRNb2R1bGVTdGRvdXQoKSxzPUEuZ2V0TW9kdWxlU3RkZXJyKCksYT1bXTtyZXR1cm4gdCE9bnVsbCYmdC5sZW5ndGg+MCYmaT09PTAmJnQuZm9yRWFjaChmdW5jdGlvbihuLEMpe2xldCBvPW51bGw7c3dpdGNoKG4udHlwZSl7Y2FzZSBELlRleHRTdHJlYW06e2xldCBRPUEuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9hZGRyZXNzIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLEMsMF0pLEU9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X3NpemUiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsQywwXSksYz1uZXcgVWludDhBcnJheShBLkhFQVBVOC5idWZmZXIsUSxFKTtvPXtkYXRhOldJLmRlY29kZShjKX07YnJlYWt9Y2FzZSBELkpzb25Db21wYXRpYmxlOntsZXQgUT1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfYWRkcmVzcyIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxDLDBdKSxFPUEuY2NhbGwoIml0a193YXNtX291dHB1dF9hcnJheV9zaXplIiwibnVtYmVyIixbIm51bWJlciIsIm51bWJlciIsIm51bWJlciJdLFswLEMsMF0pLGM9bmV3IFVpbnQ4QXJyYXkoQS5IRUFQVTguYnVmZmVyLFEsRSk7bz1KU09OLnBhcnNlKFdJLmRlY29kZShjKSk7YnJlYWt9Y2FzZSBELkJpbmFyeVN0cmVhbTp7bGV0IFE9QS5jY2FsbCgiaXRrX3dhc21fb3V0cHV0X2FycmF5X2FkZHJlc3MiLCJudW1iZXIiLFsibnVtYmVyIiwibnVtYmVyIiwibnVtYmVyIl0sWzAsQywwXSksRT1BLmNjYWxsKCJpdGtfd2FzbV9vdXRwdXRfYXJyYXlfc2l6ZSIsIm51bWJlciIsWyJudW1iZXIiLCJudW1iZXIiLCJudW1iZXIiXSxbMCxDLDBdKTtvPXtkYXRhOlZJKEEsUSxFKX07YnJlYWt9Y2FzZSBELlRleHRGaWxlOntvPXtwYXRoOm4uZGF0YS5wYXRoLGRhdGE6QS5mc19yZWFkRmlsZShuLmRhdGEucGF0aCx7ZW5jb2Rpbmc6InV0ZjgifSl9O2JyZWFrfWNhc2UgRC5CaW5hcnlGaWxlOntvPXtwYXRoOm4uZGF0YS5wYXRoLGRhdGE6ZGUoQSxuLmRhdGEucGF0aCl9O2JyZWFrfWNhc2UgRC5JbWFnZTp7bGV0IFE9ekEoQSxDKTtRLmRhdGE9UyhBLEMsMCxRLmltYWdlVHlwZS5jb21wb25lbnRUeXBlKSxRLmRpcmVjdGlvbj1TKEEsQywxLFAuRmxvYXQ2NCksUS5tZXRhZGF0YT1uZXcgTWFwKFEubWV0YWRhdGEpLG89UTticmVha31jYXNlIEQuTWVzaDp7bGV0IFE9ekEoQSxDKTtRLm51bWJlck9mUG9pbnRzPjA/US5wb2ludHM9UyhBLEMsMCxRLm1lc2hUeXBlLnBvaW50Q29tcG9uZW50VHlwZSk6US5wb2ludHM9WShRLm1lc2hUeXBlLnBvaW50Q29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLFEubnVtYmVyT2ZDZWxscz4wP1EuY2VsbHM9UyhBLEMsMSxRLm1lc2hUeXBlLmNlbGxDb21wb25lbnRUeXBlKTpRLmNlbGxzPVkoUS5tZXNoVHlwZS5jZWxsQ29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLFEubnVtYmVyT2ZQb2ludFBpeGVscz4wP1EucG9pbnREYXRhPVMoQSxDLDIsUS5tZXNoVHlwZS5wb2ludFBpeGVsQ29tcG9uZW50VHlwZSk6US5wb2ludERhdGE9WShRLm1lc2hUeXBlLnBvaW50UGl4ZWxDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksUS5udW1iZXJPZkNlbGxQaXhlbHM+MD9RLmNlbGxEYXRhPVMoQSxDLDMsUS5tZXNoVHlwZS5jZWxsUGl4ZWxDb21wb25lbnRUeXBlKTpRLmNlbGxEYXRhPVkoUS5tZXNoVHlwZS5jZWxsUGl4ZWxDb21wb25lbnRUeXBlLG5ldyBBcnJheUJ1ZmZlcigwKSksbz1RO2JyZWFrfWNhc2UgRC5Qb2x5RGF0YTp7bGV0IFE9ekEoQSxDKTtRLm51bWJlck9mUG9pbnRzPjA/US5wb2ludHM9UyhBLEMsMCxQLkZsb2F0MzIpOlEucG9pbnRzPW5ldyBGbG9hdDMyQXJyYXksUS52ZXJ0aWNlc0J1ZmZlclNpemU+MD9RLnZlcnRpY2VzPVMoQSxDLDEscC5VSW50MzIpOlEudmVydGljZXM9bmV3IFVpbnQzMkFycmF5LFEubGluZXNCdWZmZXJTaXplPjA/US5saW5lcz1TKEEsQywyLHAuVUludDMyKTpRLmxpbmVzPW5ldyBVaW50MzJBcnJheSxRLnBvbHlnb25zQnVmZmVyU2l6ZT4wP1EucG9seWdvbnM9UyhBLEMsMyxwLlVJbnQzMik6US5wb2x5Z29ucz1uZXcgVWludDMyQXJyYXksUS50cmlhbmdsZVN0cmlwc0J1ZmZlclNpemU+MD9RLnRyaWFuZ2xlU3RyaXBzPVMoQSxDLDQscC5VSW50MzIpOlEudHJpYW5nbGVTdHJpcHM9bmV3IFVpbnQzMkFycmF5LFEubnVtYmVyT2ZQb2ludFBpeGVscz4wP1EucG9pbnREYXRhPVMoQSxDLDUsUS5wb2x5RGF0YVR5cGUucG9pbnRQaXhlbENvbXBvbmVudFR5cGUpOlEucG9pbnREYXRhPVkoUS5wb2x5RGF0YVR5cGUucG9pbnRQaXhlbENvbXBvbmVudFR5cGUsbmV3IEFycmF5QnVmZmVyKDApKSxRLm51bWJlck9mQ2VsbFBpeGVscz4wP1EuY2VsbERhdGE9UyhBLEMsNixRLnBvbHlEYXRhVHlwZS5jZWxsUGl4ZWxDb21wb25lbnRUeXBlKTpRLmNlbGxEYXRhPVkoUS5wb2x5RGF0YVR5cGUuY2VsbFBpeGVsQ29tcG9uZW50VHlwZSxuZXcgQXJyYXlCdWZmZXIoMCkpLG89UTticmVha31kZWZhdWx0OnRocm93IEVycm9yKCJVbnN1cHBvcnRlZCBvdXRwdXQgSW50ZXJmYWNlVHlwZSIpfWxldCBmPXt0eXBlOm4udHlwZSxkYXRhOm99O2EucHVzaChmKX0pLHtyZXR1cm5WYWx1ZTppLHN0ZG91dDpyLHN0ZGVycjpzLG91dHB1dHM6YX19dmFyIFhJPXllO3ZhciB3ZT10eXBlb2YgZ2xvYmFsVGhpcy5TaGFyZWRBcnJheUJ1ZmZlcjwidSI7ZnVuY3Rpb24gbWUoQSl7aWYoQT09bnVsbClyZXR1cm5bXTtsZXQgST1bXTtmb3IobGV0IHQ9MDt0PEEubGVuZ3RoO3QrKyl7bGV0IGU9cGUoQVt0XSk7ZSE9PW51bGwmJkkucHVzaChlKX1yZXR1cm4gSX1mdW5jdGlvbiBwZShBKXtpZihBPT1udWxsKXJldHVybiBudWxsO2xldCBJPW51bGw7cmV0dXJuIEEuYnVmZmVyIT09dm9pZCAwP0k9QS5idWZmZXI6QS5ieXRlTGVuZ3RoIT09dm9pZCAwJiYoST1BKSx3ZSYmSSBpbnN0YW5jZW9mIFNoYXJlZEFycmF5QnVmZmVyP251bGw6SX12YXIgekk9bWU7ZnVuY3Rpb24gU2UoQSl7cmV0dXJuW0EuZGF0YSxBLmRpcmVjdGlvbl19dmFyIF9JPVNlO2Z1bmN0aW9uIEZlKEEpe3JldHVybltBLnBvaW50cyxBLnBvaW50RGF0YSxBLmNlbGxzLEEuY2VsbERhdGFdfXZhciB2ST1GZTtmdW5jdGlvbiBSZShBKXtyZXR1cm5bQS5wb2ludHMsQS52ZXJ0aWNlcyxBLmxpbmVzLEEucG9seWdvbnMsQS50cmlhbmdsZVN0cmlwcyxBLnBvaW50RGF0YSxBLmNlbGxEYXRhXX12YXIgJEk9UmU7YXN5bmMgZnVuY3Rpb24gTmUoQSxJLHQsZSl7bGV0IGc9WEkoQSxJLHQsZSksaT1bXTtyZXR1cm4gZy5vdXRwdXRzLmZvckVhY2goZnVuY3Rpb24ocil7aWYoci50eXBlPT09RC5CaW5hcnlTdHJlYW18fHIudHlwZT09PUQuQmluYXJ5RmlsZSl7bGV0IHM9ci5kYXRhO2kucHVzaChzKX1lbHNlIGlmKHIudHlwZT09PUQuSW1hZ2Upe2xldCBzPXIuZGF0YTtpLnB1c2goLi4uX0kocykpfWVsc2UgaWYoci50eXBlPT09RC5NZXNoKXtsZXQgcz1yLmRhdGE7aS5wdXNoKC4uLnZJKHMpKX1lbHNlIGlmKHIudHlwZT09PUQuUG9seURhdGEpe2xldCBzPXIuZGF0YTtpLnB1c2goLi4uJEkocykpfX0pLFNBKGcsekkoaSkpfXZhciBBdD1OZTt2YXIgVWU9e3J1blBpcGVsaW5lOmFzeW5jIGZ1bmN0aW9uKEEsSSx0LGUsZyl7bGV0IGk9YXdhaXQgUEkoQSxJKTtyZXR1cm4gYXdhaXQgQXQoaSx0LGUsZyl9fTtvQShVZSk7JTBBLyohIEJ1bmRsZWQgbGljZW5zZSBpbmZvcm1hdGlvbjolMEElMEFjb21saW5rL2Rpc3QvZXNtL2NvbWxpbmsubWpzOiUwQSAgKCoqJTBBICAgKiBAbGljZW5zZSUwQSAgICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQyUwQSAgICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjAlMEEgICAqKSUwQSovJTBBJzt1dChFdCk7ZXhwb3J0e3RpIGFzIGFwcGx5UHJlc2VudGF0aW9uU3RhdGVUb0ltYWdlLE4gYXMgZ2V0UGlwZWxpbmVXb3JrZXJVcmwsVSBhcyBnZXRQaXBlbGluZXNCYXNlVXJsLGlpIGFzIHJlYWREaWNvbUVuY2Fwc3VsYXRlZFBkZixnaSBhcyByZWFkRGljb21UYWdzLGNpIGFzIHJlYWRJbWFnZURpY29tRmlsZVNlcmllcyxuZSBhcyByZWFkSW1hZ2VEaWNvbUZpbGVTZXJpZXNXb3JrZXJGdW5jdGlvbix1dCBhcyBzZXRQaXBlbGluZVdvcmtlclVybCxmcyBhcyBzZXRQaXBlbGluZXNCYXNlVXJsLG9pIGFzIHN0cnVjdHVyZWRSZXBvcnRUb0h0bWwsc2kgYXMgc3RydWN0dXJlZFJlcG9ydFRvVGV4dH07Ci8qISBCdW5kbGVkIGxpY2Vuc2UgaW5mb3JtYXRpb246Cgpjb21saW5rL2Rpc3QvZXNtL2NvbWxpbmsubWpzOgogICgqKgogICAqIEBsaWNlbnNlCiAgICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQwogICAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wCiAgICopCiovCg=="""
default_config = JsPackageConfig(default_js_module)
js_package = JsPackage(default_config)
